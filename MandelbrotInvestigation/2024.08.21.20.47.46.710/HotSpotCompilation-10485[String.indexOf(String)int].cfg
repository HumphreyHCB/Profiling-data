begin_compilation
  name " HotSpotCompilation-10485[java.lang.String.indexOf(String)]"
  method "HotSpotCompilation-10485[java.lang.String.indexOf(String)]"
  date 1724269761874
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a231 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a231  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v240 v238 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v239 v241 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<String.indexOf(String)>
localsSize: 3
locksSize: 0
sourceFile: String.java
sourceLine: 2592
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v207 a231 i233 i235 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a231 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-14347|0xffffffffffffc7f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.indexOf(String.java:2594) [bci: 25]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v241 
lastLocationAccess: - 
=== Succesors ===
next: i232 
=== Usages ===
a66 v242 v244 v245 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v241 lastLocationAccess: - #next: i232  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i232 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.indexOf(String.java:2593) [bci: 7]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v239 
lastLocationAccess: - 
=== Succesors ===
next: i233 
=== Usages ===
v155 
=== Predecessor ===
a231 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v239 lastLocationAccess: - #next: i233  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a231 
=== Succesors ===
=== Usages ===
i233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i233 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-17419|0xffffffffffffbbf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v242 
lastLocationAccess: - 
=== Succesors ===
next: a234 
=== Usages ===
v38 i113 v158 v85 i199 v106 
=== Predecessor ===
i232 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v242 lastLocationAccess: - #next: a234  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a234 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.indexOf(String.java:2594) [bci: 21]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v240 
lastLocationAccess: - 
=== Succesors ===
next: i235 
=== Usages ===
a63 v243 
=== Predecessor ===
i233 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v240 lastLocationAccess: - #next: i235  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a234 
=== Succesors ===
=== Usages ===
i235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i235 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-18955|0xffffffffffffb5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:223) [bci: 8]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v243 
lastLocationAccess: - 
=== Succesors ===
next: i236 
=== Usages ===
v41 i199 v158 i89 
=== Predecessor ===
a234 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v243 lastLocationAccess: - #next: i236  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i236 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.indexOf(String.java:2592) [bci: 1]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v238 
lastLocationAccess: - 
=== Succesors ===
next: v182 
=== Usages ===
v157 v155 
=== Predecessor ===
i235 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v238 lastLocationAccess: - #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i232 
y: i236 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i232 y: i236  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v155 
=== Succesors ===
trueSuccessor: v180 
falseSuccessor: v181 
=== Usages ===
=== Predecessor ===
i236 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v155 #trueSuccessor: v180 #falseSuccessor: v181  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2594) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i156 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.indexOf(String.java:2594) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.indexOf(String.java:2594) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i236 
y: i156 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i236 y: i156  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2594) [bci: 17]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v157 
=== Succesors ===
trueSuccessor: v184 
falseSuccessor: v185 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v157 #trueSuccessor: v184 #falseSuccessor: v185  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2594) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2594) [bci: 17]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 v38 v41 v114 i100 i89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 2]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i233 
y: i15 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i233 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 2]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v38 
=== Succesors ===
trueSuccessor: v188 
falseSuccessor: v189 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v38 #trueSuccessor: v188 #falseSuccessor: v189  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 2]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid j214 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
rawvalue: -47891
stableDimension: 0
stamp: i32 [-47891]
stampKind: i32
value: int[-47891|0xffffffffffff44ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v188 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:223) [bci: 7]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v194 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v194  <|@  <|@
f <@~|@floating>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:223) [bci: 9]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i235 
y: i15 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i235 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:223) [bci: 9]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v41 
=== Succesors ===
trueSuccessor: v192 
falseSuccessor: v193 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v41 #trueSuccessor: v192 #falseSuccessor: v193  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:223) [bci: 9]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid j222 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i221 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
rawvalue: -48915
stableDimension: 0
stamp: i32 [-48915]
stampKind: i32
value: int[-48915|0xffffffffffff40ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v192 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 14]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:73) [bci: 37] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i235 
y: i233 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i235 y: i233  <|@  <|@
f <@~|@floating>@ <|@
tid i84 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:75) [bci: 51] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i136 i136 i136 i136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:73) [bci: 48] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v158 
=== Succesors ===
trueSuccessor: v81 
falseSuccessor: v82 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v158 #trueSuccessor: v81 #falseSuccessor: v82  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:75) [bci: 51] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v81 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:77) [bci: 53] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid a63 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.indexOf(String.java:2594) [bci: 21]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a234 
=== Succesors ===
=== Usages ===
i101 i89 i113 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a234  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:71) [bci: 2] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 i119 v159 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:77) [bci: 58] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i233 
y: i78 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i233 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a231 
=== Succesors ===
=== Usages ===
i126 i127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a231  <|@  <|@
f <@~|@floating>@ <|@
tid j52 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.indexOf(String.java:2592) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j112 i113 i89 i101 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:77) [bci: 69] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v85 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v85 #trueSuccessor: v86 #falseSuccessor: v87  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:78) [bci: 72] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i126 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:79) [bci: 91] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v244 
lastLocationAccess: - 
=== Succesors ===
next: i89 
=== Usages ===
i130 
=== Predecessor ===
v86 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v244 lastLocationAccess: - #next: i89  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:79) [bci: 94] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i126 
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode.optimizedArrayIndexOf(JavaKind, Stride, LIRGeneratorTool$ArrayIndexOfVariant, Object, long, int, int, int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:78) [bci: 97] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: MatchAny
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a63 
arrayOffset: j52 
arrayLength: i235 
fromIndex: i15 
searchValues: i130 
=== Succesors ===
next: v137 
=== Usages ===
i136 
=== Predecessor ===
i126 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a63 arrayOffset: j52 arrayLength: i235 fromIndex: i15 searchValues: i130 #next: v137  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
i89 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:81) [bci: 101] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid i199 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i235 
y: i233 
=== Succesors ===
=== Usages ===
i200 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i235 y: i233  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:81) [bci: 103] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 i200 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i200 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i199 
y: i90 
=== Succesors ===
=== Usages ===
v159 i101 v120 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i199 y: i90  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:83) [bci: 119] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i200 
y: i78 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i200 y: i78  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:83) [bci: 130] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v159 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v159 #trueSuccessor: v96 #falseSuccessor: v95  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:84) [bci: 133] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i127 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:84) [bci: 135] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v244 
lastLocationAccess: - 
=== Succesors ===
next: i129 
=== Usages ===
i131 
=== Predecessor ===
v95 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v244 lastLocationAccess: - #next: i129  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a231 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:85) [bci: 142] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v245 
lastLocationAccess: - 
=== Succesors ===
next: v98 
=== Usages ===
i133 
=== Predecessor ===
i127 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v245 lastLocationAccess: - #next: v98  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:89) [bci: 172] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i129 
=== Succesors ===
=== Usages ===
i101 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i129  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:88) [bci: 167] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i127 
=== Succesors ===
=== Usages ===
i101 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i127  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:94) [bci: 210] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i233 
y: i90 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i233 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
i129 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v99 
values: i15 i119 
=== Succesors ===
=== Usages ===
i101 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v99 values: i15 i119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 39
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v98 
=== Succesors ===
next: i101 
=== Usages ===
i100 v103 v107 v115 v121 v122 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v98 #next: i101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i101 <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode.optimizedArrayIndexOf(JavaKind, Stride, LIRGeneratorTool$ArrayIndexOfVariant, Object, long, int, int, int, int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 175] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: FindTwoConsecutive
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a63 
arrayOffset: j52 
arrayLength: i200 
fromIndex: i100 
searchValues: i131 i133 
=== Succesors ===
next: v105 
=== Usages ===
v102 i136 j237 i136 i119 
=== Predecessor ===
v99 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a63 arrayOffset: j52 arrayLength: i200 fromIndex: i100 searchValues: i131 i133 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:90) [bci: 185] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i101 
y: i15 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i101 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:90) [bci: 196] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v102 
=== Succesors ===
trueSuccessor: v103 
falseSuccessor: v104 
=== Usages ===
=== Predecessor ===
i101 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v102 #trueSuccessor: v103 #falseSuccessor: v104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:93) [bci: 201] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:94) [bci: 221] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v106 
=== Succesors ===
trueSuccessor: v107 
falseSuccessor: v109 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v106 #trueSuccessor: v107 #falseSuccessor: v109  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 227] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i113 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i113  <|@  <|@
f <@~|@floating>@ <|@
tid j237 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i101 
=== Succesors ===
=== Usages ===
j112 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i101  <|@  <|@
f <@~|@floating>@ <|@
tid j112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.byteArrayOffset(StringLatin1Snippets.java:66) [bci: 15]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:98) [bci: 234] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: i64 [16 - 4294967311] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j237 
y: j52 
=== Succesors ===
=== Usages ===
i113 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j237 y: j52  <|@  <|@
f <@~|@floating>@ <|@
tid a66 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.indexOf(String.java:2594) [bci: 25]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a231 
=== Succesors ===
=== Usages ===
i113 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i113 <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayRegionEqualsNode.regionEquals(Object, long, Object, long, int, JavaKind, Stride, Stride) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:98) [bci: 252] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
runtimeCheckedCPUFeatures: [null]
stamp: i32 [0 - 1] bits:0...0x
strideA: S1
strideB: S1
=== Inputs ===
lastLocationAccess: - 
arrayA: a63 
offsetA: j112 
arrayB: a66 
offsetB: j52 
length: i233 
dynamicStrides: - 
=== Succesors ===
next: v118 
=== Usages ===
v114 
=== Predecessor ===
v109 >@ <|@
instruction <@ArrayRegionEquals|@jdk.graal.compiler.replacements.nodes.ArrayRegionEqualsNode>@ lastLocationAccess: - arrayA: a63 offsetA: j112 arrayB: a66 offsetB: j52 length: i233 dynamicStrides: - #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 258] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i113 
y: i15 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i113 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 258] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
profileData: INJECTED designatedSuccessorProbability: 0.75
stamp: void
=== Inputs ===
condition: v114 
=== Succesors ===
trueSuccessor: v117 
falseSuccessor: v115 
=== Usages ===
=== Predecessor ===
i113 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v114 #trueSuccessor: v117 #falseSuccessor: v115  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:102) [bci: 264] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:102) [bci: 264] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: i32
=== Inputs ===
x: i101 
y: i78 
=== Succesors ===
=== Usages ===
i100 v120 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i101 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:103) [bci: 274] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i119 
y: i200 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i119 y: i200  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:103) [bci: 285] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
profileData: INJECTED designatedSuccessorProbability: 0.75
stamp: void
=== Inputs ===
condition: v120 
=== Succesors ===
trueSuccessor: v123 
falseSuccessor: v122 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v120 #trueSuccessor: v123 #falseSuccessor: v122  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
loopBegin: v99 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v99  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v99 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v99 #next: v143  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v122 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:99) [bci: 261] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v99 
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v99 #next: v140  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v115 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:95) [bci: 224] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v99 
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v99 #next: v139  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v107 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:91) [bci: 199] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v99 
=== Succesors ===
next: v138 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v99 #next: v138  <|@  <|@
f <@*|@fixed>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v103 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v134 
values: i84 i89 i84 i101 i101 i84 i84 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v134 values: i84 i89 i84 i101 i101 i84 i84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v135 v137 v138 v139 v140 v141 v143 
=== Succesors ===
next: v23 
=== Usages ===
i136 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v135 v137 v138 v139 v140 v141 v143 #next: v23  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2594) [bci: 45]
stamp: void
=== Inputs ===
memoryMap: - 
result: i136 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i136  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2594) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid j219 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i218 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
rawvalue: -46867
stableDimension: 0
stamp: i32 [-46867]
stampKind: i32
value: int[-46867|0xffffffffffff48ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v185 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v215  <|@  <|@
f <@~|@floating>@ <|@
tid j60 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2594) [bci: 21]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i216 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
rawvalue: -45843
stableDimension: 0
stamp: i32 [-45843]
stampKind: i32
value: int[-45843|0xffffffffffff4ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v181 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
stamp: i32 [-48915 - -45843] bits:1...10100xx0011101101
valueDescription: i32
=== Inputs ===
merge: v201 
values: i213 i216 i218 i221 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v201 values: i213 i216 i218 i221  <|@  <|@
f <@~|@floating>@ <|@
tid j206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
stamp: i64 [20 - 1940] bits:0...0xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v201 
values: j214 j60 j219 j222 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v201 values: j214 j60 j219 j222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v212 v215 v217 v220 
=== Succesors ===
next: v207 
=== Usages ===
i205 j206 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v212 v215 v217 v220 #next: v207  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i205 
speculation: j206 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i205 speculation: j206  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SUB (x: v6|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v21|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47891|0xffffffffffff44ed], long[1300|0x514]] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-46867|0xffffffffffff48ed], long[660|0x294]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48915|0xffffffffffff40ed], long[1940|0x794]] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45843|0xffffffffffff4ced], long[20|0x14]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD, v24|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a231 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a231  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v240 v238 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v239 v241 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<String.indexOf(String)>
localsSize: 3
locksSize: 0
sourceFile: String.java
sourceLine: 2592
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v207 a231 i233 i235 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a231 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-14347|0xffffffffffffc7f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.indexOf(String.java:2594) [bci: 25]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v241 
lastLocationAccess: - 
=== Succesors ===
next: i232 
=== Usages ===
a66 v242 v244 v245 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v241 lastLocationAccess: - #next: i232  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i232 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.indexOf(String.java:2593) [bci: 7]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v239 
lastLocationAccess: - 
=== Succesors ===
next: i233 
=== Usages ===
v155 
=== Predecessor ===
a231 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v239 lastLocationAccess: - #next: i233  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a231 
=== Succesors ===
=== Usages ===
i233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i233 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-17419|0xffffffffffffbbf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 1]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v242 
lastLocationAccess: - 
=== Succesors ===
next: a234 
=== Usages ===
v38 i113 v158 v85 i199 v106 
=== Predecessor ===
i232 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v242 lastLocationAccess: - #next: a234  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a234 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.indexOf(String.java:2594) [bci: 21]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v240 
lastLocationAccess: - 
=== Succesors ===
next: i235 
=== Usages ===
a63 v243 
=== Predecessor ===
i233 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v240 lastLocationAccess: - #next: i235  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
result [v5|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a234 
=== Succesors ===
=== Usages ===
i235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i235 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-18955|0xffffffffffffb5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:223) [bci: 8]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v243 
lastLocationAccess: - 
=== Succesors ===
next: i236 
=== Usages ===
v41 i199 v158 i89 
=== Predecessor ===
a234 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v243 lastLocationAccess: - #next: i236  <|@  <|@
f <@~|@floating>@ <|@
tid v238 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i236 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.indexOf(String.java:2592) [bci: 1]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v238 
lastLocationAccess: - 
=== Succesors ===
next: v182 
=== Usages ===
v157 v155 
=== Predecessor ===
i235 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v238 lastLocationAccess: - #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i232 
y: i236 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i232 y: i236  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v155 
=== Succesors ===
trueSuccessor: v180 
falseSuccessor: v181 
=== Usages ===
=== Predecessor ===
i236 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v155 #trueSuccessor: v180 #falseSuccessor: v181  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2594) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid i156 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.indexOf(String.java:2594) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.String.indexOf(String.java:2594) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i236 
y: i156 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i236 y: i156  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2594) [bci: 17]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v157 
=== Succesors ===
trueSuccessor: v184 
falseSuccessor: v185 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v157 #trueSuccessor: v184 #falseSuccessor: v185  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2594) [bci: 20]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2594) [bci: 17]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 v38 v41 v114 i100 i89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 2]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i233 
y: i15 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i233 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 2]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v38 
=== Succesors ===
trueSuccessor: v188 
falseSuccessor: v189 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v38 #trueSuccessor: v188 #falseSuccessor: v189  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:220) [bci: 2]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid j214 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
result int[-47891|0xffffffffffff44ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
rawvalue: -47891
stableDimension: 0
stamp: i32 [-47891]
stampKind: i32
value: int[-47891|0xffffffffffff44ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v188 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47891|0xffffffffffff44ed], long[1300|0x514]] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:223) [bci: 7]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v194 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v194  <|@  <|@
f <@~|@floating>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:223) [bci: 9]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i235 
y: i15 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i235 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:223) [bci: 9]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v41 
=== Succesors ===
trueSuccessor: v192 
falseSuccessor: v193 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v41 #trueSuccessor: v192 #falseSuccessor: v193  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:223) [bci: 9]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid j222 <|@
result long[1940|0x794] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i221 <|@
result int[-48915|0xffffffffffff40ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
rawvalue: -48915
stableDimension: 0
stamp: i32 [-48915]
stampKind: i32
value: int[-48915|0xffffffffffff40ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v192 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48915|0xffffffffffff40ed], long[1940|0x794]] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 14]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:73) [bci: 37] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i235 
y: i233 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i235 y: i233  <|@  <|@
f <@~|@floating>@ <|@
tid i84 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:75) [bci: 51] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i136 i136 i136 i136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:73) [bci: 48] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v158 
=== Succesors ===
trueSuccessor: v81 
falseSuccessor: v82 
=== Usages ===
=== Predecessor ===
v193 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v158 #trueSuccessor: v81 #falseSuccessor: v82  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:75) [bci: 51] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v135  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v81 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:77) [bci: 53] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid a63 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.indexOf(String.java:2594) [bci: 21]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a234 
=== Succesors ===
=== Usages ===
i101 i89 i113 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a234  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:71) [bci: 2] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 i119 v159 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:77) [bci: 58] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i233 
y: i78 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i233 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
result [v2|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a231 
=== Succesors ===
=== Usages ===
i126 i127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a231  <|@  <|@
f <@~|@floating>@ <|@
tid j52 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.indexOf(String.java:2592) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j112 i113 i89 i101 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:77) [bci: 69] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v85 
=== Succesors ===
trueSuccessor: v86 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v85 #trueSuccessor: v86 #falseSuccessor: v87  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:78) [bci: 72] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i126 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:79) [bci: 91] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v244 
lastLocationAccess: - 
=== Succesors ===
next: i89 
=== Usages ===
i130 
=== Predecessor ===
v86 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v244 lastLocationAccess: - #next: i89  <|@  <|@
f <@~|@floating>@ <|@
tid i130 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:79) [bci: 94] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i126 
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i89 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode.optimizedArrayIndexOf(JavaKind, Stride, LIRGeneratorTool$ArrayIndexOfVariant, Object, long, int, int, int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:78) [bci: 97] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: MatchAny
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a63 
arrayOffset: j52 
arrayLength: i235 
fromIndex: i15 
searchValues: i130 
=== Succesors ===
next: v137 
=== Usages ===
i136 
=== Predecessor ===
i126 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a63 arrayOffset: j52 arrayLength: i235 fromIndex: i15 searchValues: i130 #next: v137  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
i89 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:81) [bci: 101] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid i199 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i235 
y: i233 
=== Succesors ===
=== Usages ===
i200 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i235 y: i233  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:81) [bci: 103] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 i200 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i200 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i199 
y: i90 
=== Succesors ===
=== Usages ===
v159 i101 v120 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i199 y: i90  <|@  <|@
f <@~|@floating>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:83) [bci: 119] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i200 
y: i78 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i200 y: i78  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:83) [bci: 130] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v159 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v159 #trueSuccessor: v96 #falseSuccessor: v95  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SUB (x: v6|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:84) [bci: 133] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i127 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i127 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:84) [bci: 135] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v244 
lastLocationAccess: - 
=== Succesors ===
next: i129 
=== Usages ===
i131 
=== Predecessor ===
v95 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v244 lastLocationAccess: - #next: i129  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
result [v2|DWORD[_] * 8 + 17] <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a231 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.StringHelperIntrinsics.getByte(byte[], int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:85) [bci: 142] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v245 
lastLocationAccess: - 
=== Succesors ===
next: v98 
=== Usages ===
i133 
=== Predecessor ===
i127 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v245 lastLocationAccess: - #next: v98  <|@  <|@
f <@~|@floating>@ <|@
tid i133 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:89) [bci: 172] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i129 
=== Succesors ===
=== Usages ===
i101 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i129  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.Byte.toUnsignedInt(Byte.java:554) [bci: 4]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:88) [bci: 167] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i127 
=== Succesors ===
=== Usages ===
i101 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i127  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:94) [bci: 210] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i233 
y: i90 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i233 y: i90  <|@  <|@
f <@*|@fixed>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
i129 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i100 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v99 
values: i15 i119 
=== Succesors ===
=== Usages ===
i101 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v99 values: i15 i119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 39
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v98 
=== Succesors ===
next: i101 
=== Usages ===
i100 v103 v107 v115 v121 v122 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v98 #next: i101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i101 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode.optimizedArrayIndexOf(JavaKind, Stride, LIRGeneratorTool$ArrayIndexOfVariant, Object, long, int, int, int, int) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 175] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: FindTwoConsecutive
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a63 
arrayOffset: j52 
arrayLength: i200 
fromIndex: i100 
searchValues: i131 i133 
=== Succesors ===
next: v105 
=== Usages ===
v102 i136 j237 i136 i119 
=== Predecessor ===
v99 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a63 arrayOffset: j52 arrayLength: i200 fromIndex: i100 searchValues: i131 i133 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:90) [bci: 185] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i101 
y: i15 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i101 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:90) [bci: 196] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v102 
=== Succesors ===
trueSuccessor: v103 
falseSuccessor: v104 
=== Usages ===
=== Predecessor ===
i101 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v102 #trueSuccessor: v103 #falseSuccessor: v104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:93) [bci: 201] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:94) [bci: 221] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
profileData: INJECTED designatedSuccessorProbability: 0.25
stamp: void
=== Inputs ===
condition: v106 
=== Succesors ===
trueSuccessor: v107 
falseSuccessor: v109 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v106 #trueSuccessor: v107 #falseSuccessor: v109  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 227] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: i113 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i113  <|@  <|@
f <@~|@floating>@ <|@
tid j237 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i101 
=== Succesors ===
=== Usages ===
j112 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i101  <|@  <|@
f <@~|@floating>@ <|@
tid j112 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.byteArrayOffset(StringLatin1Snippets.java:66) [bci: 15]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:98) [bci: 234] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: i64 [16 - 4294967311] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j237 
y: j52 
=== Succesors ===
=== Usages ===
i113 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j237 y: j52  <|@  <|@
f <@~|@floating>@ <|@
tid a66 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.indexOf(String.java:2594) [bci: 25]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a231 
=== Succesors ===
=== Usages ===
i113 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a231  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i113 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ArrayRegionEqualsNode.regionEquals(Object, long, Object, long, int, JavaKind, Stride, Stride) [bci: -1]
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:98) [bci: 252] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
runtimeCheckedCPUFeatures: [null]
stamp: i32 [0 - 1] bits:0...0x
strideA: S1
strideB: S1
=== Inputs ===
lastLocationAccess: - 
arrayA: a63 
offsetA: j112 
arrayB: a66 
offsetB: j52 
length: i233 
dynamicStrides: - 
=== Succesors ===
next: v118 
=== Usages ===
v114 
=== Predecessor ===
v109 >@ <|@
instruction <@ArrayRegionEquals|@jdk.graal.compiler.replacements.nodes.ArrayRegionEqualsNode>@ lastLocationAccess: - arrayA: a63 offsetA: j112 arrayB: a66 offsetB: j52 length: i233 dynamicStrides: - #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 258] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i113 
y: i15 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i113 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:97) [bci: 258] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
profileData: INJECTED designatedSuccessorProbability: 0.75
stamp: void
=== Inputs ===
condition: v114 
=== Succesors ===
trueSuccessor: v117 
falseSuccessor: v115 
=== Usages ===
=== Predecessor ===
i113 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v114 #trueSuccessor: v117 #falseSuccessor: v115  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:102) [bci: 264] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:102) [bci: 264] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: i32
=== Inputs ===
x: i101 
y: i78 
=== Succesors ===
=== Usages ===
i100 v120 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i101 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:103) [bci: 274] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i119 
y: i200 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i119 y: i200  <|@  <|@
f <@*|@fixed>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:103) [bci: 285] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
profileData: INJECTED designatedSuccessorProbability: 0.75
stamp: void
=== Inputs ===
condition: v120 
=== Succesors ===
trueSuccessor: v123 
falseSuccessor: v122 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v120 #trueSuccessor: v123 #falseSuccessor: v122  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v21|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:87) [bci: 147] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
loopBegin: v99 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v99  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v99 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v99 #next: v143  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:105) [bci: 288] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v122 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:99) [bci: 261] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v99 
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v99 #next: v140  <|@  <|@
f <@*|@fixed>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v115 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:95) [bci: 224] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v99 
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v99 #next: v139  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v107 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(StringLatin1Snippets.java:91) [bci: 199] Substitution
at jdk.graal.compiler.replacements.StringLatin1Snippets.indexOf(byte[], int, byte[], int, int) [bci: -1] Substitution
at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v99 
=== Succesors ===
next: v138 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v99 #next: v138  <|@  <|@
f <@*|@fixed>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
v103 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i136 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v134 
values: i84 i89 i84 i101 i101 i84 i84 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v134 values: i84 i89 i84 i101 i101 i84 i84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(byte[], int, byte[], int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:226) [bci: 21]
at java.lang.String.indexOf(String.java:2594) [bci: 28]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v135 v137 v138 v139 v140 v141 v143 
=== Succesors ===
next: v23 
=== Usages ===
i136 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v135 v137 v138 v139 v140 v141 v143 #next: v23  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2594) [bci: 45]
stamp: void
=== Inputs ===
memoryMap: - 
result: i136 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i136  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2594) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid j219 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i218 <|@
result int[-46867|0xffffffffffff48ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
rawvalue: -46867
stableDimension: 0
stamp: i32 [-46867]
stampKind: i32
value: int[-46867|0xffffffffffff48ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v185 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-46867|0xffffffffffff48ed], long[660|0x294]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v215  <|@  <|@
f <@~|@floating>@ <|@
tid j60 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2594) [bci: 21]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j206 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i216 <|@
result int[-45843|0xffffffffffff4ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
rawvalue: -45843
stableDimension: 0
stamp: i32 [-45843]
stampKind: i32
value: int[-45843|0xffffffffffff4ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i205 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
v181 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45843|0xffffffffffff4ced], long[20|0x14]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i205 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
stamp: i32 [-48915 - -45843] bits:1...10100xx0011101101
valueDescription: i32
=== Inputs ===
merge: v201 
values: i213 i216 i218 i221 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v201 values: i213 i216 i218 i221  <|@  <|@
f <@~|@floating>@ <|@
tid j206 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
stamp: i64 [20 - 1940] bits:0...0xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v201 
values: j214 j60 j219 j222 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v201 values: j214 j60 j219 j222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v212 v215 v217 v220 
=== Succesors ===
next: v207 
=== Usages ===
i205 j206 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v212 v215 v217 v220 #next: v207  <|@  <|@
f <@*|@fixed>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.indexOf(String.java:2593) [bci: 7]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i205 
speculation: j206 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v201 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i205 speculation: j206  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD, v24|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SUB (x: v6|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v21|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47891|0xffffffffffff44ed], long[1300|0x514]] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-46867|0xffffffffffff48ed], long[660|0x294]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48915|0xffffffffffff40ed], long[1940|0x794]] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45843|0xffffffffffff4ced], long[20|0x14]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD, v24|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SUB (x: v6|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v21|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47891|0xffffffffffff44ed], long[1300|0x514]] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-46867|0xffffffffffff48ed], long[660|0x294]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48915|0xffffffffffff40ed], long[1940|0x794]] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45843|0xffffffffffff4ced], long[20|0x14]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD, v24|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SUB (x: v6|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v21|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47891|0xffffffffffff44ed], long[1300|0x514]] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-46867|0xffffffffffff48ed], long[660|0x294]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48915|0xffffffffffff40ed], long[1940|0x794]] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45843|0xffffffffffff4ced], long[20|0x14]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD, v24|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SUB (x: v6|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v21|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47891|0xffffffffffff44ed], long[1300|0x514]] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-46867|0xffffffffffff48ed], long[660|0x294]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48915|0xffffffffffff40ed], long[1940|0x794]] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45843|0xffffffffffff4ced], long[20|0x14]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD, v24|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SUB (x: v6|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v21|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-47891|0xffffffffffff44ed], long[1300|0x514]] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-46867|0xffffffffffff48ed], long[660|0x294]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-48915|0xffffffffffff40ed], long[1940|0x794]] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45843|0xffffffffffff4ced], long[20|0x14]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|DWORD, v24|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v7|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v11|DWORD = SUB (x: v6|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction v12|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction v13|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction v14|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  160  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r9|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction rdi|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  202  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  258  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 16] size: QWORD <|@ <|@
      nr  260  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rcx|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  270  <|@ instruction r9|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  274  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v21|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v21|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v9|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  350  <|@ instruction r9|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  354  <|@ instruction v10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  408  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction rax|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [int[-47891|0xffffffffffff44ed], long[1300|0x514]] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [int[-46867|0xffffffffffff48ed], long[660|0x294]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [int[-48915|0xffffffffffff40ed], long[1940|0x794]] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [int[-45843|0xffffffffffff4ced], long[20|0x14]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  470  <|@ instruction [v23|DWORD, v24|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v23|DWORD) size: DWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v24|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v7|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v11|DWORD = SUB (x: v6|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction v12|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction v13|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction v14|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  160  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r9|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction rdi|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  202  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  258  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 16] size: QWORD <|@ <|@
      nr  260  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rcx|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  270  <|@ instruction r9|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  274  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v21|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v21|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v9|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  350  <|@ instruction r9|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  354  <|@ instruction v10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  408  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction rax|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [int[-47891|0xffffffffffff44ed], long[1300|0x514]] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [int[-46867|0xffffffffffff48ed], long[660|0x294]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [int[-48915|0xffffffffffff40ed], long[1940|0x794]] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [int[-45843|0xffffffffffff4ced], long[20|0x14]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  470  <|@ instruction [v23|DWORD, v24|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v23|DWORD) size: DWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v24|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v22|d [0, 1[[200, 202[[272, 274[[352, 354[[426, 428[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v12|d [0, 1[[192, 201[[266, 273[[346, 353[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v18|q [0, 36[[190, 201[[264, 273[[344, 353[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 30[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v8|q [0, 34[[188, 201[[262, 273[[342, 353[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v14|d [0, 1[[198, 201[[272, 273[[352, 353[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d v15|d [0, 1[[194, 201[[268, 272[[348, 352[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v13|d [0, 1[[196, 200[[270, 272[[350, 352[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[200, 201[[272, 273[[352, 353[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[200, 201[[272, 273[[352, 353[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[200, 201[[272, 273[[352, 353[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[200, 201[[352, 353[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[200, 201[[352, 353[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[200, 201[[352, 353[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[200, 201[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [34, 88[[430, 491[34 MustHaveRegister 44 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [36, 88[[430, 491[36 MustHaveRegister 38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [38, 304[[314, 340[38 MustHaveRegister 42 MustHaveRegister 154 MustHaveRegister 156 MustHaveRegister 260 MustHaveRegister 303 LiveAtLoopEnd 340 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [40, 50[40 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [42, 304[42 MustHaveRegister 74 MustHaveRegister 98 MustHaveRegister 116 ShouldHaveRegister 136 ShouldHaveRegister 216 ShouldHaveRegister 270 ShouldHaveRegister 303 LiveAtLoopEnd  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [44, 114[44 MustHaveRegister 46 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [46, 136[[314, 346[46 MustHaveRegister 86 MustHaveRegister 98 ShouldHaveRegister 136 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [48, 62[48 MustHaveRegister 50 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v5|d [114, 304[[314, 342[114 MustHaveRegister 188 ShouldHaveRegister 262 ShouldHaveRegister 303 LiveAtLoopEnd 342 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [340, 350[340 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d rax|d [354, 357[354 MustHaveRegister 356 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v6|d [136, 138[136 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [138, 304[138 MustHaveRegister 140 ShouldHaveRegister 192 ShouldHaveRegister 292 MustHaveRegister 303 LiveAtLoopEnd  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [154, 304[154 MustHaveRegister 196 ShouldHaveRegister 303 LiveAtLoopEnd  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [156, 304[156 MustHaveRegister 198 ShouldHaveRegister 303 LiveAtLoopEnd  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v21|d [160, 194[194 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d rax|d [202, 290[[378, 387[[388, 397[202 MustHaveRegister 204 MustHaveRegister 256 ShouldHaveRegister 290 ShouldHaveRegister 386 ShouldHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v16|d [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [258, 264[258 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v2|d [260, 266[260 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d rax|d [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d v16|d [290, 303[290 MustHaveRegister 292 ShouldHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d v10|d [408, 426[426 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d -1 [470, 486[486 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q -1 [470, 488[488 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v22|d [0, 1[[200, 202[[272, 274[[352, 354[[426, 428[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v12|d [0, 1[[192, 201[[266, 273[[346, 353[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v18|q [0, 36[[190, 201[[264, 273[[344, 353[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 30[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v8|q [0, 34[[188, 201[[262, 273[[342, 353[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v14|d [0, 1[[198, 201[[272, 273[[352, 353[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d v15|d [0, 1[[194, 201[[268, 272[[348, 352[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v13|d [0, 1[[196, 200[[270, 272[[350, 352[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[200, 201[[272, 273[[352, 353[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[200, 201[[272, 273[[352, 353[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[200, 201[[272, 273[[352, 353[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[200, 201[[352, 353[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[200, 201[[352, 353[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[200, 201[[352, 353[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[200, 201[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [34, 88[[430, 491[34 MustHaveRegister 44 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [36, 88[[430, 491[36 MustHaveRegister 38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [38, 271[38 MustHaveRegister 42 MustHaveRegister 154 MustHaveRegister 156 MustHaveRegister 260 MustHaveRegister  "SpillInDominator"
  v3|d DWORD "[rcx|d]" v3|d -1 [40, 50[40 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rbx|d]" v4|d -1 [42, 304[42 MustHaveRegister 74 MustHaveRegister 98 MustHaveRegister 116 ShouldHaveRegister 136 ShouldHaveRegister 216 ShouldHaveRegister 270 ShouldHaveRegister 303 LiveAtLoopEnd  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [44, 114[44 MustHaveRegister 46 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [46, 136[[314, 346[46 MustHaveRegister 86 MustHaveRegister 98 ShouldHaveRegister 136 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [48, 62[48 MustHaveRegister 50 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbp|q]" v8|q v5|d [114, 304[[314, 342[114 MustHaveRegister 188 ShouldHaveRegister 262 ShouldHaveRegister 303 LiveAtLoopEnd 342 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r9|d]" v9|d -1 [340, 350[340 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d rax|d [354, 357[354 MustHaveRegister 356 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r10|d]" v11|d v6|d [136, 138[136 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r13|d]" v12|d -1 [138, 304[138 MustHaveRegister 140 ShouldHaveRegister 192 ShouldHaveRegister 292 MustHaveRegister 303 LiveAtLoopEnd  "NoSpillStore"
  v13|d DWORD "[r14|d]" v13|d -1 [154, 304[154 MustHaveRegister 196 ShouldHaveRegister 303 LiveAtLoopEnd  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d -1 [156, 199[156 MustHaveRegister 198 ShouldHaveRegister  "SpillInDominator"
  v15|d DWORD "[r8|d]" v15|d v21|d [160, 194[194 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d rax|d [202, 271[202 MustHaveRegister 204 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v16|d [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rdx|q]" v18|q -1 [258, 264[258 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rcx|q]" v19|q v2|d [260, 266[260 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rax|d]" v20|d rax|d [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d v16|d [290, 303[290 MustHaveRegister 292 ShouldHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d v10|d [408, 426[426 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[r10|d]" v23|d -1 [470, 486[486 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[r11|q]" v24|q -1 [470, 488[488 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[vstack:0|d]" v14|d v14|d [199, 304[303 LiveAtLoopEnd  "SpillInDominator"
  v26|d DWORD "[r11|d]" v16|d v16|d [271, 290[[378, 387[[388, 397[290 ShouldHaveRegister 386 ShouldHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[r11|d]" v2|d v2|d [314, 340[340 MustHaveRegister  "SpillInDominator"
  v28|d DWORD "[vstack:1|d]" v2|d v2|d [271, 304[303 LiveAtLoopEnd  "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v7|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v11|DWORD = SUB (x: v6|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction v12|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction v13|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction v14|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  160  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r9|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction rdi|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  202  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  258  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 16] size: QWORD <|@ <|@
      nr  260  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rcx|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  270  <|@ instruction r9|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOVE input: v2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  274  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v21|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v21|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v9|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  350  <|@ instruction r9|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  354  <|@ instruction v10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  408  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction rax|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [int[-47891|0xffffffffffff44ed], long[1300|0x514]] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [int[-46867|0xffffffffffff48ed], long[660|0x294]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [int[-48915|0xffffffffffff40ed], long[1940|0x794]] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [int[-45843|0xffffffffffff4ced], long[20|0x14]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  470  <|@ instruction [v23|DWORD, v24|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v23|DWORD) size: DWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v24|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v22|d [0, 1[[200, 202[[272, 274[[352, 354[[426, 428[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v12|d [0, 1[[192, 201[[266, 273[[346, 353[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v18|q [0, 36[[190, 201[[264, 273[[344, 353[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 30[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v8|q [0, 34[[188, 201[[262, 273[[342, 353[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v14|d [0, 1[[198, 201[[272, 273[[352, 353[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d v15|d [0, 1[[194, 201[[268, 272[[348, 352[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v13|d [0, 1[[196, 200[[270, 272[[350, 352[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[200, 201[[272, 273[[352, 353[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[200, 201[[272, 273[[352, 353[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[200, 201[[272, 273[[352, 353[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[200, 201[[352, 353[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[200, 201[[352, 353[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[200, 201[[352, 353[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[200, 201[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [34, 88[[430, 491[34 MustHaveRegister 44 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [36, 88[[430, 491[36 MustHaveRegister 38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [38, 271[38 MustHaveRegister 42 MustHaveRegister 154 MustHaveRegister 156 MustHaveRegister 260 MustHaveRegister  "SpillInDominator"
  v3|d DWORD "[rcx|d]" v3|d -1 [40, 50[40 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rbx|d]" v4|d -1 [42, 304[42 MustHaveRegister 74 MustHaveRegister 98 MustHaveRegister 116 ShouldHaveRegister 136 ShouldHaveRegister 216 ShouldHaveRegister 270 ShouldHaveRegister 303 LiveAtLoopEnd  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [44, 114[44 MustHaveRegister 46 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [46, 136[[314, 346[46 MustHaveRegister 86 MustHaveRegister 98 ShouldHaveRegister 136 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [48, 62[48 MustHaveRegister 50 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbp|q]" v8|q v5|d [114, 304[[314, 342[114 MustHaveRegister 188 ShouldHaveRegister 262 ShouldHaveRegister 303 LiveAtLoopEnd 342 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r9|d]" v9|d -1 [340, 350[340 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d rax|d [354, 357[354 MustHaveRegister 356 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r10|d]" v11|d v6|d [136, 138[136 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r13|d]" v12|d -1 [138, 304[138 MustHaveRegister 140 ShouldHaveRegister 192 ShouldHaveRegister 292 MustHaveRegister 303 LiveAtLoopEnd  "NoSpillStore"
  v13|d DWORD "[r14|d]" v13|d -1 [154, 304[154 MustHaveRegister 196 ShouldHaveRegister 303 LiveAtLoopEnd  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d -1 [156, 199[156 MustHaveRegister 198 ShouldHaveRegister  "StoreAtDefinition"
  v15|d DWORD "[r8|d]" v15|d v21|d [160, 194[194 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d rax|d [202, 271[202 MustHaveRegister 204 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v16|d [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rdx|q]" v18|q -1 [258, 264[258 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rcx|q]" v19|q v2|d [260, 266[260 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rax|d]" v20|d rax|d [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d v16|d [290, 303[290 MustHaveRegister 292 ShouldHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d v10|d [408, 426[426 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[r10|d]" v23|d -1 [470, 486[486 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[r11|q]" v24|q -1 [470, 488[488 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[vstack:0|d]" v14|d v14|d [199, 304[303 LiveAtLoopEnd  "StoreAtDefinition"
  v26|d DWORD "[r11|d]" v16|d v16|d [271, 290[[378, 387[[388, 397[290 ShouldHaveRegister 386 ShouldHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[r11|d]" v2|d v2|d [314, 340[340 MustHaveRegister  "SpillInDominator"
  v28|d DWORD "[vstack:1|d]" v2|d v2|d [271, 304[303 LiveAtLoopEnd  "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v7|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v11|DWORD = SUB (x: v6|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction v12|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction v13|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction v14|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  160  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r9|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction rdi|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  202  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  258  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 16] size: QWORD <|@ <|@
      nr  260  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rcx|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  270  <|@ instruction r9|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOVE input: v2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  274  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v21|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v21|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v21|DWORD] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v9|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  350  <|@ instruction r9|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  354  <|@ instruction v10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [int[-1|0xffffffffffffffff]] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  408  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction rax|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [int[-47891|0xffffffffffff44ed], long[1300|0x514]] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [int[-46867|0xffffffffffff48ed], long[660|0x294]] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [int[-48915|0xffffffffffff40ed], long[1940|0x794]] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [int[-45843|0xffffffffffff4ced], long[20|0x14]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  470  <|@ instruction [v23|DWORD, v24|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v23|DWORD) size: DWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v24|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v22|d [0, 1[[200, 202[[272, 274[[352, 354[[426, 428[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v12|d [0, 1[[192, 201[[266, 273[[346, 353[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v18|q [0, 36[[190, 201[[264, 273[[344, 353[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 30[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v8|q [0, 34[[188, 201[[262, 273[[342, 353[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v14|d [0, 1[[198, 201[[272, 273[[352, 353[ "NoSpillStore"
  r8|d fixed "[r8|d]" r8|d v15|d [0, 1[[194, 201[[268, 272[[348, 352[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v13|d [0, 1[[196, 200[[270, 272[[350, 352[ "NoOptimization"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[200, 201[[272, 273[[352, 353[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[200, 201[[272, 273[[352, 353[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[200, 201[[272, 273[[352, 353[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[200, 201[[352, 353[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[200, 201[[352, 353[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[200, 201[[352, 353[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[200, 201[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [34, 88[[430, 491[34 MustHaveRegister 44 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [36, 88[[430, 491[36 MustHaveRegister 38 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [38, 271[38 MustHaveRegister 42 MustHaveRegister 154 MustHaveRegister 156 MustHaveRegister 260 MustHaveRegister  "SpillInDominator"
  v3|d DWORD "[rcx|d]" v3|d -1 [40, 50[40 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rbx|d]" v4|d -1 [42, 304[42 MustHaveRegister 74 MustHaveRegister 98 MustHaveRegister 116 ShouldHaveRegister 136 ShouldHaveRegister 216 ShouldHaveRegister 270 ShouldHaveRegister 303 LiveAtLoopEnd  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [44, 114[44 MustHaveRegister 46 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [46, 136[[314, 346[46 MustHaveRegister 86 MustHaveRegister 98 ShouldHaveRegister 136 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d -1 [48, 62[48 MustHaveRegister 50 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbp|q]" v8|q v5|d [114, 304[[314, 342[114 MustHaveRegister 188 ShouldHaveRegister 262 ShouldHaveRegister 303 LiveAtLoopEnd 342 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r9|d]" v9|d -1 [340, 350[340 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d rax|d [354, 357[354 MustHaveRegister 356 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r10|d]" v11|d v6|d [136, 138[136 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r13|d]" v12|d -1 [138, 304[138 MustHaveRegister 140 ShouldHaveRegister 192 ShouldHaveRegister 292 MustHaveRegister 303 LiveAtLoopEnd  "NoSpillStore"
  v13|d DWORD "[r14|d]" v13|d -1 [154, 304[154 MustHaveRegister 196 ShouldHaveRegister 303 LiveAtLoopEnd  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d -1 [156, 199[156 MustHaveRegister 198 ShouldHaveRegister  "StoreAtDefinition"
  v15|d DWORD "[r8|d]" v15|d v21|d [160, 194[194 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d rax|d [202, 271[202 MustHaveRegister 204 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v16|d [256, 258[256 MustHaveRegister 258 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rdx|q]" v18|q -1 [258, 264[258 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rcx|q]" v19|q v2|d [260, 266[260 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rax|d]" v20|d rax|d [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d v16|d [290, 303[290 MustHaveRegister 292 ShouldHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d v10|d [408, 426[426 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[r10|d]" v23|d -1 [470, 486[486 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[r11|q]" v24|q -1 [470, 488[488 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[vstack:0|d]" v14|d v14|d [199, 304[303 LiveAtLoopEnd  "StoreAtDefinition"
  v26|d DWORD "[r11|d]" v16|d v16|d [271, 290[[378, 387[[388, 397[290 ShouldHaveRegister 386 ShouldHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[r11|d]" v2|d v2|d [314, 340[340 MustHaveRegister  "SpillInDominator"
  v28|d DWORD "[vstack:1|d]" v2|d v2|d [271, 304[303 LiveAtLoopEnd  "SpillInDominator"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v7|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v11|DWORD = SUB (x: v6|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction v12|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction v13|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction v14|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  160  <|@ instruction [v15|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r9|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction rdi|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  202  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  258  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 16] size: QWORD <|@ <|@
      nr  260  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rcx|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  270  <|@ instruction r9|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOVE input: v2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  274  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v21|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v21|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: v21|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v25|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOVE input: v28|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v9|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  350  <|@ instruction r9|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  354  <|@ instruction v10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: v26|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: v26|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  408  <|@ instruction [v22|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction rax|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: int[-47891|0xffffffffffff44ed] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: int[-46867|0xffffffffffff48ed] // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: int[-48915|0xffffffffffff40ed] // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  470  <|@ instruction [v23|DWORD, v24|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v23|DWORD) size: DWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v24|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction v3|DWORD = MOVSXB input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v7|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v3|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBYTEBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v6|DWORD, y: v6|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v6|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v11|DWORD = SUB (x: v6|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction v12|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction v13|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction v14|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction r8|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r9|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction rdi|DWORD = MOVE input: v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  200  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  202  <|@ instruction v16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: v16|DWORD, y: v16|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction v17|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  258  <|@ instruction v18|QWORD = LEA address: [v17|QWORD + 16] size: QWORD <|@ <|@
      nr  260  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = MOVE input: v18|QWORD moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rcx|QWORD[.] = MOVE input: v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  270  <|@ instruction r9|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  274  <|@ instruction v20|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction v21|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v21|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: v21|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v25|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOVE input: v28|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v9|DWORD = MOVZXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVE input: v6|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  350  <|@ instruction r9|DWORD = MOVE input: v9|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  354  <|@ instruction v10|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVE input: v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: v26|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: v26|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction rax|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: int[-47891|0xffffffffffff44ed] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: int[-46867|0xffffffffffff48ed] // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: int[-48915|0xffffffffffff40ed] // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v23|DWORD) size: DWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v24|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction r14|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  258  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  260  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  270  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  276  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE input: vstack:1|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction r9|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  352  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-47891|0xffffffffffff44ed] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-46867|0xffffffffffff48ed] // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-48915|0xffffffffffff40ed] // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction rcx|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r9|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  138  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction r14|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  156  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  158  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  192  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  204  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  258  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  260  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  270  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  276  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD[_] = MOVE input: vstack:1|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  312  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction r9|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  352  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  356  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-47891|0xffffffffffff44ed] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-46867|0xffffffffffff48ed] // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-48915|0xffffffffffff40ed] // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  488  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  152  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction vstack:1|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  248  <|@ instruction vstack:0|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  356  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction r11|DWORD[_] = MOVE input: vstack:1|DWORD[_] moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction r9|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  186  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  190  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   82  <|@ instruction r10|DWORD = MOVE input: int[-47891|0xffffffffffff44ed] <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  476  <|@ instruction r10|DWORD = MOVE input: int[-46867|0xffffffffffff48ed] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-48915|0xffffffffffff40ed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  490  <|@ instruction r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [248, 395[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[vstack:1|d]" vstack:1|d -1 [232, 395[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:28|d]" vstack:0|d -1 [248, 395[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[stack:32|d]" vstack:1|d -1 [232, 395[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  152  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction stack:32|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  356  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction r11|DWORD[_] = MOVE input: stack:32|DWORD[_] moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction r9|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  186  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  190  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   82  <|@ instruction r10|DWORD = MOVE input: int[-47891|0xffffffffffff44ed] <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  476  <|@ instruction r10|DWORD = MOVE input: int[-46867|0xffffffffffff48ed] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-48915|0xffffffffffff40ed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  490  <|@ instruction r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  152  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction stack:32|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  356  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction r11|DWORD[_] = MOVE input: stack:32|DWORD[_] moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction r9|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  186  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  190  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   82  <|@ instruction r10|DWORD = MOVE input: int[-47891|0xffffffffffff44ed] <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  476  <|@ instruction r10|DWORD = MOVE input: int[-46867|0xffffffffffff48ed] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-48915|0xffffffffffff40ed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  490  <|@ instruction r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  152  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction stack:32|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  356  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction r11|DWORD[_] = MOVE input: stack:32|DWORD[_] moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction r9|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  186  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  190  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   82  <|@ instruction r10|DWORD = MOVE input: int[-47891|0xffffffffffff44ed] <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  476  <|@ instruction r10|DWORD = MOVE input: int[-46867|0xffffffffffff48ed] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-48915|0xffffffffffff40ed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  490  <|@ instruction r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  152  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction stack:32|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  356  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction r11|DWORD[_] = MOVE input: stack:32|DWORD[_] moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction r9|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  186  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  190  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   82  <|@ instruction r10|DWORD = MOVE input: int[-47891|0xffffffffffff44ed] <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  476  <|@ instruction r10|DWORD = MOVE input: int[-46867|0xffffffffffff48ed] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-48915|0xffffffffffff40ed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  490  <|@ instruction r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  152  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction stack:32|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  356  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction r11|DWORD[_] = MOVE input: stack:32|DWORD[_] moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction r9|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  186  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  190  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   82  <|@ instruction r10|DWORD = MOVE input: int[-47891|0xffffffffffff44ed] <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  476  <|@ instruction r10|DWORD = MOVE input: int[-46867|0xffffffffffff48ed] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-48915|0xffffffffffff40ed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  490  <|@ instruction r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  152  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction stack:32|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  356  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction r11|DWORD[_] = MOVE input: stack:32|DWORD[_] moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction r9|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  186  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  190  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   82  <|@ instruction r10|DWORD = MOVE input: int[-47891|0xffffffffffff44ed] <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  476  <|@ instruction r10|DWORD = MOVE input: int[-46867|0xffffffffffff48ed] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-48915|0xffffffffffff40ed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  490  <|@ instruction r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  152  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction stack:32|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  356  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction r11|DWORD[_] = MOVE input: stack:32|DWORD[_] moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction r9|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  186  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  190  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   82  <|@ instruction r10|DWORD = MOVE input: int[-47891|0xffffffffffff44ed] <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  476  <|@ instruction r10|DWORD = MOVE input: int[-46867|0xffffffffffff48ed] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-48915|0xffffffffffff40ed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  490  <|@ instruction r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  152  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction stack:32|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  356  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction r11|DWORD[_] = MOVE input: stack:32|DWORD[_] moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction r9|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  186  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  190  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   82  <|@ instruction r10|DWORD = MOVE input: int[-47891|0xffffffffffff44ed] <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  476  <|@ instruction r10|DWORD = MOVE input: int[-46867|0xffffffffffff48ed] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-48915|0xffffffffffff40ed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  490  <|@ instruction r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  152  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction stack:32|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  356  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction r11|DWORD[_] = MOVE input: stack:32|DWORD[_] moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction r9|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  186  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  190  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   82  <|@ instruction r10|DWORD = MOVE input: int[-47891|0xffffffffffff44ed] <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ st <@st|@live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  476  <|@ instruction r10|DWORD = MOVE input: int[-46867|0xffffffffffff48ed] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-48915|0xffffffffffff40ed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  490  <|@ instruction r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0]
live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0]
live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  152  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction stack:32|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  356  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction r11|DWORD[_] = MOVE input: stack:32|DWORD[_] moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction r9|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  186  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  190  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   82  <|@ instruction r10|DWORD = MOVE input: int[-47891|0xffffffffffff44ed] <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  476  <|@ instruction r10|DWORD = MOVE input: int[-46867|0xffffffffffff48ed] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-48915|0xffffffffffff40ed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  490  <|@ instruction r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rcx|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0]
live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ instruction r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0]
live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r9|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  152  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4603241769126068224
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  214  <|@ instruction r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  216  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4601271444289093632
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction stack:32|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction r14|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD <|@ <|@
      nr  248  <|@ instruction stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B20" "B15" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4602009712942294724
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B19" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4599925189686197523
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r8|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  356  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  358  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  362  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598361797244124622
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction rax|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4596203286279863477
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction r11|DWORD[_] = MOVE input: stack:32|DWORD[_] moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B17" 
    successors "B21" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4603733948228202285
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  286  <|@ instruction rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL <|@ <|@
      nr  294  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B22" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B21" "B20" "B19" "B11" "B18" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B22" 
    xhandlers
    flags 
    probability 4595923419731591168
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction r9|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  182  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  186  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  190  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  192  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594726748973461293
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594234569871327232
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B22" 
    xhandlers
    flags 
    probability 4593002513687553732
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" 
    xhandlers
    flags 
    probability 4590917990431456531
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B22" 
    xhandlers
    flags 
    probability 4589354597989383630
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   82  <|@ instruction r10|DWORD = MOVE input: int[-47891|0xffffffffffff44ed] <|@ <|@
      nr   84  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B3" "B24" "B23" "B5" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  514  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.lang.String.indexOf(String.java:2592) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr  476  <|@ instruction r10|DWORD = MOVE input: int[-46867|0xffffffffffff48ed] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  108  <|@ instruction r10|DWORD = MOVE input: int[-48915|0xffffffffffff40ed] <|@ <|@
      nr  110  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  490  <|@ instruction r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced] <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #77         // coder:()byte
     4: istore_2      
     5: iload_2       
     6: aload_1       
     7: invokevirtual #77         // coder:()byte
    10: if_icmpne     46
    13: aload_0       
    14: invokevirtual #122        // isLatin1:()boolean
    17: ifeq          34
    20: aload_0       
    21: getfield      #1          // value:byte[]
    24: aload_1       
    25: getfield      #1          // value:byte[]
    28: invokestatic  #174        // java.lang.StringLatin1.indexOf:(byte[], byte[])int
    31: goto          45
    34: aload_0       
    35: getfield      #1          // value:byte[]
    38: aload_1       
    39: getfield      #1          // value:byte[]
    42: invokestatic  #175        // java.lang.StringUTF16.indexOf:(byte[], byte[])int
    45: ireturn       
    46: iload_2       
    47: ifne          52
    50: iconst_m1     
    51: ireturn       
    52: aload_0       
    53: getfield      #1          // value:byte[]
    56: aload_1       
    57: getfield      #1          // value:byte[]
    60: invokestatic  #176        // java.lang.StringUTF16.indexOfLatin1:(byte[], byte[])int
    63: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f8572020000909090909090909090909090909048896c2410448b5a140fbe4a10428b1cdd0c000000448b4614468b14c50c000000440fbe4e10443ac90f8523020000909090904584c90f85f20100009090909085db0f84b4010000909090904585d20f84eb01000090909090413bda0f8713010000909090909090418be848c1e50383fb010f84270100009090909090909090442bd3458d6a024183fd010f8c4701000044891c249090909090460fb634dd10000000460fb614dd11000000448954240441b800000000e9870000006666660f1f84000000000066666690660f1f840000000000666666909090909083fb020f84fd0000009090909090909090909090909090909090908bf0488d5610418bcb48c1e103488bf549c7c010000000448bcb448bd8e80000000085c00f85c90000009090909090418bc3ffc0443be80f8ebe000000909090448bc0448b542404448b1c2490909090909090909090909090488bf548c7c210000000418bcd458bce418bfae80000000085c00f8d68ffffffe959000000909090b8ffffffff9090909090909090488b6c24104883c418493ba7500400000f87d9000000c5f877c3909090909090909090909090460fb60cdd10000000488bf548c7c210000000418bca41b800000000e800000000ebaf909090b8ffffffffeba5909090b8ffffffffeb9b448bd8909090eb93909090418bc3eb8b909090b8ffffffffeb8190909049c7c31405000041baed44ffff90909090909090458997840400004d899f90040000e8000000000f1f84000000000090909049c7c39402000041baed48ffffebcc90909049c7c39407000041baed40ffffebba90909049c7c31400000041baed4cffffeba848896c2410e800000000e97ffdfffff4488d0d13ffffff49898f68040000e931fdfffff441c78784040000f5c7ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5bbffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5b5ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 77 32 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD  <||@
  Comment 77 34 r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 77 [rdx:0, rsi:0]at java.lang.String.indexOf(String.java:2592) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 77 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 81 36 rcx|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 85 38 rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 85 [rdx:0, rsi:0, r11:0]at java.lang.String.indexOf(String.java:2592) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 85 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 93 40 r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 97 42 r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 97 [rdx:0, rsi:0, r8:0, r11:0]at java.lang.String.indexOf(String.java:2592) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 97 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 105 44 r9|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 110 46 CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE  <||@
  Comment 119 block B1 null  <||@
  Comment 119 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 119 50 NOP  <||@
  Comment 120 52 NOP  <||@
  Comment 121 54 NOP  <||@
  Comment 122 56 NOP  <||@
  Comment 123 58 TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23  <||@
  Comment 132 block B2 null  <||@
  Comment 132 60 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 132 62 NOP  <||@
  Comment 133 64 NOP  <||@
  Comment 134 66 NOP  <||@
  Comment 135 68 NOP  <||@
  Comment 136 70 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 144 block B4 null  <||@
  Comment 144 86 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 144 88 NOP  <||@
  Comment 145 90 NOP  <||@
  Comment 146 92 NOP  <||@
  Comment 147 94 NOP  <||@
  Comment 148 96 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 157 block B6 null  <||@
  Comment 157 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 157 114 NOP  <||@
  Comment 158 116 NOP  <||@
  Comment 159 118 NOP  <||@
  Comment 160 120 NOP  <||@
  Comment 161 122 CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 170 block B8 null  <||@
  Comment 170 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 170 138 NOP  <||@
  Comment 171 140 NOP  <||@
  Comment 172 142 NOP  <||@
  Comment 173 144 NOP  <||@
  Comment 174 146 NOP  <||@
  Comment 175 148 NOP  <||@
  Comment 176 150 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3  <||@
  Comment 183 152 CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null  <||@
  Comment 192 block B10 null  <||@
  Comment 192 194 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 192 196 NOP  <||@
  Comment 193 198 NOP  <||@
  Comment 194 200 NOP  <||@
  Comment 195 202 NOP  <||@
  Comment 196 204 NOP  <||@
  Comment 197 206 NOP  <||@
  Comment 198 208 NOP  <||@
  Comment 199 210 NOP  <||@
  Comment 200 212 r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 203 214 r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD  <||@
  Comment 207 216 CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null  <||@
  Comment 217 block B12 null  <||@
  Comment 217 230 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 217 232 stack:32|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD  <||@
  Comment 221 234 NOP  <||@
  Comment 222 236 NOP  <||@
  Comment 223 238 NOP  <||@
  Comment 224 240 NOP  <||@
  Comment 225 242 NOP  <||@
  Comment 226 244 r14|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 235 246 r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD  <||@
  Comment 244 248 stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 249 250 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 255 252 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 260 block B14 loop 0 depth 1 header:99|LoopBegin  <||@
  Comment 260 296 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 288 298 NOP  <||@
  Comment 289 300 NOP  <||@
  Comment 290 302 NOP  <||@
  Comment 291 304 NOP  <||@
  Comment 292 306 CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null  <||@
  Comment 301 block B15 loop 0 depth 1 header:99|LoopBegin  <||@
  Comment 301 308 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 301 310 NOP  <||@
  Comment 302 312 NOP  <||@
  Comment 303 314 NOP  <||@
  Comment 304 316 NOP  <||@
  Comment 305 318 NOP  <||@
  Comment 306 320 NOP  <||@
  Comment 307 322 NOP  <||@
  Comment 308 324 NOP  <||@
  Comment 309 326 NOP  <||@
  Comment 310 328 NOP  <||@
  Comment 311 330 NOP  <||@
  Comment 312 332 NOP  <||@
  Comment 313 334 NOP  <||@
  Comment 314 336 NOP  <||@
  Comment 315 338 NOP  <||@
  Comment 316 340 NOP  <||@
  Comment 317 342 NOP  <||@
  Comment 318 344 NOP  <||@
  Comment 319 346 rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 321 348 rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD  <||@
  Comment 325 350 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3  <||@
  Comment 332 352 rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 335 354 r8|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 342 356 r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 345 358 r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 348 360 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL  <||@
  Comment 348 {Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 353 362 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD  <||@
  Comment 361 block B16 loop 0 depth 1 header:99|LoopBegin  <||@
  Comment 361 364 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 361 366 NOP  <||@
  Comment 362 368 NOP  <||@
  Comment 363 370 NOP  <||@
  Comment 364 372 NOP  <||@
  Comment 365 374 NOP  <||@
  Comment 366 376 rax|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 371 378 CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD  <||@
  Comment 380 block B17 loop 0 depth 1 header:99|LoopBegin  <||@
  Comment 380 380 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 380 382 NOP  <||@
  Comment 381 384 NOP  <||@
  Comment 382 386 NOP  <||@
  Comment 383 388 r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 386 390 r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 391 392 r11|DWORD[_] = MOVE input: stack:32|DWORD[_] moveKind: DWORD  <||@
  Comment 395 394 JUMP ~outgoingValues: [] destination: B17 -> B13  <||@
  Comment 395 block B13 loop 0 depth 1 header:99|LoopBegin  <||@
  Comment 395 254 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 395 256 NOP  <||@
  Comment 396 258 NOP  <||@
  Comment 397 260 NOP  <||@
  Comment 398 262 NOP  <||@
  Comment 399 264 NOP  <||@
  Comment 400 266 NOP  <||@
  Comment 401 268 NOP  <||@
  Comment 402 270 NOP  <||@
  Comment 403 272 NOP  <||@
  Comment 404 274 NOP  <||@
  Comment 405 276 NOP  <||@
  Comment 406 278 NOP  <||@
  Comment 407 280 NOP  <||@
  Comment 408 282 rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 411 284 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 418 286 rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 421 288 r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 424 290 rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 427 292 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL  <||@
  Comment 427 {Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL}  <||@
  Comment 432 294 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD  <||@
  Comment 445 block B7 null  <||@
  Comment 445 124 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 445 126 NOP  <||@
  Comment 446 128 NOP  <||@
  Comment 447 130 NOP  <||@
  Comment 448 132 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 453 134 JUMP ~outgoingValues: [] destination: B7 -> B22  <||@
  Comment 453 block B22 null  <||@
  Comment 453 446 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 453 448 NOP  <||@
  Comment 454 450 NOP  <||@
  Comment 455 452 NOP  <||@
  Comment 456 454 NOP  <||@
  Comment 457 456 NOP  <||@
  Comment 458 458 NOP  <||@
  Comment 459 460 NOP  <||@
  Comment 460 462 NOP  <||@
  Comment 461 464 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 470 POLL_RETURN_FAR  <||@
  Comment 487 block B9 null  <||@
  Comment 487 154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 487 156 NOP  <||@
  Comment 488 158 NOP  <||@
  Comment 489 160 NOP  <||@
  Comment 490 162 NOP  <||@
  Comment 491 164 NOP  <||@
  Comment 492 166 NOP  <||@
  Comment 493 168 NOP  <||@
  Comment 494 170 NOP  <||@
  Comment 495 172 NOP  <||@
  Comment 496 174 NOP  <||@
  Comment 497 176 NOP  <||@
  Comment 498 178 NOP  <||@
  Comment 499 180 r9|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 508 182 rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 511 184 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 518 186 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 521 188 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 527 190 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL  <||@
  Comment 527 {Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 532 192 JUMP ~outgoingValues: [] destination: B9 -> B22  <||@
  Comment 534 block B21 null  <||@
  Comment 534 434 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 534 436 NOP  <||@
  Comment 535 438 NOP  <||@
  Comment 536 440 NOP  <||@
  Comment 537 442 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 542 444 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 544 block B11 null  <||@
  Comment 544 218 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 544 220 NOP  <||@
  Comment 545 222 NOP  <||@
  Comment 546 224 NOP  <||@
  Comment 547 226 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 552 228 JUMP ~outgoingValues: [] destination: B11 -> B22  <||@
  Comment 554 block B20 null  <||@
  Comment 554 420 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 554 422 r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 557 424 NOP  <||@
  Comment 558 426 NOP  <||@
  Comment 559 428 NOP  <||@
  Comment 560 432 JUMP ~outgoingValues: [] destination: B20 -> B22  <||@
  Comment 562 block B19 null  <||@
  Comment 562 408 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 562 410 NOP  <||@
  Comment 563 412 NOP  <||@
  Comment 564 414 NOP  <||@
  Comment 565 416 rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 568 418 JUMP ~outgoingValues: [] destination: B19 -> B22  <||@
  Comment 570 block B18 null  <||@
  Comment 570 396 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 570 398 NOP  <||@
  Comment 571 400 NOP  <||@
  Comment 572 402 NOP  <||@
  Comment 573 404 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 578 406 JUMP ~outgoingValues: [] destination: B18 -> B22  <||@
  Comment 580 block B3 null  <||@
  Comment 580 72 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 580 74 NOP  <||@
  Comment 581 76 NOP  <||@
  Comment 582 78 NOP  <||@
  Comment 583 80 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 590 82 r10|DWORD = MOVE input: int[-47891|0xffffffffffff44ed]  <||@
  Comment 596 84 JUMP ~outgoingValues: [] destination: B3 -> B25  <||@
  Comment 596 block B25 null  <||@
  Comment 596 494 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 596 496 NOP  <||@
  Comment 597 498 NOP  <||@
  Comment 598 500 NOP  <||@
  Comment 599 502 NOP  <||@
  Comment 600 504 NOP  <||@
  Comment 601 506 NOP  <||@
  Comment 602 508 NOP  <||@
  Comment 603 510 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 610 512 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 617 514 DEOPT info [bci:0]  <||@
  Comment 617 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 622 [rdx:0, rsi:0]at java.lang.String.indexOf(String.java:2592) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 630 block B23 null  <||@
  Comment 630 466 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 630 468 NOP  <||@
  Comment 631 470 NOP  <||@
  Comment 632 472 NOP  <||@
  Comment 633 474 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 640 476 r10|DWORD = MOVE input: int[-46867|0xffffffffffff48ed]  <||@
  Comment 646 478 JUMP ~outgoingValues: [] destination: B23 -> B25  <||@
  Comment 648 block B5 null  <||@
  Comment 648 98 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 648 100 NOP  <||@
  Comment 649 102 NOP  <||@
  Comment 650 104 NOP  <||@
  Comment 651 106 r11|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 658 108 r10|DWORD = MOVE input: int[-48915|0xffffffffffff40ed]  <||@
  Comment 664 110 JUMP ~outgoingValues: [] destination: B5 -> B25  <||@
  Comment 666 block B24 null  <||@
  Comment 666 480 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 666 482 NOP  <||@
  Comment 667 484 NOP  <||@
  Comment 668 486 NOP  <||@
  Comment 669 488 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 676 490 r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced]  <||@
  Comment 682 492 JUMP ~outgoingValues: [] destination: B24 -> B25  <||@
  Comment 689 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 714 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 742 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 747 [rdx:0, rsi:0]at java.lang.String.indexOf(String.java:2592) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 777 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 782 [rdx:0, rsi:0, r11:0]at java.lang.String.indexOf(String.java:2592) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 812 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 817 [rdx:0, rsi:0, r8:0, r11:0]at java.lang.String.indexOf(String.java:2592) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 825 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 825 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 831 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 831 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10485[java.lang.String.indexOf(String)]"
  method "HotSpotCompilation-10485[java.lang.String.indexOf(String)]"
  date 1724269762091
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af560a0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85c3ef82fe66669089842400c0feff4883ec189041817f20000000000f8572020000909090909090909090909090909048896c2410448b5a140fbe4a10428b1cdd0c000000448b4614468b14c50c000000440fbe4e10443ac90f8523020000909090904584c90f85f20100009090909085db0f84b4010000909090904585d20f84eb01000090909090413bda0f8713010000909090909090418be848c1e50383fb010f84270100009090909090909090442bd3458d6a024183fd010f8c4701000044891c249090909090460fb634dd10000000460fb614dd11000000448954240441b800000000e9870000006666660f1f84000000000066666690660f1f840000000000666666909090909083fb020f84fd0000009090909090909090909090909090909090908bf0488d5610418bcb48c1e103488bf549c7c010000000448bcb448bd8e87f7b98fe85c00f85c90000009090909090418bc3ffc0443be80f8ebe000000909090448bc0448b542404448b1c2490909090909090909090909090488bf548c7c210000000418bcd458bce418bfae8303098fe85c00f8d68ffffffe959000000909090b8ffffffff9090909090909090488b6c24104883c418493ba7500400000f87d9000000c5f877c3909090909090909090909090460fb60cdd10000000488bf548c7c210000000418bca41b800000000e84c2c98feebaf909090b8ffffffffeba5909090b8ffffffffeb9b448bd8909090eb93909090418bc3eb8b909090b8ffffffffeb8190909049c7c31405000041baed44ffff90909090909090458997840400004d899f90040000e86c4e83fe0f1f84000000000090909049c7c39402000041baed48ffffebcc90909049c7c39407000041baed40ffffebba90909049c7c31400000041baed4cffffeba848896c2410e8ca4e81fee97ffdfffff4488d0d13ffffff49898f68040000e9915c83fef441c78784040000f5c7ffff49c7879004000000000000e8ef4d83fe0f1f84000000000041c78784040000f5bbffff49c7879004000000000000e8cc4d83fe0f1f84000000000041c78784040000f5b5ffff49c7879004000000000000e8a94d83fe0f1f840000000000e822ef96fef4e83c4b83fef4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 77 32 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49a134a2 slotKind: QWORD  <||@
  Comment 77 34 r11|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD state [bci:0]  <||@
  Comment 77 [rdx:0, rsi:0]at java.lang.String.indexOf(String.java:2592) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 77 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 81 36 rcx|DWORD = MOVSXB input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 85 38 rbx|DWORD = MOV input: [r11|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 85 [rdx:0, rsi:0, r11:0]at java.lang.String.indexOf(String.java:2592) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 85 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 93 40 r8|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 97 42 r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 97 [rdx:0, rsi:0, r8:0, r11:0]at java.lang.String.indexOf(String.java:2592) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 97 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 105 44 r9|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 110 46 CMPBRANCH (x: r9|DWORD, y: rcx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: BYTE  <||@
  Comment 119 block B1 null  <||@
  Comment 119 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 119 50 NOP  <||@
  Comment 120 52 NOP  <||@
  Comment 121 54 NOP  <||@
  Comment 122 56 NOP  <||@
  Comment 123 58 TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B23  <||@
  Comment 132 block B2 null  <||@
  Comment 132 60 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 132 62 NOP  <||@
  Comment 133 64 NOP  <||@
  Comment 134 66 NOP  <||@
  Comment 135 68 NOP  <||@
  Comment 136 70 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 144 block B4 null  <||@
  Comment 144 86 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 144 88 NOP  <||@
  Comment 145 90 NOP  <||@
  Comment 146 92 NOP  <||@
  Comment 147 94 NOP  <||@
  Comment 148 96 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 157 block B6 null  <||@
  Comment 157 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 157 114 NOP  <||@
  Comment 158 116 NOP  <||@
  Comment 159 118 NOP  <||@
  Comment 160 120 NOP  <||@
  Comment 161 122 CMPBRANCH (x: rbx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.25 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 170 block B8 null  <||@
  Comment 170 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 170 138 NOP  <||@
  Comment 171 140 NOP  <||@
  Comment 172 142 NOP  <||@
  Comment 173 144 NOP  <||@
  Comment 174 146 NOP  <||@
  Comment 175 148 NOP  <||@
  Comment 176 150 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3  <||@
  Comment 183 152 CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B10 y: 1 size: DWORD inlinedY: null  <||@
  Comment 192 block B10 null  <||@
  Comment 192 194 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 192 196 NOP  <||@
  Comment 193 198 NOP  <||@
  Comment 194 200 NOP  <||@
  Comment 195 202 NOP  <||@
  Comment 196 204 NOP  <||@
  Comment 197 206 NOP  <||@
  Comment 198 208 NOP  <||@
  Comment 199 210 NOP  <||@
  Comment 200 212 r10|DWORD = SUB (x: r10|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 203 214 r13|DWORD = LEA address: [r10|DWORD + 2] size: DWORD  <||@
  Comment 207 216 CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.25 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null  <||@
  Comment 217 block B12 null  <||@
  Comment 217 230 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 217 232 stack:32|DWORD[_] = MOVE input: r11|DWORD[_] moveKind: DWORD  <||@
  Comment 221 234 NOP  <||@
  Comment 222 236 NOP  <||@
  Comment 223 238 NOP  <||@
  Comment 224 240 NOP  <||@
  Comment 225 242 NOP  <||@
  Comment 226 244 r14|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 235 246 r10|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 17] size: DWORD  <||@
  Comment 244 248 stack:28|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 249 250 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 255 252 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 260 block B14 loop 0 depth 1 header:99|LoopBegin  <||@
  Comment 260 296 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 288 298 NOP  <||@
  Comment 289 300 NOP  <||@
  Comment 290 302 NOP  <||@
  Comment 291 304 NOP  <||@
  Comment 292 306 CMPCONSTBRANCH x: rbx|DWORD trueDestinationProbability: 0.25 condition: = trueDestination: B14 -> B20 falseDestination: B14 -> B15 y: 2 size: DWORD inlinedY: null  <||@
  Comment 301 block B15 loop 0 depth 1 header:99|LoopBegin  <||@
  Comment 301 308 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 301 310 NOP  <||@
  Comment 302 312 NOP  <||@
  Comment 303 314 NOP  <||@
  Comment 304 316 NOP  <||@
  Comment 305 318 NOP  <||@
  Comment 306 320 NOP  <||@
  Comment 307 322 NOP  <||@
  Comment 308 324 NOP  <||@
  Comment 309 326 NOP  <||@
  Comment 310 328 NOP  <||@
  Comment 311 330 NOP  <||@
  Comment 312 332 NOP  <||@
  Comment 313 334 NOP  <||@
  Comment 314 336 NOP  <||@
  Comment 315 338 NOP  <||@
  Comment 316 340 NOP  <||@
  Comment 317 342 NOP  <||@
  Comment 318 344 NOP  <||@
  Comment 319 346 rsi|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 321 348 rdx|QWORD = LEA address: [rsi|QWORD + 16] size: QWORD  <||@
  Comment 325 350 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@127b1033 encoding: base: 0 shift: 3  <||@
  Comment 332 352 rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 335 354 r8|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 342 356 r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 345 358 r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 348 360 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD] temps: [rax|ILLEGAL, rdi|ILLEGAL, rdx|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL  <||@
  Comment 348 {Stub<IntrinsicStubsGen.arrayRegionEqualsS1S1>@0x7f78998ddd80:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|QWORD[.], r8|QWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdi|ILLEGAL,rdx|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 353 362 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B19 size: DWORD  <||@
  Comment 361 block B16 loop 0 depth 1 header:99|LoopBegin  <||@
  Comment 361 364 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 361 366 NOP  <||@
  Comment 362 368 NOP  <||@
  Comment 363 370 NOP  <||@
  Comment 364 372 NOP  <||@
  Comment 365 374 NOP  <||@
  Comment 366 376 rax|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 371 378 CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.75 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD  <||@
  Comment 380 block B17 loop 0 depth 1 header:99|LoopBegin  <||@
  Comment 380 380 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 380 382 NOP  <||@
  Comment 381 384 NOP  <||@
  Comment 382 386 NOP  <||@
  Comment 383 388 r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 386 390 r10|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 391 392 r11|DWORD[_] = MOVE input: stack:32|DWORD[_] moveKind: DWORD  <||@
  Comment 395 394 JUMP ~outgoingValues: [] destination: B17 -> B13  <||@
  Comment 395 block B13 loop 0 depth 1 header:99|LoopBegin  <||@
  Comment 395 254 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 395 256 NOP  <||@
  Comment 396 258 NOP  <||@
  Comment 397 260 NOP  <||@
  Comment 398 262 NOP  <||@
  Comment 399 264 NOP  <||@
  Comment 400 266 NOP  <||@
  Comment 401 268 NOP  <||@
  Comment 402 270 NOP  <||@
  Comment 403 272 NOP  <||@
  Comment 404 274 NOP  <||@
  Comment 405 276 NOP  <||@
  Comment 406 278 NOP  <||@
  Comment 407 280 NOP  <||@
  Comment 408 282 rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 411 284 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 418 286 rcx|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 421 288 r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 424 290 rdi|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 427 292 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD] temps: [r10|ILLEGAL, rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, r8|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL  <||@
  Comment 427 {Stub<IntrinsicStubsGen.indexOfTwoConsecutiveS1>@0x7f78998d9280:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD, rdi|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,r8|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL}  <||@
  Comment 432 294 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.25 condition: < trueDestination: B13 -> B21 falseDestination: B13 -> B14 size: DWORD  <||@
  Comment 445 block B7 null  <||@
  Comment 445 124 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 445 126 NOP  <||@
  Comment 446 128 NOP  <||@
  Comment 447 130 NOP  <||@
  Comment 448 132 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 453 134 JUMP ~outgoingValues: [] destination: B7 -> B22  <||@
  Comment 453 block B22 null  <||@
  Comment 453 446 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 453 448 NOP  <||@
  Comment 454 450 NOP  <||@
  Comment 455 452 NOP  <||@
  Comment 456 454 NOP  <||@
  Comment 457 456 NOP  <||@
  Comment 458 458 NOP  <||@
  Comment 459 460 NOP  <||@
  Comment 460 462 NOP  <||@
  Comment 461 464 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 470 POLL_RETURN_FAR  <||@
  Comment 487 block B9 null  <||@
  Comment 487 154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 487 156 NOP  <||@
  Comment 488 158 NOP  <||@
  Comment 489 160 NOP  <||@
  Comment 490 162 NOP  <||@
  Comment 491 164 NOP  <||@
  Comment 492 166 NOP  <||@
  Comment 493 168 NOP  <||@
  Comment 494 170 NOP  <||@
  Comment 495 172 NOP  <||@
  Comment 496 174 NOP  <||@
  Comment 497 176 NOP  <||@
  Comment 498 178 NOP  <||@
  Comment 499 180 r9|DWORD = MOVZXB input: [r11|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 508 182 rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 511 184 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 518 186 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 521 188 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 527 190 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL  <||@
  Comment 527 {Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 532 192 JUMP ~outgoingValues: [] destination: B9 -> B22  <||@
  Comment 534 block B21 null  <||@
  Comment 534 434 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 534 436 NOP  <||@
  Comment 535 438 NOP  <||@
  Comment 536 440 NOP  <||@
  Comment 537 442 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 542 444 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 544 block B11 null  <||@
  Comment 544 218 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 544 220 NOP  <||@
  Comment 545 222 NOP  <||@
  Comment 546 224 NOP  <||@
  Comment 547 226 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 552 228 JUMP ~outgoingValues: [] destination: B11 -> B22  <||@
  Comment 554 block B20 null  <||@
  Comment 554 420 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 554 422 r11|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 557 424 NOP  <||@
  Comment 558 426 NOP  <||@
  Comment 559 428 NOP  <||@
  Comment 560 432 JUMP ~outgoingValues: [] destination: B20 -> B22  <||@
  Comment 562 block B19 null  <||@
  Comment 562 408 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 562 410 NOP  <||@
  Comment 563 412 NOP  <||@
  Comment 564 414 NOP  <||@
  Comment 565 416 rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 568 418 JUMP ~outgoingValues: [] destination: B19 -> B22  <||@
  Comment 570 block B18 null  <||@
  Comment 570 396 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 570 398 NOP  <||@
  Comment 571 400 NOP  <||@
  Comment 572 402 NOP  <||@
  Comment 573 404 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 578 406 JUMP ~outgoingValues: [] destination: B18 -> B22  <||@
  Comment 580 block B3 null  <||@
  Comment 580 72 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 580 74 NOP  <||@
  Comment 581 76 NOP  <||@
  Comment 582 78 NOP  <||@
  Comment 583 80 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 590 82 r10|DWORD = MOVE input: int[-47891|0xffffffffffff44ed]  <||@
  Comment 596 84 JUMP ~outgoingValues: [] destination: B3 -> B25  <||@
  Comment 596 block B25 null  <||@
  Comment 596 494 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 596 496 NOP  <||@
  Comment 597 498 NOP  <||@
  Comment 598 500 NOP  <||@
  Comment 599 502 NOP  <||@
  Comment 600 504 NOP  <||@
  Comment 601 506 NOP  <||@
  Comment 602 508 NOP  <||@
  Comment 603 510 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 610 512 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 617 514 DEOPT info [bci:0]  <||@
  Comment 617 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 622 [rdx:0, rsi:0]at java.lang.String.indexOf(String.java:2592) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 630 block B23 null  <||@
  Comment 630 466 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 630 468 NOP  <||@
  Comment 631 470 NOP  <||@
  Comment 632 472 NOP  <||@
  Comment 633 474 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 640 476 r10|DWORD = MOVE input: int[-46867|0xffffffffffff48ed]  <||@
  Comment 646 478 JUMP ~outgoingValues: [] destination: B23 -> B25  <||@
  Comment 648 block B5 null  <||@
  Comment 648 98 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 648 100 NOP  <||@
  Comment 649 102 NOP  <||@
  Comment 650 104 NOP  <||@
  Comment 651 106 r11|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 658 108 r10|DWORD = MOVE input: int[-48915|0xffffffffffff40ed]  <||@
  Comment 664 110 JUMP ~outgoingValues: [] destination: B5 -> B25  <||@
  Comment 666 block B24 null  <||@
  Comment 666 480 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 666 482 NOP  <||@
  Comment 667 484 NOP  <||@
  Comment 668 486 NOP  <||@
  Comment 669 488 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 676 490 r10|DWORD = MOVE input: int[-45843|0xffffffffffff4ced]  <||@
  Comment 682 492 JUMP ~outgoingValues: [] destination: B24 -> B25  <||@
  Comment 689 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 714 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 742 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 747 [rdx:0, rsi:0]at java.lang.String.indexOf(String.java:2592) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 777 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 782 [rdx:0, rsi:0, r11:0]at java.lang.String.indexOf(String.java:2592) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 812 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 817 [rdx:0, rsi:0, r8:0, r11:0]at java.lang.String.indexOf(String.java:2592) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 825 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 825 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 831 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 831 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
