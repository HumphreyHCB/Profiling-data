begin_compilation
  name " HotSpotCompilation-9607[java.lang.Integer.toUnsignedString0(int, int)]"
  method "HotSpotCompilation-9607[java.lang.Integer.toUnsignedString0(int, int)]"
  date 1724269759529
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v145 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v145  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i5 i72 i66 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i168 i11 i55 i40 ?46 ?54 i72 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: bipush
code: ResolvedJavaMethodBytecode<Integer.toUnsignedString0(int, int)>
localsSize: 5
locksSize: 0
sourceFile: Integer.java
sourceLine: 364
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i1 i2 
=== Succesors ===
=== Usages ===
i11 v318 v143 a216 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:365) [bci: 10]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i39 v13 i40 v56 v90 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:389) [bci: 5]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i32
=== Inputs ===
x: i7 
y: i2 
=== Succesors ===
=== Usages ===
i41 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i7 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:365) [bci: 11]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i65 i41 i47 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:390) [bci: 11]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i32
=== Inputs ===
x: i40 
y: i8 
=== Succesors ===
=== Usages ===
?46 i49 ?54 i66 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i40 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 26]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i32
=== Inputs ===
x: i1 
y: i41 
=== Succesors ===
=== Usages ===
j131 v96 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i1 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
rawvalue: 36
stableDimension: 0
stamp: i32 [36]
stampKind: i32
value: int[36|0x24]
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 v112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i66 
y: i95 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i66 y: i95  <|@  <|@
f <@*|@fixed>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v142 
falseSuccessor: v144 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v142 #falseSuccessor: v144  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: i11 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.numberOfLeadingZeros(int) [bci: -1]
at java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 3]
stamp: i32 [0 - 32] bits:0...0xxxxxx
=== Inputs ===
value: i1 
=== Succesors ===
=== Usages ===
i168 
=== Predecessor ===
- >@ <|@
instruction <@CountLeadingZeros|@jdk.graal.compiler.replacements.nodes.CountLeadingZerosNode>@ value: i1  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i2 
y: i5 
=== Succesors ===
=== Usages ===
i171 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i2 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 31
stableDimension: 0
stamp: i32 [31]
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i171 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i171 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i168 
y: i170 
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i168 y: i170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
canDeopt: true
deoptReasonAndAction: [null]
deoptSpeculation: [null]
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:365) [bci: 14]
op: DIV
stamp: i32
type: SIGNED
=== Inputs ===
stateBefore: ?3 
x: i171 
y: i2 
zeroGuard: - 
=== Succesors ===
next: v262 
=== Usages ===
i39 v13 
=== Predecessor ===
v142 >@ <|@
instruction <@/|@jdk.graal.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?3 x: i171 y: i2 zeroGuard: - #next: v262  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: j182 
=== Usages ===
=== Predecessor ===
i11 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j182 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j244 
=== Usages ===
v326 v327 
=== Predecessor ===
v262 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j244  <|@  <|@
f <@~|@floating>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j182 
index: - 
=== Succesors ===
=== Usages ===
j244 v246 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j244 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v326 
lastLocationAccess: - 
=== Succesors ===
next: j245 
=== Usages ===
j188 v328 v329 v330 a215 v331 v335 v332 v333 v334 
=== Predecessor ===
j182 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v326 lastLocationAccess: - #next: j245  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j182 
index: - 
=== Succesors ===
=== Usages ===
j245 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j245 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v327 
lastLocationAccess: - 
=== Succesors ===
next: v192 
=== Usages ===
v189 
=== Predecessor ===
j244 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v327 lastLocationAccess: - #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at java.lang.Integer.toUnsignedString0(Integer.java:365) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i7 
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i11 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at java.lang.Integer.toUnsignedString0(Integer.java:365) [bci: 16]
stamp: i32 [1 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v13 
trueValue: i7 
falseValue: i11 
=== Succesors ===
=== Usages ===
i65 v251 v90 v121 j185 a216 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v13 trueValue: i7 falseValue: i11  <|@  <|@
f <@~|@floating>@ <|@
tid j185 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
resultBits: 64
stamp: i64 [1 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i39 
=== Succesors ===
=== Usages ===
j226 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i39  <|@  <|@
f <@~|@floating>@ <|@
tid j225 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: i64 [24 - 2147483670] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j185 
y: j225 
=== Succesors ===
=== Usages ===
j187 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j185 y: j225  <|@  <|@
f <@~|@floating>@ <|@
tid j186 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j187 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j187 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: i64 [0 - 2147483664] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j226 
y: j186 
=== Succesors ===
=== Usages ===
j188 v204 j229 v332 v333 v334 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j226 y: j186  <|@  <|@
f <@~|@floating>@ <|@
tid j188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: i64
=== Inputs ===
x: j187 
y: j244 
=== Succesors ===
=== Usages ===
v189 v246 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j187 y: j244  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j245 
y: j188 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j245 y: j188  <|@  <|@
f <@~|@floating>@ <|@
tid j175 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 v300 v252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j193 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 v295 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v189 
=== Succesors ===
trueSuccessor: v191 
falseSuccessor: v190 
=== Usages ===
=== Predecessor ===
j245 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v189 #trueSuccessor: v191 #falseSuccessor: v190  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a216 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a216  <|@  <|@
f <@~|@floating>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a216 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v181 i39 
=== Succesors ===
next: v318 
=== Usages ===
v318 a242 
=== Predecessor ===
v191 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v181 i39 #next: v318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-66161|0xfffffffffffefd8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a216 
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
a216 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a216 #next: v220  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
v318 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v246 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v326 
lastLocationAccess: - 
value: j188 
stateAfter: - 
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v326 lastLocationAccess: - value: j188 stateAfter: - #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j187 
index: j244 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j187 index: j244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
address: v332 
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v332 #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j187 
index: j244 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j187 index: j244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
address: v333 
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v333 #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j187 
index: j244 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j187 index: j244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
address: v334 
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v334 #next: v247  <|@  <|@
f <@~|@floating>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j244 
index: - 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j244 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v328 
lastLocationAccess: - 
value: j193 
stateAfter: - 
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v328 lastLocationAccess: - value: j193 stateAfter: - #next: v250  <|@  <|@
f <@~|@floating>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j244 
index: - 
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j244 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v335 
lastLocationAccess: - 
value: v312 
stateAfter: - 
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v335 lastLocationAccess: - value: v312 stateAfter: - #next: v251  <|@  <|@
f <@~|@floating>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j244 
index: - 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j244 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v329 
lastLocationAccess: - 
value: i39 
stateAfter: - 
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v329 lastLocationAccess: - value: i39 stateAfter: - #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid j228 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j229 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: i64 [-16 - 2147483648] bits:x...x000
=== Inputs ===
x: j187 
y: j228 
=== Succesors ===
=== Usages ===
v196 v200 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j187 y: j228  <|@  <|@
f <@~|@floating>@ <|@
tid j231 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j229 
y: j231 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j229 y: j231  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v198 
falseSuccessor: v197 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v198 #falseSuccessor: v197  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v201  <|@  <|@
f <@~|@floating>@ <|@
tid j230 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:205) [bci: 57]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:184) [bci: 167]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j101 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v198 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v202 
values: j101 j212 
=== Succesors ===
=== Usages ===
v204 v330 j212 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v202 values: j101 j212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 56
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v201 
=== Succesors ===
next: v210 
=== Usages ===
j203 v209 v213 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v201 #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j203 
y: j187 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j203 y: j187  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v204 
=== Succesors ===
trueSuccessor: v205 
falseSuccessor: v209 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v204 #trueSuccessor: v205 #falseSuccessor: v209  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j244 
index: j203 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j244 index: j203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v330 
lastLocationAccess: - 
value: j175 
stateAfter: - 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v330 lastLocationAccess: - value: j175 stateAfter: - #next: v213  <|@  <|@
f <@~|@floating>@ <|@
tid j212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: i64
=== Inputs ===
x: j203 
y: j230 
=== Succesors ===
=== Usages ===
j203 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j203 y: j230  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
loopBegin: v202 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v202  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v202 
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v202 #next: v208  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
v209 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j244 
index: - 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j244 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v331 
lastLocationAccess: - 
length: j229 
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v331 lastLocationAccess: - length: j229 #next: v206  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
v200 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v206 v208 
=== Succesors ===
next: v214 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v206 v208 #next: v214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a215 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j244 
=== Succesors ===
next: v218 
=== Usages ===
a242 
=== Predecessor ===
v214 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j244 #next: v218  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
a215 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v219 
values: a215 a216 
=== Succesors ===
=== Usages ===
v322 ?46 ?54 ?63 ?85 v324 a159 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v219 values: a215 a216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v218 v220 
=== Succesors ===
next: i314 
=== Usages ===
a242 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v218 v220 #next: i314  <|@  <|@
f <@~|@floating>@ <|@
tid a48 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 20]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
rawvalue: char[36]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# char[]
stampKind: a java.lang.Object
value: Object[char[36]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 v321 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j131 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i66 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i66  <|@  <|@
f <@~|@floating>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a48 
index: j131 
=== Succesors ===
=== Usages ===
i314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a48 index: j131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i314 <|@
d <@d|@=== Debug Properties ===
accessStamp: i16
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i16
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v321 
lastLocationAccess: - 
=== Succesors ===
next: v111 
=== Usages ===
i132 
=== Predecessor ===
v219 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v321 lastLocationAccess: - #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid i65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 15]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i32 [0 - 2147483646] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i39 
y: i8 
=== Succesors ===
=== Usages ===
j133 i88 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i39 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid j133 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 29]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
resultBits: 64
stamp: i64 [0 - 2147483646] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i65 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i65  <|@  <|@
f <@~|@floating>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a242 
index: j133 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a242 index: j133  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
inputBits: 16
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 28]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
resultBits: 8
stamp: i8
=== Inputs ===
value: i314 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 29]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v322 
lastLocationAccess: - 
value: i132 
stateAfter: - 
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
i314 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v322 lastLocationAccess: - value: i132 stateAfter: - #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:394) [bci: 36]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i39 
y: i7 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i39 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:394) [bci: 36]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
profileData: PROFILED designatedSuccessorProbability: 0.42349162504617066
stamp: void
=== Inputs ===
condition: v90 
=== Succesors ===
trueSuccessor: v75 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v90 #trueSuccessor: v75 #falseSuccessor: v76  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v82  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
v75 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v42  <|@  <|@
tid ?63 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Integer.toUnsignedString0(int, int)>
localsSize: 5
locksSize: 0
sourceFile: Integer.java
sourceLine: 368
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - - - a242 
=== Succesors ===
=== Usages ===
?46 ?54 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - a242  <|@  <|@
f <@~|@floating>@ <|@
tid i72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 32]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i32
=== Inputs ===
x: i1 
y: i2 
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
v76 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v43 
values: i65 i47 
=== Succesors ===
=== Usages ===
?46 i47 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v43 values: i65 i47  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v43 
values: i72 i55 
=== Succesors ===
=== Usages ===
?46 i49 ?54 i55 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v43 values: i72 i55  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 12
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v42 
=== Succesors ===
next: v149 
=== Usages ===
i88 i87 v57 v58 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v42 #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 26]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i32
=== Inputs ===
x: i41 
y: i87 
=== Succesors ===
=== Usages ===
j134 v112 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i41 y: i87  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i49 
y: i95 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i49 y: i95  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v112 
=== Succesors ===
trueSuccessor: v146 
falseSuccessor: v148 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v112 #trueSuccessor: v146 #falseSuccessor: v148  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 15]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i32
=== Inputs ===
x: i88 
y: i8 
=== Succesors ===
=== Usages ===
i88 j136 ?54 v56 v121 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i88 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 29]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i47 
y: i39 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i47 y: i39  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 29]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v150 
falseSuccessor: v152 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v150 #falseSuccessor: v152  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 29]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: i315 
=== Usages ===
v129 
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i315  <|@  <|@
f <@~|@floating>@ <|@
tid j134 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i49 
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i49  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a48 
index: j134 
=== Succesors ===
=== Usages ===
i315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a48 index: j134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i315 <|@
d <@d|@=== Debug Properties ===
accessStamp: i16
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i16
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v323 
lastLocationAccess: - 
=== Succesors ===
next: v129 
=== Usages ===
i135 
=== Predecessor ===
v150 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v323 lastLocationAccess: - #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid j136 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 29]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i47 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i47  <|@  <|@
f <@~|@floating>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a242 
index: j136 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a242 index: j136  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
inputBits: 16
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 28]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
resultBits: 8
stamp: i8
=== Inputs ===
value: i315 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 29]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v150 
address: v324 
lastLocationAccess: - 
value: i135 
stateAfter: - 
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
i315 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v150 address: v324 lastLocationAccess: - value: i135 stateAfter: - #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:394) [bci: 36]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i47 
y: i7 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i47 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:394) [bci: 36]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.7345801786142079
stamp: void
=== Inputs ===
condition: v56 
=== Succesors ===
trueSuccessor: v58 
falseSuccessor: v60 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v56 #trueSuccessor: v58 #falseSuccessor: v60  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v154  <|@  <|@
tid ?54 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: iload_0
code: ResolvedJavaMethodBytecode<Integer.formatUnsignedInt(int, int, byte[], int)>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 29]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
sourceFile: Integer.java
sourceLine: 393
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?63 
values: i87 i2 a242 - i47 - i41 
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?63 values: i87 i2 a242 - i47 - i41  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
stateBefore: ?54 
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?54 #next: v57  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 32]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i32
=== Inputs ===
x: i87 
y: i2 
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i87 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
loopBegin: v43 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v43  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v43 
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v43 #next: v81  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
v58 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v81 v82 
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v81 v82 #next: v310  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: j268 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j268 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j292 
=== Usages ===
v336 v337 
=== Predecessor ===
v310 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j292  <|@  <|@
f <@~|@floating>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j268 
index: - 
=== Succesors ===
=== Usages ===
j292 v294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j292 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v336 
lastLocationAccess: - 
=== Succesors ===
next: j293 
=== Usages ===
j271 v338 v339 a278 v340 v341 v342 
=== Predecessor ===
j268 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v336 lastLocationAccess: - #next: j293  <|@  <|@
f <@~|@floating>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j268 
index: - 
=== Succesors ===
=== Usages ===
j293 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j293 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v337 
lastLocationAccess: - 
=== Succesors ===
next: v275 
=== Usages ===
v272 
=== Predecessor ===
j292 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v337 lastLocationAccess: - #next: v275  <|@  <|@
f <@~|@floating>@ <|@
tid j266 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: i64
=== Inputs ===
x: j292 
y: j266 
=== Succesors ===
=== Usages ===
v272 v294 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j292 y: j266  <|@  <|@
f <@~|@floating>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j293 
y: j271 
=== Succesors ===
=== Usages ===
v275 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j293 y: j271  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v272 
=== Succesors ===
trueSuccessor: v274 
falseSuccessor: v273 
=== Usages ===
=== Predecessor ===
j293 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v272 #trueSuccessor: v274 #falseSuccessor: v273  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: a279 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a279  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Integer.toUnsignedString0(int, int)>
localsSize: 5
locksSize: 0
sourceFile: Integer.java
sourceLine: 368
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - - - a242 
=== Succesors ===
=== Usages ===
?86 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - a242  <|@  <|@
tid ?86 <|@
d <@d|@=== Debug Properties ===
bci: 39
bytecode: return
code: ResolvedJavaMethodBytecode<Integer.formatUnsignedInt(int, int, byte[], int)>
localsSize: 7
locksSize: 0
sourceFile: Integer.java
sourceLine: 395
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?85 
=== Succesors ===
=== Usages ===
v320 a279 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?85  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a279 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a279 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?86 
arguments: v265 
=== Succesors ===
next: v320 
=== Usages ===
v320 a290 
=== Predecessor ===
v274 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?86 arguments: v265 #next: v320  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-78449|0xfffffffffffecd8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?86 
object: a279 
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
a279 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?86 object: a279 #next: v283  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
v320 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v336 
lastLocationAccess: - 
value: j271 
stateAfter: - 
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v336 lastLocationAccess: - value: j271 stateAfter: - #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
=== Inputs ===
address: v340 
=== Succesors ===
next: v295 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v340 #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v338 
lastLocationAccess: - 
value: j193 
stateAfter: - 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v338 lastLocationAccess: - value: j193 stateAfter: - #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v342 
lastLocationAccess: - 
value: v313 
stateAfter: - 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v342 lastLocationAccess: - value: v313 stateAfter: - #next: v299  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i267 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v339 
lastLocationAccess: - 
value: i267 
stateAfter: - 
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v339 lastLocationAccess: - value: i267 stateAfter: - #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v341 
lastLocationAccess: - 
value: j175 
stateAfter: - 
=== Succesors ===
next: a278 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v341 lastLocationAccess: - value: j175 stateAfter: - #next: a278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j292 
=== Succesors ===
next: v281 
=== Usages ===
a290 
=== Predecessor ===
v300 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j292 #next: v281  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
a278 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v282 
values: a278 a279 
=== Succesors ===
=== Usages ===
v325 a161 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v282 values: a278 a279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v281 v283 
=== Succesors ===
next: v160 
=== Usages ===
a290 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v281 v283 #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a290 
index: - 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a290 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a159 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
op: Compress
stamp: n!# byte[]
=== Inputs ===
value: a242 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v325 
lastLocationAccess: - 
value: a159 
stateAfter: - 
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v325 lastLocationAccess: - value: a159 stateAfter: - #next: v162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a161 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(int, int) [bci: -6] Placeholder
stamp: a!# java.lang.String
=== Inputs ===
object: a290 
=== Succesors ===
next: v38 
=== Usages ===
v38 
=== Predecessor ===
v162 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a290 #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 49]
stamp: void
=== Inputs ===
memoryMap: - 
result: a161 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a161 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a161  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 29]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid i180 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
rawvalue: -31259
stableDimension: 0
stamp: i32 [-31259]
stampKind: i32
value: int[-31259|0xffffffffffff85e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
v152 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
rawvalue: -28955
stableDimension: 0
stamp: i32 [-28955]
stampKind: i32
value: int[-28955|0xffffffffffff8ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
v148 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i32 [-31259 - -28955] bits:1...1000x1xx11100101
valueDescription: i32
=== Inputs ===
merge: v172 
values: i174 i180 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v172 values: i174 i180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v173 v179 
=== Succesors ===
next: v178 
=== Usages ===
i176 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v173 v179 #next: v178  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: aload_2
code: ResolvedJavaMethodBytecode<Integer.formatUnsignedInt(int, int, byte[], int)>
localsSize: 7
locksSize: 0
sourceFile: Integer.java
sourceLine: 392
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?63 
values: i87 i2 a242 - i88 - i41 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?63 values: i87 i2 a242 - i88 - i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
stateBefore: ?46 
actionAndReason: i176 
speculation: j175 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?46 actionAndReason: i176 speculation: j175  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v143  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 97
mayConvertToGuard: true
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = SHL (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = AND (x: v0|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = LZCNT value: v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SUB (x: v1|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = LEA address: [v7|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v1|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = AND x: v14|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA address: [v15|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v19|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + v20|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA address: [v20|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVSX input: [v25|QWORD[.] + v5|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v24|QWORD[.] + v27|DWORD * 1 + 16], y: reinterpret: v26|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHR (x: v0|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v28|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = AND (x: v4|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = DEC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVSX input: [v25|QWORD[.] + v31|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v24|QWORD[.] + v32|DWORD * 1 + 16], y: reinterpret: v33|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v32|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v34|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SHR (x: v30|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD, v35|DWORD] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA address: [v36|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31259|0xffffffffffff85e5]] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-28955|0xffffffffffff8ee5]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v29|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v145 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v145  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i5 i72 i66 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i168 i11 i55 i40 ?46 ?54 i72 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: bipush
code: ResolvedJavaMethodBytecode<Integer.toUnsignedString0(int, int)>
localsSize: 5
locksSize: 0
sourceFile: Integer.java
sourceLine: 364
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i1 i2 
=== Succesors ===
=== Usages ===
i11 v318 v143 a216 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:365) [bci: 10]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i39 v13 i40 v56 v90 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:389) [bci: 5]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i32
=== Inputs ===
x: i7 
y: i2 
=== Succesors ===
=== Usages ===
i41 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i7 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:365) [bci: 11]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i65 i41 i47 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:390) [bci: 11]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i32
=== Inputs ===
x: i40 
y: i8 
=== Succesors ===
=== Usages ===
?46 i49 ?54 i66 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i40 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 26]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i32
=== Inputs ===
x: i1 
y: i41 
=== Succesors ===
=== Usages ===
j131 v96 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i1 y: i41  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
result int[36|0x24] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
rawvalue: 36
stableDimension: 0
stamp: i32 [36]
stampKind: i32
value: int[36|0x24]
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 v112 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i66 
y: i95 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i66 y: i95  <|@  <|@
f <@*|@fixed>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v142 
falseSuccessor: v144 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v142 #falseSuccessor: v144  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = SHL (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = AND (x: v0|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: i11 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.numberOfLeadingZeros(int) [bci: -1]
at java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 3]
stamp: i32 [0 - 32] bits:0...0xxxxxx
=== Inputs ===
value: i1 
=== Succesors ===
=== Usages ===
i168 
=== Predecessor ===
- >@ <|@
instruction <@CountLeadingZeros|@jdk.graal.compiler.replacements.nodes.CountLeadingZerosNode>@ value: i1  <|@  <|@
f <@~|@floating>@ <|@
tid i168 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i2 
y: i5 
=== Succesors ===
=== Usages ===
i171 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i2 y: i5  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
result int[31|0x1f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 31
stableDimension: 0
stamp: i32 [31]
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i171 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i171 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i168 
y: i170 
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i168 y: i170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i11 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
canDeopt: true
deoptReasonAndAction: [null]
deoptSpeculation: [null]
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:365) [bci: 14]
op: DIV
stamp: i32
type: SIGNED
=== Inputs ===
stateBefore: ?3 
x: i171 
y: i2 
zeroGuard: - 
=== Succesors ===
next: v262 
=== Usages ===
i39 v13 
=== Predecessor ===
v142 >@ <|@
instruction <@/|@jdk.graal.compiler.nodes.calc.SignedDivNode>@ stateBefore: ?3 x: i171 y: i2 zeroGuard: - #next: v262  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: j182 
=== Usages ===
=== Predecessor ===
i11 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j182 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j244 
=== Usages ===
v326 v327 
=== Predecessor ===
v262 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j244  <|@  <|@
f <@~|@floating>@ <|@
tid v326 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j182 
index: - 
=== Succesors ===
=== Usages ===
j244 v246 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j244 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v326 
lastLocationAccess: - 
=== Succesors ===
next: j245 
=== Usages ===
j188 v328 v329 v330 a215 v331 v335 v332 v333 v334 
=== Predecessor ===
j182 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v326 lastLocationAccess: - #next: j245  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j182 
index: - 
=== Succesors ===
=== Usages ===
j245 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j182 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j245 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v327 
lastLocationAccess: - 
=== Succesors ===
next: v192 
=== Usages ===
v189 
=== Predecessor ===
j244 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v327 lastLocationAccess: - #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at java.lang.Integer.toUnsignedString0(Integer.java:365) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i11 
y: i7 
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i11 y: i7  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at java.lang.Integer.toUnsignedString0(Integer.java:365) [bci: 16]
stamp: i32 [1 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v13 
trueValue: i7 
falseValue: i11 
=== Succesors ===
=== Usages ===
i65 v251 v90 v121 j185 a216 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v13 trueValue: i7 falseValue: i11  <|@  <|@
f <@~|@floating>@ <|@
tid j185 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
resultBits: 64
stamp: i64 [1 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i39 
=== Succesors ===
=== Usages ===
j226 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i39  <|@  <|@
f <@~|@floating>@ <|@
tid j225 <|@
result long[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j226 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: i64 [24 - 2147483670] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j185 
y: j225 
=== Succesors ===
=== Usages ===
j187 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j185 y: j225  <|@  <|@
f <@~|@floating>@ <|@
tid j186 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j187 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j187 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: i64 [0 - 2147483664] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j226 
y: j186 
=== Succesors ===
=== Usages ===
j188 v204 j229 v332 v333 v334 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j226 y: j186  <|@  <|@
f <@~|@floating>@ <|@
tid j188 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: i64
=== Inputs ===
x: j187 
y: j244 
=== Succesors ===
=== Usages ===
v189 v246 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j187 y: j244  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j245 
y: j188 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j245 y: j188  <|@  <|@
f <@~|@floating>@ <|@
tid j175 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v178 v300 v252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j193 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v247 v295 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v189 
=== Succesors ===
trueSuccessor: v191 
falseSuccessor: v190 
=== Usages ===
=== Predecessor ===
j245 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v189 #trueSuccessor: v191 #falseSuccessor: v190  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = LZCNT value: v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SUB (x: v1|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = LEA address: [v7|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v1|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = AND x: v14|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a216 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a216  <|@  <|@
f <@~|@floating>@ <|@
tid v181 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a216 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v181 i39 
=== Succesors ===
next: v318 
=== Usages ===
v318 a242 
=== Predecessor ===
v191 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v181 i39 #next: v318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-66161|0xfffffffffffefd8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a216 
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
a216 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a216 #next: v220  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
v318 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v246 
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v326 
lastLocationAccess: - 
value: j188 
stateAfter: - 
=== Succesors ===
next: v234 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v326 lastLocationAccess: - value: j188 stateAfter: - #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
result [v15|QWORD + v10|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j187 
index: j244 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j187 index: j244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
address: v332 
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v332 #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid v333 <|@
result [v15|QWORD + v10|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j187 
index: j244 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j187 index: j244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
address: v333 
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v333 #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid v334 <|@
result [v15|QWORD + v10|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j187 
index: j244 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j187 index: j244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
address: v334 
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v334 #next: v247  <|@  <|@
f <@~|@floating>@ <|@
tid v328 <|@
result [v10|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j244 
index: - 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j244 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v328 
lastLocationAccess: - 
value: j193 
stateAfter: - 
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v328 lastLocationAccess: - value: j193 stateAfter: - #next: v250  <|@  <|@
f <@~|@floating>@ <|@
tid v335 <|@
result [v10|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j244 
index: - 
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j244 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v312 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v335 
lastLocationAccess: - 
value: v312 
stateAfter: - 
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v335 lastLocationAccess: - value: v312 stateAfter: - #next: v251  <|@  <|@
f <@~|@floating>@ <|@
tid v329 <|@
result [v10|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j244 
index: - 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j244 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v329 
lastLocationAccess: - 
value: i39 
stateAfter: - 
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v329 lastLocationAccess: - value: i39 stateAfter: - #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid j228 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j229 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j229 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: i64 [-16 - 2147483648] bits:x...x000
=== Inputs ===
x: j187 
y: j228 
=== Succesors ===
=== Usages ===
v196 v200 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j187 y: j228  <|@  <|@
f <@~|@floating>@ <|@
tid j231 <|@
result long[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j229 
y: j231 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j229 y: j231  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v198 
falseSuccessor: v197 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v198 #falseSuccessor: v197  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA address: [v15|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v19|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v201  <|@  <|@
f <@~|@floating>@ <|@
tid j230 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:205) [bci: 57]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:184) [bci: 167]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j212 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j101 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j203 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
v198 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j203 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v202 
values: j101 j212 
=== Succesors ===
=== Usages ===
v204 v330 j212 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v202 values: j101 j212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 56
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v201 
=== Succesors ===
next: v210 
=== Usages ===
j203 v209 v213 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v201 #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j203 
y: j187 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j203 y: j187  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v204 
=== Succesors ===
trueSuccessor: v205 
falseSuccessor: v209 
=== Usages ===
=== Predecessor ===
v202 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v204 #trueSuccessor: v205 #falseSuccessor: v209  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid v330 <|@
result [v10|QWORD + v20|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j244 
index: j203 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j244 index: j203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v330 
lastLocationAccess: - 
value: j175 
stateAfter: - 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v330 lastLocationAccess: - value: j175 stateAfter: - #next: v213  <|@  <|@
f <@~|@floating>@ <|@
tid j212 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: i64
=== Inputs ===
x: j203 
y: j230 
=== Succesors ===
=== Usages ===
j203 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j203 y: j230  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
loopBegin: v202 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v202  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + v20|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA address: [v20|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v202 
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v202 #next: v208  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
v209 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v331 <|@
result [v10|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j244 
index: - 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j244 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v331 
lastLocationAccess: - 
length: j229 
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v331 lastLocationAccess: - length: j229 #next: v206  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
v200 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v206 v208 
=== Succesors ===
next: v214 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v206 v208 #next: v214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: a215 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a215 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j244 
=== Succesors ===
next: v218 
=== Usages ===
a242 
=== Predecessor ===
v214 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j244 #next: v218  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
a215 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a242 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v219 
values: a215 a216 
=== Succesors ===
=== Usages ===
v322 ?46 ?54 ?63 ?85 v324 a159 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v219 values: a215 a216  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:367) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v218 v220 
=== Succesors ===
next: i314 
=== Usages ===
a242 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v218 v220 #next: i314  <|@  <|@
f <@~|@floating>@ <|@
tid a48 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 20]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
rawvalue: char[36]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# char[]
stampKind: a java.lang.Object
value: Object[char[36]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v323 v321 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j131 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i66 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i66  <|@  <|@
f <@~|@floating>@ <|@
tid v321 <|@
result [v25|QWORD[.] + v5|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a48 
index: j131 
=== Succesors ===
=== Usages ===
i314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a48 index: j131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i314 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i16
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i16
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v321 
lastLocationAccess: - 
=== Succesors ===
next: v111 
=== Usages ===
i132 
=== Predecessor ===
v219 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v321 lastLocationAccess: - #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid i65 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 15]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i32 [0 - 2147483646] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i39 
y: i8 
=== Succesors ===
=== Usages ===
j133 i88 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i39 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid j133 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 29]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
resultBits: 64
stamp: i64 [0 - 2147483646] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i65 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i65  <|@  <|@
f <@~|@floating>@ <|@
tid v322 <|@
result [v24|QWORD[.] + v27|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a242 
index: j133 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a242 index: j133  <|@  <|@
f <@~|@floating>@ <|@
tid i132 <|@
d <@d|@=== Debug Properties ===
inputBits: 16
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 28]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
resultBits: 8
stamp: i8
=== Inputs ===
value: i314 
=== Succesors ===
=== Usages ===
v111 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 29]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v322 
lastLocationAccess: - 
value: i132 
stateAfter: - 
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
i314 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v322 lastLocationAccess: - value: i132 stateAfter: - #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:394) [bci: 36]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i39 
y: i7 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i39 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:394) [bci: 36]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
profileData: PROFILED designatedSuccessorProbability: 0.42349162504617066
stamp: void
=== Inputs ===
condition: v90 
=== Succesors ===
trueSuccessor: v75 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v90 #trueSuccessor: v75 #falseSuccessor: v76  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVSX input: [v25|QWORD[.] + v5|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v24|QWORD[.] + v27|DWORD * 1 + 16], y: reinterpret: v26|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v82  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
v75 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v42  <|@  <|@
tid ?63 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Integer.toUnsignedString0(int, int)>
localsSize: 5
locksSize: 0
sourceFile: Integer.java
sourceLine: 368
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - - - a242 
=== Succesors ===
=== Usages ===
?46 ?54 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - a242  <|@  <|@
f <@~|@floating>@ <|@
tid i72 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 32]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i32
=== Inputs ===
x: i1 
y: i2 
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
v76 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHR (x: v0|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v28|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i88 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v43 
values: i65 i47 
=== Succesors ===
=== Usages ===
?46 i47 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v43 values: i65 i47  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v43 
values: i72 i55 
=== Succesors ===
=== Usages ===
?46 i49 ?54 i55 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v43 values: i72 i55  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 12
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v42 
=== Succesors ===
next: v149 
=== Usages ===
i88 i87 v57 v58 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v42 #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 26]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i32
=== Inputs ===
x: i41 
y: i87 
=== Succesors ===
=== Usages ===
j134 v112 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i41 y: i87  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i49 
y: i95 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i49 y: i95  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v112 
=== Succesors ===
trueSuccessor: v146 
falseSuccessor: v148 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v112 #trueSuccessor: v146 #falseSuccessor: v148  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = AND (x: v4|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v153  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 15]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i32
=== Inputs ===
x: i88 
y: i8 
=== Succesors ===
=== Usages ===
i88 j136 ?54 v56 v121 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i88 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 29]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i47 
y: i39 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i47 y: i39  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 29]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v121 
=== Succesors ===
trueSuccessor: v150 
falseSuccessor: v152 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v121 #trueSuccessor: v150 #falseSuccessor: v152  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = DEC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 29]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: i315 
=== Usages ===
v129 
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i315  <|@  <|@
f <@~|@floating>@ <|@
tid j134 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i49 
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i49  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
result [v25|QWORD[.] + v31|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S2
=== Inputs ===
base: a48 
index: j134 
=== Succesors ===
=== Usages ===
i315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a48 index: j134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i315 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i16
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: char
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i16
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v323 
lastLocationAccess: - 
=== Succesors ===
next: v129 
=== Usages ===
i135 
=== Predecessor ===
v150 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v323 lastLocationAccess: - #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid j136 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 29]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i47 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i47  <|@  <|@
f <@~|@floating>@ <|@
tid v324 <|@
result [v24|QWORD[.] + v32|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a242 
index: j136 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a242 index: j136  <|@  <|@
f <@~|@floating>@ <|@
tid i135 <|@
d <@d|@=== Debug Properties ===
inputBits: 16
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 28]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
resultBits: 8
stamp: i8
=== Inputs ===
value: i315 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i315  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 29]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v150 
address: v324 
lastLocationAccess: - 
value: i135 
stateAfter: - 
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
i315 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v150 address: v324 lastLocationAccess: - value: i135 stateAfter: - #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:394) [bci: 36]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i47 
y: i7 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i47 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:394) [bci: 36]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
profileData: INJECTED designatedSuccessorProbability: 0.7345801786142079
stamp: void
=== Inputs ===
condition: v56 
=== Succesors ===
trueSuccessor: v58 
falseSuccessor: v60 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v56 #trueSuccessor: v58 #falseSuccessor: v60  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVSX input: [v25|QWORD[.] + v31|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v24|QWORD[.] + v32|DWORD * 1 + 16], y: reinterpret: v33|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v154  <|@  <|@
tid ?54 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: iload_0
code: ResolvedJavaMethodBytecode<Integer.formatUnsignedInt(int, int, byte[], int)>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 29]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
sourceFile: Integer.java
sourceLine: 393
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?63 
values: i87 i2 a242 - i47 - i41 
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?63 values: i87 i2 a242 - i47 - i41  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
stateBefore: ?54 
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?54 #next: v57  <|@  <|@
f <@~|@floating>@ <|@
tid i55 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 32]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i32
=== Inputs ===
x: i87 
y: i2 
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i87 y: i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
loopBegin: v43 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v43  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v32|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v34|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SHR (x: v30|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD, v35|DWORD] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v43 
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v43 #next: v81  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
v58 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v81 v82 
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v81 v82 #next: v310  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: j268 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j268 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j292 
=== Usages ===
v336 v337 
=== Predecessor ===
v310 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j292  <|@  <|@
f <@~|@floating>@ <|@
tid v336 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j268 
index: - 
=== Succesors ===
=== Usages ===
j292 v294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j292 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v336 
lastLocationAccess: - 
=== Succesors ===
next: j293 
=== Usages ===
j271 v338 v339 a278 v340 v341 v342 
=== Predecessor ===
j268 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v336 lastLocationAccess: - #next: j293  <|@  <|@
f <@~|@floating>@ <|@
tid v337 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j268 
index: - 
=== Succesors ===
=== Usages ===
j293 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j268 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j293 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v337 
lastLocationAccess: - 
=== Succesors ===
next: v275 
=== Usages ===
v272 
=== Predecessor ===
j292 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v337 lastLocationAccess: - #next: v275  <|@  <|@
f <@~|@floating>@ <|@
tid j266 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j271 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: i64
=== Inputs ===
x: j292 
y: j266 
=== Succesors ===
=== Usages ===
v272 v294 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j292 y: j266  <|@  <|@
f <@~|@floating>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j293 
y: j271 
=== Succesors ===
=== Usages ===
v275 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j293 y: j271  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v272 
=== Succesors ===
trueSuccessor: v274 
falseSuccessor: v273 
=== Usages ===
=== Predecessor ===
j293 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v272 #trueSuccessor: v274 #falseSuccessor: v273  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA address: [v36|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: a279 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a279  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Integer.toUnsignedString0(int, int)>
localsSize: 5
locksSize: 0
sourceFile: Integer.java
sourceLine: 368
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - - - - a242 
=== Succesors ===
=== Usages ===
?86 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - a242  <|@  <|@
tid ?86 <|@
d <@d|@=== Debug Properties ===
bci: 39
bytecode: return
code: ResolvedJavaMethodBytecode<Integer.formatUnsignedInt(int, int, byte[], int)>
localsSize: 7
locksSize: 0
sourceFile: Integer.java
sourceLine: 395
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?85 
=== Succesors ===
=== Usages ===
v320 a279 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?85  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a279 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a279 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?86 
arguments: v265 
=== Succesors ===
next: v320 
=== Usages ===
v320 a290 
=== Predecessor ===
v274 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?86 arguments: v265 #next: v320  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-78449|0xfffffffffffecd8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?86 
object: a279 
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
a279 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?86 object: a279 #next: v283  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
v320 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v294 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v336 
lastLocationAccess: - 
value: j271 
stateAfter: - 
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v273 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v336 lastLocationAccess: - value: j271 stateAfter: - #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
result [v36|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
=== Inputs ===
address: v340 
=== Succesors ===
next: v295 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v340 #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid v338 <|@
result [v36|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v338 
lastLocationAccess: - 
value: j193 
stateAfter: - 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v338 lastLocationAccess: - value: j193 stateAfter: - #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
result [v36|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v313 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v342 
lastLocationAccess: - 
value: v313 
stateAfter: - 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v342 lastLocationAccess: - value: v313 stateAfter: - #next: v299  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
result [v36|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i267 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v339 
lastLocationAccess: - 
value: i267 
stateAfter: - 
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v339 lastLocationAccess: - value: i267 stateAfter: - #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
result [v36|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j292 
index: - 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v341 
lastLocationAccess: - 
value: j175 
stateAfter: - 
=== Succesors ===
next: a278 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v341 lastLocationAccess: - value: j175 stateAfter: - #next: a278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a278 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j292 
=== Succesors ===
next: v281 
=== Usages ===
a290 
=== Predecessor ===
v300 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j292 #next: v281  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
a278 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a290 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v282 
values: a278 a279 
=== Succesors ===
=== Usages ===
v325 a161 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v282 values: a278 a279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v281 v283 
=== Succesors ===
next: v160 
=== Usages ===
a290 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v281 v283 #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid v325 <|@
result [v42|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a290 
index: - 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a290 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a159 <|@
result v43|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
op: Compress
stamp: n!# byte[]
=== Inputs ===
value: a242 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 39]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v325 
lastLocationAccess: - 
value: a159 
stateAfter: - 
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v325 lastLocationAccess: - value: a159 stateAfter: - #next: v162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a161 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a161 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(int, int) [bci: -6] Placeholder
stamp: a!# java.lang.String
=== Inputs ===
object: a290 
=== Succesors ===
next: v38 
=== Usages ===
v38 
=== Predecessor ===
v162 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a290 #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:369) [bci: 49]
stamp: void
=== Inputs ===
memoryMap: - 
result: a161 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a161 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a161  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 29]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid i180 <|@
result int[-31259|0xffffffffffff85e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
rawvalue: -31259
stableDimension: 0
stamp: i32 [-31259]
stampKind: i32
value: int[-31259|0xffffffffffff85e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
v152 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31259|0xffffffffffff85e5]] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
result int[-28955|0xffffffffffff8ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
rawvalue: -28955
stableDimension: 0
stamp: i32 [-28955]
stampKind: i32
value: int[-28955|0xffffffffffff8ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
v148 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-28955|0xffffffffffff8ee5]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i176 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: i32 [-31259 - -28955] bits:1...1000x1xx11100101
valueDescription: i32
=== Inputs ===
merge: v172 
values: i174 i180 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v172 values: i174 i180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v173 v179 
=== Succesors ===
next: v178 
=== Usages ===
i176 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v173 v179 #next: v178  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: aload_2
code: ResolvedJavaMethodBytecode<Integer.formatUnsignedInt(int, int, byte[], int)>
localsSize: 7
locksSize: 0
sourceFile: Integer.java
sourceLine: 392
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?63 
values: i87 i2 a242 - i88 - i41 
=== Succesors ===
=== Usages ===
v178 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?63 values: i87 i2 a242 - i88 - i41  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
stateBefore: ?46 
actionAndReason: i176 
speculation: j175 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?46 actionAndReason: i176 speculation: j175  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v29|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
stamp: void
=== Inputs ===
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v143  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 97
mayConvertToGuard: true
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 27]
at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = SHL (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = AND (x: v0|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = LZCNT value: v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SUB (x: v1|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = LEA address: [v7|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v1|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = AND x: v14|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA address: [v15|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v19|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + v20|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA address: [v20|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVSX input: [v25|QWORD[.] + v5|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v24|QWORD[.] + v27|DWORD * 1 + 16], y: reinterpret: v26|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHR (x: v0|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v28|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = AND (x: v4|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = DEC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVSX input: [v25|QWORD[.] + v31|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v24|QWORD[.] + v32|DWORD * 1 + 16], y: reinterpret: v33|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v32|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v34|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SHR (x: v30|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD, v35|DWORD] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA address: [v36|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31259|0xffffffffffff85e5]] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-28955|0xffffffffffff8ee5]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v29|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = SHL (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = AND (x: v0|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = LZCNT value: v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SUB (x: v1|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = LEA address: [v7|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v1|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = AND x: v14|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA address: [v15|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v19|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + v20|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA address: [v20|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVSX input: [v25|QWORD[.] + v5|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v24|QWORD[.] + v27|DWORD * 1 + 16], y: reinterpret: v26|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHR (x: v0|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v28|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = AND (x: v4|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = DEC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVSX input: [v25|QWORD[.] + v31|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v24|QWORD[.] + v32|DWORD * 1 + 16], y: reinterpret: v33|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v32|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v34|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SHR (x: v30|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD, v35|DWORD] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA address: [v36|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31259|0xffffffffffff85e5]] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-28955|0xffffffffffff8ee5]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v29|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = SHL (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = AND (x: v0|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = LZCNT value: v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SUB (x: v1|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = LEA address: [v7|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v1|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = AND x: v14|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA address: [v15|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v19|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + v20|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA address: [v20|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVSX input: [v25|QWORD[.] + v5|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v24|QWORD[.] + v27|DWORD * 1 + 16], y: reinterpret: v26|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHR (x: v0|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v28|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = AND (x: v4|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = DEC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVSX input: [v25|QWORD[.] + v31|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v24|QWORD[.] + v32|DWORD * 1 + 16], y: reinterpret: v33|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v32|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v34|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SHR (x: v30|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD, v35|DWORD] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA address: [v36|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31259|0xffffffffffff85e5]] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-28955|0xffffffffffff8ee5]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v29|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = SHL (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = AND (x: v0|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = LZCNT value: v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SUB (x: v1|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = LEA address: [v7|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v1|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = AND x: v14|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA address: [v15|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v19|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + v20|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA address: [v20|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVSX input: [v25|QWORD[.] + v5|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v24|QWORD[.] + v27|DWORD * 1 + 16], y: reinterpret: v26|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHR (x: v0|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v28|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = AND (x: v4|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = DEC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVSX input: [v25|QWORD[.] + v31|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v24|QWORD[.] + v32|DWORD * 1 + 16], y: reinterpret: v33|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v32|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v34|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SHR (x: v30|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD, v35|DWORD] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA address: [v36|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31259|0xffffffffffff85e5]] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-28955|0xffffffffffff8ee5]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v29|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = SHL (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = AND (x: v0|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = LZCNT value: v0|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SUB (x: v1|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = LEA address: [v7|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v1|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = AND x: v14|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v10|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA address: [v15|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v19|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD + v20|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA address: [v20|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVSX input: [v25|QWORD[.] + v5|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v24|QWORD[.] + v27|DWORD * 1 + 16], y: reinterpret: v26|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHR (x: v0|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v28|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = AND (x: v4|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = DEC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVSX input: [v25|QWORD[.] + v31|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v24|QWORD[.] + v32|DWORD * 1 + 16], y: reinterpret: v33|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v32|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v34|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SHR (x: v30|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD, v35|DWORD] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA address: [v36|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-31259|0xffffffffffff85e5]] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-28955|0xffffffffffff8ee5]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v29|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v2|DWORD = SHL (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction v4|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction v5|DWORD = AND (x: v0|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction v6|DWORD = LZCNT value: v0|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction v7|DWORD = SUB (x: v1|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v8|DWORD = LEA address: [v7|DWORD + 31] size: DWORD <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v1|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr  118  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  126  <|@ instruction v11|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr  128  <|@ instruction v13|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction v15|QWORD = AND x: v14|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [v10|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v19|QWORD = LEA address: [v15|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: v19|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [v20|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v15|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [v10|QWORD + v20|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction v21|QWORD = LEA address: [v20|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [v21|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v23|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [v23|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [v24|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction v25|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  274  <|@ instruction v26|DWORD = MOVSX input: [v25|QWORD[.] + v5|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  276  <|@ instruction v27|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [v24|QWORD[.] + v27|DWORD * 1 + 16], y: reinterpret: v26|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  280  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction v28|DWORD = SHR (x: v0|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v28|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  300  <|@ instruction [v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v31|DWORD = AND (x: v4|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v32|DWORD = DEC value: v29|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction v33|DWORD = MOVSX input: [v25|QWORD[.] + v31|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOVB (x: [v24|QWORD[.] + v32|DWORD * 1 + 16], y: reinterpret: v33|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v32|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v34|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction v35|DWORD = SHR (x: v30|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [v32|DWORD, v35|DWORD] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction v36|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  416  <|@ instruction v37|QWORD = LEA address: [v36|QWORD + 24] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + 280] instr: 0 <|@ <|@
      nr  446  <|@ instruction MOV x: [v36|QWORD] y: 1 size: QWORD <|@ <|@
      nr  448  <|@ instruction MOV x: [v36|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  450  <|@ instruction MOV x: [v36|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [v36|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  454  <|@ instruction v41|QWORD[.] = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  458  <|@ instruction [v42|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v43|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction MOV (x: [v42|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr  484  <|@ instruction rax|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction v17|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  512  <|@ instruction rsi|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  518  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:0] <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction v38|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  546  <|@ instruction rsi|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr  550  <|@ instruction v39|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [v39|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rcx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction ZERO_MEMORY (pointer: [v10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [int[-31259|0xffffffffffff85e5]] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [int[-28955|0xffffffffffff8ee5]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  602  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v44|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v29|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  642  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v2|DWORD = SHL (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction v4|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction v5|DWORD = AND (x: v0|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction v6|DWORD = LZCNT value: v0|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction v7|DWORD = SUB (x: v1|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v8|DWORD = LEA address: [v7|DWORD + 31] size: DWORD <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v1|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr  118  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  126  <|@ instruction v11|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr  128  <|@ instruction v13|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction v15|QWORD = AND x: v14|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [v10|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v19|QWORD = LEA address: [v15|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: v19|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [v20|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v15|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [v10|QWORD + v20|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction v21|QWORD = LEA address: [v20|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [v21|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v23|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [v23|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [v24|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction v25|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  274  <|@ instruction v26|DWORD = MOVSX input: [v25|QWORD[.] + v5|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  276  <|@ instruction v27|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [v24|QWORD[.] + v27|DWORD * 1 + 16], y: reinterpret: v26|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  280  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction v28|DWORD = SHR (x: v0|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v28|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  300  <|@ instruction [v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v31|DWORD = AND (x: v4|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v32|DWORD = DEC value: v29|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction v33|DWORD = MOVSX input: [v25|QWORD[.] + v31|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOVB (x: [v24|QWORD[.] + v32|DWORD * 1 + 16], y: reinterpret: v33|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v32|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v34|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction v35|DWORD = SHR (x: v30|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [v32|DWORD, v35|DWORD] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction v36|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  416  <|@ instruction v37|QWORD = LEA address: [v36|QWORD + 24] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + 280] instr: 0 <|@ <|@
      nr  446  <|@ instruction MOV x: [v36|QWORD] y: 1 size: QWORD <|@ <|@
      nr  448  <|@ instruction MOV x: [v36|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  450  <|@ instruction MOV x: [v36|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [v36|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  454  <|@ instruction v41|QWORD[.] = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  458  <|@ instruction [v42|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v43|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction MOV (x: [v42|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr  484  <|@ instruction rax|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction v17|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  512  <|@ instruction rsi|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  518  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:0] <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction v38|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  546  <|@ instruction rsi|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr  550  <|@ instruction v39|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [v39|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rcx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction ZERO_MEMORY (pointer: [v10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [int[-31259|0xffffffffffff85e5]] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [int[-28955|0xffffffffffff8ee5]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  602  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v44|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v29|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  642  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v8|d [0, 1[[112, 118[[484, 486[[516, 518[[548, 550[[578, 579[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v1|d [0, 1[[38, 41[[294, 297[[370, 373[[576, 579[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v11|d [0, 34[[114, 117[[514, 516[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 28[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v17|q [0, 32[[512, 516[[546, 548[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[578, 579[ "NoDefinitionFound"
  v0|d DWORD "[v0|d]" v0|d rsi|q [32, 296[[488, 524[[556, 582[[624, 645[32 MustHaveRegister 44 ShouldHaveRegister 106 ShouldHaveRegister 296 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [34, 376[[488, 524[[556, 623[[624, 645[34 MustHaveRegister 38 ShouldHaveRegister 108 MustHaveRegister 116 MustHaveRegister 294 ShouldHaveRegister 370 ShouldHaveRegister 375 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d v3|d [40, 42[40 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [36, 40[36 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d v2|d [42, 376[[488, 524[[556, 623[42 MustHaveRegister 44 ShouldHaveRegister 312 ShouldHaveRegister 375 LiveAtLoopEnd  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d v0|d [44, 274[[488, 524[[556, 582[44 MustHaveRegister 46 ShouldHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [106, 109[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d v1|d [108, 110[108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [110, 112[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d rax|q [118, 126[118 MustHaveRegister 122 ShouldHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [120, 250[[556, 582[120 MustHaveRegister 134 ShouldHaveRegister 170 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 176 MustHaveRegister 178 MustHaveRegister 180 MustHaveRegister 224 MustHaveRegister 229 LiveAtLoopEnd 250 ShouldHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v9|d [126, 376[[488, 524[[556, 582[126 MustHaveRegister 128 ShouldHaveRegister 180 MustHaveRegister 276 ShouldHaveRegister 280 ShouldHaveRegister 330 MustHaveRegister 375 LiveAtLoopEnd 514 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [124, 127[124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v11|d [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [130, 132[130 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q v14|q [132, 230[132 MustHaveRegister 134 ShouldHaveRegister 170 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 182 MustHaveRegister 206 MustHaveRegister 229 LiveAtLoopEnd  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v15|q [134, 168[134 MustHaveRegister 136 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q -1 [510, 512[510 MustHaveRegister 512 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q rax|q [518, 523[518 MustHaveRegister 520 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [182, 186[[556, 576[182 MustHaveRegister 184 ShouldHaveRegister 576 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v21|q [196, 226[206 ShouldHaveRegister 224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q v20|q [226, 229[226 MustHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v10|q [250, 253[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q v23|q [254, 480[[524, 556[[582, 623[278 MustHaveRegister 348 MustHaveRegister 375 LiveAtLoopEnd 480 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q -1 [272, 376[272 MustHaveRegister 274 MustHaveRegister 346 MustHaveRegister 375 LiveAtLoopEnd  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d -1 [274, 278[274 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d v11|d [276, 299[276 MustHaveRegister 278 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v0|d [296, 299[296 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d v27|d [300, 332[[582, 623[328 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d v28|d [300, 372[[582, 623[312 ShouldHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d v4|d [312, 346[312 MustHaveRegister 314 ShouldHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d v29|d [328, 375[328 MustHaveRegister 330 ShouldHaveRegister 348 MustHaveRegister 350 ShouldHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d -1 [346, 348[346 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q -1 [368, 369[368 MustHaveRegister  "NoDefinitionFound"
  v35|d DWORD "[v35|d]" v35|d v30|d [372, 375[372 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q -1 [414, 454[414 MustHaveRegister 416 MustHaveRegister 444 MustHaveRegister 446 MustHaveRegister 448 MustHaveRegister 450 MustHaveRegister 452 MustHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q -1 [416, 442[416 MustHaveRegister 418 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q -1 [544, 546[544 MustHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q rax|q [550, 555[550 MustHaveRegister 552 MustHaveRegister 554 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q v36|q [454, 457[454 MustHaveRegister 456 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q v41|q [458, 484[482 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d v24|q [480, 482[480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d -1 [602, 618[618 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v8|d [0, 1[[112, 118[[484, 486[[516, 518[[548, 550[[578, 579[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v1|d [0, 1[[38, 41[[294, 297[[370, 373[[576, 579[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v11|d [0, 34[[114, 117[[514, 516[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 28[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v17|q [0, 32[[512, 516[[546, 548[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[578, 579[ "NoDefinitionFound"
  v0|d DWORD "[r10|d]" v0|d rsi|q [32, 296[[488, 524[[556, 582[[624, 645[32 MustHaveRegister 44 ShouldHaveRegister 106 ShouldHaveRegister 296 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[r11|d]" v1|d rdx|d [34, 376[[488, 524[[556, 623[[624, 645[34 MustHaveRegister 38 ShouldHaveRegister 108 MustHaveRegister 116 MustHaveRegister 294 ShouldHaveRegister 370 ShouldHaveRegister 375 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d v3|d [40, 42[40 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [36, 40[36 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r8|d]" v4|d v2|d [42, 376[[488, 524[[556, 623[42 MustHaveRegister 44 ShouldHaveRegister 312 ShouldHaveRegister 375 LiveAtLoopEnd  "NoSpillStore"
  v5|d DWORD "[r9|d]" v5|d v0|d [44, 274[[488, 524[[556, 582[44 MustHaveRegister 46 ShouldHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [106, 109[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rdx|d]" v7|d v1|d [108, 110[108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d -1 [110, 112[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d rax|q [118, 126[118 MustHaveRegister 122 ShouldHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rbx|q]" v10|q -1 [120, 250[[556, 582[120 MustHaveRegister 134 ShouldHaveRegister 170 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 176 MustHaveRegister 178 MustHaveRegister 180 MustHaveRegister 224 MustHaveRegister 229 LiveAtLoopEnd 250 ShouldHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rbp|d]" v11|d v9|d [126, 376[[488, 524[[556, 582[126 MustHaveRegister 128 ShouldHaveRegister 180 MustHaveRegister 276 ShouldHaveRegister 280 ShouldHaveRegister 330 MustHaveRegister 375 LiveAtLoopEnd 514 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rcx|d]" v12|d -1 [124, 127[124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rcx|q]" v13|q v11|d [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rcx|q]" v14|q -1 [130, 132[130 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rcx|q]" v15|q v14|q [132, 230[132 MustHaveRegister 134 ShouldHaveRegister 170 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 182 MustHaveRegister 206 MustHaveRegister 229 LiveAtLoopEnd  "NoSpillStore"
  v16|q QWORD "[rax|q]" v16|q v15|q [134, 168[134 MustHaveRegister 136 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q -1 [510, 512[510 MustHaveRegister 512 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q rax|q [518, 523[518 MustHaveRegister 520 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rdi|q]" v19|q -1 [182, 186[[556, 576[182 MustHaveRegister 184 ShouldHaveRegister 576 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rax|q]" v20|q v21|q [196, 226[206 ShouldHaveRegister 224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q v20|q [226, 229[226 MustHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rbx|q]" v23|q v10|q [250, 253[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rbx|q]" v24|q v23|q [254, 480[[524, 556[[582, 623[278 MustHaveRegister 348 MustHaveRegister 375 LiveAtLoopEnd 480 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rax|q]" v25|q -1 [272, 376[272 MustHaveRegister 274 MustHaveRegister 346 MustHaveRegister 375 LiveAtLoopEnd  "NoSpillStore"
  v26|d DWORD "[rcx|d]" v26|d -1 [274, 278[274 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rsi|d]" v27|d v11|d [276, 299[276 MustHaveRegister 278 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r10|d]" v28|d v0|d [296, 299[296 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rsi|d]" v29|d v27|d [300, 332[[582, 623[328 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r10|d]" v30|d v28|d [300, 372[[582, 623[312 ShouldHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rcx|d]" v31|d v4|d [312, 346[312 MustHaveRegister 314 ShouldHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rdx|d]" v32|d v29|d [328, 375[328 MustHaveRegister 330 ShouldHaveRegister 348 MustHaveRegister 350 ShouldHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rcx|d]" v33|d -1 [346, 348[346 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rcx|q]" v34|q -1 [368, 369[368 MustHaveRegister  "NoDefinitionFound"
  v35|d DWORD "[r10|d]" v35|d v30|d [372, 375[372 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q -1 [414, 454[414 MustHaveRegister 416 MustHaveRegister 444 MustHaveRegister 446 MustHaveRegister 448 MustHaveRegister 450 MustHaveRegister 452 MustHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rsi|q]" v37|q -1 [416, 442[416 MustHaveRegister 418 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rsi|q]" v38|q -1 [544, 546[544 MustHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rax|q]" v39|q rax|q [550, 555[550 MustHaveRegister 552 MustHaveRegister 554 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rax|q]" v41|q v36|q [454, 457[454 MustHaveRegister 456 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q v41|q [458, 484[482 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[rbx|d]" v43|d v24|q [480, 482[480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r9|d]" v44|d -1 [602, 618[618 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v2|DWORD = SHL (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction v4|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction v5|DWORD = AND (x: v0|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction v6|DWORD = LZCNT value: v0|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction v7|DWORD = SUB (x: v1|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v8|DWORD = LEA address: [v7|DWORD + 31] size: DWORD <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v1|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr  118  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  126  <|@ instruction v11|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr  128  <|@ instruction v13|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction v15|QWORD = AND x: v14|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [v10|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v19|QWORD = LEA address: [v15|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: v19|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [v20|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v15|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [v10|QWORD + v20|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction v21|QWORD = LEA address: [v20|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [v21|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v23|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [v23|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [v24|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction v25|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  274  <|@ instruction v26|DWORD = MOVSX input: [v25|QWORD[.] + v5|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  276  <|@ instruction v27|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [v24|QWORD[.] + v27|DWORD * 1 + 16], y: reinterpret: v26|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  280  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction v28|DWORD = SHR (x: v0|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v28|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  300  <|@ instruction [v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v31|DWORD = AND (x: v4|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v32|DWORD = DEC value: v29|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction v33|DWORD = MOVSX input: [v25|QWORD[.] + v31|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOVB (x: [v24|QWORD[.] + v32|DWORD * 1 + 16], y: reinterpret: v33|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v32|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v34|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction v35|DWORD = SHR (x: v30|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [v32|DWORD, v35|DWORD] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction v36|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  416  <|@ instruction v37|QWORD = LEA address: [v36|QWORD + 24] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + 280] instr: 0 <|@ <|@
      nr  446  <|@ instruction MOV x: [v36|QWORD] y: 1 size: QWORD <|@ <|@
      nr  448  <|@ instruction MOV x: [v36|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  450  <|@ instruction MOV x: [v36|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [v36|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  454  <|@ instruction v41|QWORD[.] = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  458  <|@ instruction [v42|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v43|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction MOV (x: [v42|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr  484  <|@ instruction rax|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction v17|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  512  <|@ instruction rsi|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  518  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:0] <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction v38|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  546  <|@ instruction rsi|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr  550  <|@ instruction v39|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [v39|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rcx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction ZERO_MEMORY (pointer: [v10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [int[-31259|0xffffffffffff85e5]] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [int[-28955|0xffffffffffff8ee5]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  602  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v44|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v29|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  642  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v8|d [0, 1[[112, 118[[484, 486[[516, 518[[548, 550[[578, 579[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v1|d [0, 1[[38, 41[[294, 297[[370, 373[[576, 579[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v11|d [0, 34[[114, 117[[514, 516[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 28[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v17|q [0, 32[[512, 516[[546, 548[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[578, 579[ "NoDefinitionFound"
  v0|d DWORD "[r10|d]" v0|d rsi|q [32, 296[[488, 524[[556, 582[[624, 645[32 MustHaveRegister 44 ShouldHaveRegister 106 ShouldHaveRegister 296 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[r11|d]" v1|d rdx|d [34, 376[[488, 524[[556, 623[[624, 645[34 MustHaveRegister 38 ShouldHaveRegister 108 MustHaveRegister 116 MustHaveRegister 294 ShouldHaveRegister 370 ShouldHaveRegister 375 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d v3|d [40, 42[40 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [36, 40[36 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r8|d]" v4|d v2|d [42, 376[[488, 524[[556, 623[42 MustHaveRegister 44 ShouldHaveRegister 312 ShouldHaveRegister 375 LiveAtLoopEnd  "NoSpillStore"
  v5|d DWORD "[r9|d]" v5|d v0|d [44, 274[[488, 524[[556, 582[44 MustHaveRegister 46 ShouldHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [106, 109[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rdx|d]" v7|d v1|d [108, 110[108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d -1 [110, 112[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d rax|q [118, 126[118 MustHaveRegister 122 ShouldHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rbx|q]" v10|q -1 [120, 250[[556, 582[120 MustHaveRegister 134 ShouldHaveRegister 170 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 176 MustHaveRegister 178 MustHaveRegister 180 MustHaveRegister 224 MustHaveRegister 229 LiveAtLoopEnd 250 ShouldHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rbp|d]" v11|d v9|d [126, 376[[488, 524[[556, 582[126 MustHaveRegister 128 ShouldHaveRegister 180 MustHaveRegister 276 ShouldHaveRegister 280 ShouldHaveRegister 330 MustHaveRegister 375 LiveAtLoopEnd 514 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rcx|d]" v12|d -1 [124, 127[124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rcx|q]" v13|q v11|d [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rcx|q]" v14|q -1 [130, 132[130 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rcx|q]" v15|q v14|q [132, 230[132 MustHaveRegister 134 ShouldHaveRegister 170 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 182 MustHaveRegister 206 MustHaveRegister 229 LiveAtLoopEnd  "NoSpillStore"
  v16|q QWORD "[rax|q]" v16|q v15|q [134, 168[134 MustHaveRegister 136 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q -1 [510, 512[510 MustHaveRegister 512 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q rax|q [518, 523[518 MustHaveRegister 520 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rdi|q]" v19|q -1 [182, 186[[556, 576[182 MustHaveRegister 184 ShouldHaveRegister 576 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rax|q]" v20|q v21|q [196, 226[206 ShouldHaveRegister 224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q v20|q [226, 229[226 MustHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rbx|q]" v23|q v10|q [250, 253[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rbx|q]" v24|q v23|q [254, 480[[524, 556[[582, 623[278 MustHaveRegister 348 MustHaveRegister 375 LiveAtLoopEnd 480 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rax|q]" v25|q -1 [272, 376[272 MustHaveRegister 274 MustHaveRegister 346 MustHaveRegister 375 LiveAtLoopEnd  "NoSpillStore"
  v26|d DWORD "[rcx|d]" v26|d -1 [274, 278[274 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rsi|d]" v27|d v11|d [276, 299[276 MustHaveRegister 278 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r10|d]" v28|d v0|d [296, 299[296 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rsi|d]" v29|d v27|d [300, 332[[582, 623[328 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r10|d]" v30|d v28|d [300, 372[[582, 623[312 ShouldHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rcx|d]" v31|d v4|d [312, 346[312 MustHaveRegister 314 ShouldHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rdx|d]" v32|d v29|d [328, 375[328 MustHaveRegister 330 ShouldHaveRegister 348 MustHaveRegister 350 ShouldHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rcx|d]" v33|d -1 [346, 348[346 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rcx|q]" v34|q -1 [368, 369[368 MustHaveRegister  "NoDefinitionFound"
  v35|d DWORD "[r10|d]" v35|d v30|d [372, 375[372 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q -1 [414, 454[414 MustHaveRegister 416 MustHaveRegister 444 MustHaveRegister 446 MustHaveRegister 448 MustHaveRegister 450 MustHaveRegister 452 MustHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rsi|q]" v37|q -1 [416, 442[416 MustHaveRegister 418 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rsi|q]" v38|q -1 [544, 546[544 MustHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rax|q]" v39|q rax|q [550, 555[550 MustHaveRegister 552 MustHaveRegister 554 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rax|q]" v41|q v36|q [454, 457[454 MustHaveRegister 456 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q v41|q [458, 484[482 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[rbx|d]" v43|d v24|q [480, 482[480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r9|d]" v44|d -1 [602, 618[618 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v2|DWORD = SHL (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction v4|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction v5|DWORD = AND (x: v0|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction v6|DWORD = LZCNT value: v0|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction v7|DWORD = SUB (x: v1|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v8|DWORD = LEA address: [v7|DWORD + 31] size: DWORD <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v1|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr  118  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  126  <|@ instruction v11|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr  128  <|@ instruction v13|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction v15|QWORD = AND x: v14|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [v10|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v19|QWORD = LEA address: [v15|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: v19|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [v20|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v15|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [v10|QWORD + v20|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction v21|QWORD = LEA address: [v20|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [v21|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v23|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [v23|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [v24|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction v25|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  274  <|@ instruction v26|DWORD = MOVSX input: [v25|QWORD[.] + v5|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  276  <|@ instruction v27|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [v24|QWORD[.] + v27|DWORD * 1 + 16], y: reinterpret: v26|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  280  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction v28|DWORD = SHR (x: v0|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [v27|DWORD, v28|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  300  <|@ instruction [v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v31|DWORD = AND (x: v4|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v32|DWORD = DEC value: v29|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction v33|DWORD = MOVSX input: [v25|QWORD[.] + v31|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOVB (x: [v24|QWORD[.] + v32|DWORD * 1 + 16], y: reinterpret: v33|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v32|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v34|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction v35|DWORD = SHR (x: v30|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [v32|DWORD, v35|DWORD] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction v36|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  416  <|@ instruction v37|QWORD = LEA address: [v36|QWORD + 24] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + 280] instr: 0 <|@ <|@
      nr  446  <|@ instruction MOV x: [v36|QWORD] y: 1 size: QWORD <|@ <|@
      nr  448  <|@ instruction MOV x: [v36|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  450  <|@ instruction MOV x: [v36|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [v36|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  454  <|@ instruction v41|QWORD[.] = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.]] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  458  <|@ instruction [v42|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v43|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction MOV (x: [v42|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr  484  <|@ instruction rax|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction v17|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  512  <|@ instruction rsi|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  518  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:0] <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [v18|QWORD[.]] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction v38|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  546  <|@ instruction rsi|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr  550  <|@ instruction v39|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [v39|QWORD[.]] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rcx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction ZERO_MEMORY (pointer: [v10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [int[-31259|0xffffffffffff85e5]] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [int[-28955|0xffffffffffff8ee5]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  602  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v44|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v29|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  642  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v8|d [0, 1[[112, 118[[484, 486[[516, 518[[548, 550[[578, 579[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v1|d [0, 1[[38, 41[[294, 297[[370, 373[[576, 579[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v11|d [0, 34[[114, 117[[514, 516[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 28[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v17|q [0, 32[[512, 516[[546, 548[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[578, 579[ "NoDefinitionFound"
  v0|d DWORD "[r10|d]" v0|d rsi|q [32, 296[[488, 524[[556, 582[[624, 645[32 MustHaveRegister 44 ShouldHaveRegister 106 ShouldHaveRegister 296 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[r11|d]" v1|d rdx|d [34, 376[[488, 524[[556, 623[[624, 645[34 MustHaveRegister 38 ShouldHaveRegister 108 MustHaveRegister 116 MustHaveRegister 294 ShouldHaveRegister 370 ShouldHaveRegister 375 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d v3|d [40, 42[40 MustHaveRegister 42 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [36, 40[36 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r8|d]" v4|d v2|d [42, 376[[488, 524[[556, 623[42 MustHaveRegister 44 ShouldHaveRegister 312 ShouldHaveRegister 375 LiveAtLoopEnd  "NoSpillStore"
  v5|d DWORD "[r9|d]" v5|d v0|d [44, 274[[488, 524[[556, 582[44 MustHaveRegister 46 ShouldHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [106, 109[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[rdx|d]" v7|d v1|d [108, 110[108 MustHaveRegister 110 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d -1 [110, 112[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d rax|q [118, 126[118 MustHaveRegister 122 ShouldHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rbx|q]" v10|q -1 [120, 250[[556, 582[120 MustHaveRegister 134 ShouldHaveRegister 170 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 176 MustHaveRegister 178 MustHaveRegister 180 MustHaveRegister 224 MustHaveRegister 229 LiveAtLoopEnd 250 ShouldHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rbp|d]" v11|d v9|d [126, 376[[488, 524[[556, 582[126 MustHaveRegister 128 ShouldHaveRegister 180 MustHaveRegister 276 ShouldHaveRegister 280 ShouldHaveRegister 330 MustHaveRegister 375 LiveAtLoopEnd 514 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rcx|d]" v12|d -1 [124, 127[124 MustHaveRegister 126 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rcx|q]" v13|q v11|d [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rcx|q]" v14|q -1 [130, 132[130 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rcx|q]" v15|q v14|q [132, 230[132 MustHaveRegister 134 ShouldHaveRegister 170 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 182 MustHaveRegister 206 MustHaveRegister 229 LiveAtLoopEnd  "NoSpillStore"
  v16|q QWORD "[rax|q]" v16|q v15|q [134, 168[134 MustHaveRegister 136 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q -1 [510, 512[510 MustHaveRegister 512 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q rax|q [518, 523[518 MustHaveRegister 520 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rdi|q]" v19|q -1 [182, 186[[556, 576[182 MustHaveRegister 184 ShouldHaveRegister 576 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rax|q]" v20|q v21|q [196, 226[206 ShouldHaveRegister 224 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q v20|q [226, 229[226 MustHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rbx|q]" v23|q v10|q [250, 253[250 MustHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rbx|q]" v24|q v23|q [254, 480[[524, 556[[582, 623[278 MustHaveRegister 348 MustHaveRegister 375 LiveAtLoopEnd 480 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rax|q]" v25|q -1 [272, 376[272 MustHaveRegister 274 MustHaveRegister 346 MustHaveRegister 375 LiveAtLoopEnd  "NoSpillStore"
  v26|d DWORD "[rcx|d]" v26|d -1 [274, 278[274 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rsi|d]" v27|d v11|d [276, 299[276 MustHaveRegister 278 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r10|d]" v28|d v0|d [296, 299[296 MustHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rsi|d]" v29|d v27|d [300, 332[[582, 623[328 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[r10|d]" v30|d v28|d [300, 372[[582, 623[312 ShouldHaveRegister 372 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rcx|d]" v31|d v4|d [312, 346[312 MustHaveRegister 314 ShouldHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[rdx|d]" v32|d v29|d [328, 375[328 MustHaveRegister 330 ShouldHaveRegister 348 MustHaveRegister 350 ShouldHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rcx|d]" v33|d -1 [346, 348[346 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rcx|q]" v34|q -1 [368, 369[368 MustHaveRegister  "NoDefinitionFound"
  v35|d DWORD "[r10|d]" v35|d v30|d [372, 375[372 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q -1 [414, 454[414 MustHaveRegister 416 MustHaveRegister 444 MustHaveRegister 446 MustHaveRegister 448 MustHaveRegister 450 MustHaveRegister 452 MustHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rsi|q]" v37|q -1 [416, 442[416 MustHaveRegister 418 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rsi|q]" v38|q -1 [544, 546[544 MustHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rax|q]" v39|q rax|q [550, 555[550 MustHaveRegister 552 MustHaveRegister 554 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rax|q]" v41|q v36|q [454, 457[454 MustHaveRegister 456 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q v41|q [458, 484[482 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[rbx|d]" v43|d v24|q [480, 482[480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r9|d]" v44|d -1 [602, 618[618 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v2|DWORD = SHL (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction v4|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction v5|DWORD = AND (x: v0|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction v6|DWORD = LZCNT value: v0|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction v7|DWORD = SUB (x: v1|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v8|DWORD = LEA address: [v7|DWORD + 31] size: DWORD <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v1|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr  118  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  126  <|@ instruction v11|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr  128  <|@ instruction v13|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction v15|QWORD = AND x: v14|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [v10|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v19|QWORD = LEA address: [v15|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: v19|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [v20|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v15|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [v10|QWORD + v20|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction v21|QWORD = LEA address: [v20|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v23|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [v24|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction v25|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  274  <|@ instruction v26|DWORD = MOVSX input: [v25|QWORD[.] + v5|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  276  <|@ instruction v27|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [v24|QWORD[.] + v27|DWORD * 1 + 16], y: reinterpret: v26|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  280  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction v28|DWORD = SHR (x: v0|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  300  <|@ instruction [v29|DWORD, v30|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v31|DWORD = AND (x: v4|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v32|DWORD = DEC value: v29|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction v33|DWORD = MOVSX input: [v25|QWORD[.] + v31|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOVB (x: [v24|QWORD[.] + v32|DWORD * 1 + 16], y: reinterpret: v33|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v32|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v34|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction v35|DWORD = SHR (x: v30|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: v32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction v36|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  416  <|@ instruction v37|QWORD = LEA address: [v36|QWORD + 24] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + 280] instr: 0 <|@ <|@
      nr  446  <|@ instruction MOV x: [v36|QWORD] y: 1 size: QWORD <|@ <|@
      nr  448  <|@ instruction MOV x: [v36|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  450  <|@ instruction MOV x: [v36|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [v36|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  454  <|@ instruction v41|QWORD[.] = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  458  <|@ instruction [v42|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v43|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction MOV (x: [v42|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr  484  <|@ instruction rax|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction v17|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  512  <|@ instruction rsi|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  518  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction v38|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  546  <|@ instruction rsi|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr  550  <|@ instruction v39|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rcx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction ZERO_MEMORY (pointer: [v10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVE input: int[-31259|0xffffffffffff85e5] // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVE input: int[-28955|0xffffffffffff8ee5] // MoveResolver resolve mapping <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  602  <|@ instruction [v44|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v44|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v29|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  642  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v3|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v2|DWORD = SHL (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction v4|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction v5|DWORD = AND (x: v0|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: v5|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction v6|DWORD = LZCNT value: v0|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction v7|DWORD = SUB (x: v1|DWORD, ~y: v6|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction v8|DWORD = LEA address: [v7|DWORD + 31] size: DWORD <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: v1|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr  118  <|@ instruction v9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction v10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP x: v9|DWORD y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction v12|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  126  <|@ instruction v11|DWORD = CMOVE (falseValue: v9|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr  128  <|@ instruction v13|QWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction v14|QWORD = LEA address: [v13|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction v15|QWORD = AND x: v14|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction v16|QWORD = ADD (x: v15|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: v16|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: v16|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [v15|QWORD + v10|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [v10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [v10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [v10|QWORD + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction v19|QWORD = LEA address: [v15|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: v19|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v15|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [v10|QWORD + v20|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction v21|QWORD = LEA address: [v20|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction v23|QWORD[.] = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction v25|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  274  <|@ instruction v26|DWORD = MOVSX input: [v25|QWORD[.] + v5|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  276  <|@ instruction v27|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [v24|QWORD[.] + v27|DWORD * 1 + 16], y: reinterpret: v26|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  280  <|@ instruction CMPCONSTBRANCH x: v11|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction v28|DWORD = SHR (x: v0|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction v31|DWORD = AND (x: v4|DWORD, y: v30|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction v32|DWORD = DEC value: v29|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v32|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction v33|DWORD = MOVSX input: [v25|QWORD[.] + v31|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOVB (x: [v24|QWORD[.] + v32|DWORD * 1 + 16], y: reinterpret: v33|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: v32|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v32|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v34|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction v35|DWORD = SHR (x: v30|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: v32|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction v36|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  416  <|@ instruction v37|QWORD = LEA address: [v36|QWORD + 24] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + 280] instr: 0 <|@ <|@
      nr  446  <|@ instruction MOV x: [v36|QWORD] y: 1 size: QWORD <|@ <|@
      nr  448  <|@ instruction MOV x: [v36|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  450  <|@ instruction MOV x: [v36|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [v36|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  454  <|@ instruction v41|QWORD[.] = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v43|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction MOV (x: [v42|QWORD[.] + 20], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr  484  <|@ instruction rax|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction v17|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  512  <|@ instruction rsi|QWORD = MOVE input: v17|QWORD moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = MOVE input: v11|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  518  <|@ instruction v18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [v18|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: v18|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction v38|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  546  <|@ instruction rsi|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr  550  <|@ instruction v39|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v39|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rcx|QWORD = MOVE input: v19|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction ZERO_MEMORY (pointer: [v10|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVE input: int[-31259|0xffffffffffff85e5] // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVE input: int[-28955|0xffffffffffff8ee5] // MoveResolver resolve mapping <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v44|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: v30|DWORD v1|DWORD v24|QWORD[.] - v29|DWORD - v4|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - v24|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  642  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: v0|DWORD v1|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction r9|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|DWORD = LZCNT value: r10|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 31] size: DWORD <|@ <|@
      nr  114  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP x: rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  126  <|@ instruction rbp|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  128  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [rbx|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + r9|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [rbx|QWORD[.] + rsi|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  280  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = AND (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rdx|DWORD = DEC value: rsi|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rdx|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  446  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  448  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-31259|0xffffffffffff85e5] // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-28955|0xffffffffffff8ee5] // MoveResolver resolve mapping <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rsi|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  642  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction r9|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|DWORD = LZCNT value: r10|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 31] size: DWORD <|@ <|@
      nr  114  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP x: rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  126  <|@ instruction rbp|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  128  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [rbx|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + r9|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [rbx|QWORD[.] + rsi|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  280  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = AND (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rdx|DWORD = DEC value: rsi|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rdx|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  446  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  448  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-31259|0xffffffffffff85e5] // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-28955|0xffffffffffff8ee5] // MoveResolver resolve mapping <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rsi|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  642  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction r9|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|DWORD = LZCNT value: r10|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 31] size: DWORD <|@ <|@
      nr  114  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP x: rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  126  <|@ instruction rbp|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  128  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [rbx|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + r9|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [rbx|QWORD[.] + rsi|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  280  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = AND (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rdx|DWORD = DEC value: rsi|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rdx|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  446  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  448  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-31259|0xffffffffffff85e5] // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-28955|0xffffffffffff8ee5] // MoveResolver resolve mapping <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rsi|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  642  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction r9|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|DWORD = LZCNT value: r10|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 31] size: DWORD <|@ <|@
      nr  114  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP x: rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  126  <|@ instruction rbp|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  128  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [rbx|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + r9|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [rbx|QWORD[.] + rsi|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  280  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = AND (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rdx|DWORD = DEC value: rsi|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rdx|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  446  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  448  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-31259|0xffffffffffff85e5] // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-28955|0xffffffffffff8ee5] // MoveResolver resolve mapping <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rsi|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  642  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction r9|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|DWORD = LZCNT value: r10|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 31] size: DWORD <|@ <|@
      nr  114  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP x: rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  126  <|@ instruction rbp|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  128  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [rbx|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + r9|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [rbx|QWORD[.] + rsi|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  280  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = AND (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rdx|DWORD = DEC value: rsi|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rdx|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  446  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  448  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-31259|0xffffffffffff85e5] // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-28955|0xffffffffffff8ee5] // MoveResolver resolve mapping <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rsi|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  642  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction r9|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|DWORD = LZCNT value: r10|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 31] size: DWORD <|@ <|@
      nr  114  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP x: rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  126  <|@ instruction rbp|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  128  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [rbx|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + r9|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [rbx|QWORD[.] + rsi|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  280  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = AND (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rdx|DWORD = DEC value: rsi|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rdx|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  446  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  448  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-31259|0xffffffffffff85e5] // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-28955|0xffffffffffff8ee5] // MoveResolver resolve mapping <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rsi|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  642  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction r9|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|DWORD = LZCNT value: r10|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 31] size: DWORD <|@ <|@
      nr  114  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP x: rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  126  <|@ instruction rbp|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  128  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [rbx|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + r9|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [rbx|QWORD[.] + rsi|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  280  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = AND (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rdx|DWORD = DEC value: rsi|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rdx|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  446  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  448  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-31259|0xffffffffffff85e5] // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-28955|0xffffffffffff8ee5] // MoveResolver resolve mapping <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rsi|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  642  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction r9|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|DWORD = LZCNT value: r10|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 31] size: DWORD <|@ <|@
      nr  114  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP x: rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  126  <|@ instruction rbp|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  128  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [rbx|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + r9|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [rbx|QWORD[.] + rsi|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  280  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = AND (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rdx|DWORD = DEC value: rsi|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rdx|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  446  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  448  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-31259|0xffffffffffff85e5] // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-28955|0xffffffffffff8ee5] // MoveResolver resolve mapping <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rsi|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  642  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction r9|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|DWORD = LZCNT value: r10|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 31] size: DWORD <|@ <|@
      nr  114  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP x: rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  126  <|@ instruction rbp|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  128  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [rbx|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + r9|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [rbx|QWORD[.] + rsi|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  280  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rdx|DWORD = DEC value: rsi|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rdx|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = AND (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  446  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  448  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-31259|0xffffffffffff85e5] // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rsi|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-28955|0xffffffffffff8ee5] // MoveResolver resolve mapping <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  642  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction r9|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|DWORD = LZCNT value: r10|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 31] size: DWORD <|@ <|@
      nr  114  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP x: rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  126  <|@ instruction rbp|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  128  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [rbx|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + r9|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [rbx|QWORD[.] + rsi|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  280  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rdx|DWORD = DEC value: rsi|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rdx|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = AND (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  446  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  448  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-31259|0xffffffffffff85e5] // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rsi|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-28955|0xffffffffffff8ee5] // MoveResolver resolve mapping <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  642  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction r9|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|DWORD = LZCNT value: r10|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 31] size: DWORD <|@ <|@
      nr  114  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP x: rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  126  <|@ instruction rbp|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  128  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [rbx|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + r9|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [rbx|QWORD[.] + rsi|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  280  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rdx|DWORD = DEC value: rsi|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rdx|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = AND (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  446  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  448  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  548  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  520  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-31259|0xffffffffffff85e5] // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rsi|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-28955|0xffffffffffff8ee5] // MoveResolver resolve mapping <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  642  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  644  <|@ st <@st|@live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction r9|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|DWORD = LZCNT value: r10|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 31] size: DWORD <|@ <|@
      nr  114  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP x: rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  126  <|@ instruction rbp|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  128  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [rbx|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + r9|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [rbx|QWORD[.] + rsi|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  280  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rdx|DWORD = DEC value: rsi|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@reference-map: [rax:0, rbx:0]
live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rdx|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = AND (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  446  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  448  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  548  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rax:0, rbx:0]
live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  520  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-31259|0xffffffffffff85e5] // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rsi|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-28955|0xffffffffffff8ee5] // MoveResolver resolve mapping <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  642  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  644  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B25" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction r8|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   44  <|@ instruction r9|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rax|DWORD = LZCNT value: r10|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 31] size: DWORD <|@ <|@
      nr  114  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD <|@ <|@
      nr  116  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:0] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  122  <|@ instruction CMP x: rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  124  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  126  <|@ instruction rbp|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rcx|DWORD) condition: < <|@ <|@
      nr  128  <|@ instruction rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  132  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  170  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  176  <|@ instruction MOV x: [rbx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  180  <|@ instruction MOV (x: [rbx|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  184  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  194  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + r9|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|DWORD = DEC value: rbp|DWORD size: DWORD <|@ <|@
      nr  278  <|@ instruction MOVB (x: [rbx|QWORD[.] + rsi|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  280  <|@ instruction CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B22" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction rdx|DWORD = DEC value: rsi|DWORD size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B16" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = MOVSX input: [rax|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4596673000119047744
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ st <@st|@reference-map: [rax:0, rbx:0]
live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rdx|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36] <|@ <|@
      nr  370  <|@ instruction rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B16" 
    successors "B14" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4605244190307640568
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rcx|DWORD = AND (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4603367945350512488
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B11" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  418  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0 <|@ <|@
      nr  446  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  448  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr  450  <|@ instruction MOV x: [rax|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV x: [rax|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3 <|@ <|@
      nr  482  <|@ instruction MOV (x: [rax|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD <|@ <|@
      nr  486  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B18" 
    xhandlers
    flags 
    probability 4601300566816915760
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr  548  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36] <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rax:0, rbx:0]
live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39]
locals: - - - - - - - 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:39, 36] <|@ <|@
      nr  554  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  514  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  516  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  520  <|@ st <@st|@reference-map: [rax:0]
live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-31259|0xffffffffffff85e5] // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  622  <|@ st <@st|@reference-map: [rbx:0]
live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14]
locals: r10|DWORD r11|DWORD rbx|QWORD[.] - rsi|DWORD - r8|DWORD 
java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36]
locals: - - - - rbx|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:14, 36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B24" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[-28955|0xffffffffffff8ee5] // MoveResolver resolve mapping <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  642  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  644  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0]
locals: r10|DWORD r11|DWORD - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: bipush        32
     2: iload_0       
     3: invokestatic  #10         // numberOfLeadingZeros:(int)int
     6: isub          
     7: istore_2      
     8: iload_2       
     9: iload_1       
    10: iconst_1      
    11: isub          
    12: iadd          
    13: iload_1       
    14: idiv          
    15: iconst_1      
    16: invokestatic  #11         // java.lang.Math.max:(int, int)int
    19: istore_3      
    20: getstatic     #1          // java.lang.String.COMPACT_STRINGS:boolean
    23: ifeq          50
    26: iload_3       
    27: newarray      byte
    29: astore        4
    31: iload_0       
    32: iload_1       
    33: aload         4
    35: iload_3       
    36: invokestatic  #12         // formatUnsignedInt:(int, int, byte[], int)void
    39: new           #5          // java.lang.String
    42: dup           
    43: aload         4
    45: iconst_0      
    46: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    49: areturn       
    50: iload_3       
    51: iconst_2      
    52: imul          
    53: newarray      byte
    55: astore        4
    57: iload_0       
    58: iload_1       
    59: aload         4
    61: iload_3       
    62: invokestatic  #14         // formatUnsignedIntUTF16:(int, int, byte[], int)void
    65: new           #5          // java.lang.String
    68: dup           
    69: aload         4
    71: iconst_1      
    72: invokespecial #13         // java.lang.String.<init>:(byte[], byte)void
    75: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec189041817f20000000000f85170300009090909090909090909090909048896c2410448bd6448bdab801000000418bcbd3e0448bc041ffc8458bca4523c84183f9240f83b502000090909090909090909090909090909090909090909090909090909090f3410fbdc2418bd32bd08d421f9941f7fb498b9fb801000083f801b9010000008be80f4ce98bcd488d49174883e1f8488bc14803c3493b87c80100000f87d50100009090909090909090909090909090498987b80100000f188419000100000f188419400100000f1884198001000048c70301000000c74308addeadde896b0c488d79f04881ff000800000f83b301000090909048c7c010000000e9250000006666660f1f840000000000666666906666909090909090909048c7040300000000488d400890909090483bc877e490909090909090909090909090909048b8addeaddeaddeadde420fbf4c48108bf5ffce884c331083fd010f84ed0000009090909090418bcb41d3eae9450000000f1f400090909090908bd6ffca3bea0f863c0100009090909090900fbf4c4810884c131083fa010f8c2d00000090909090909090498b8f580400008501418bcb41d3ea8bf29090909090418bc84123ca83f92472afe9260100009090909090909090909090498b87b8010000488d7018493bb7c80100000f8768000000909090909090909090904989b7b80100000f18801801000048c70001000000c74008addeaddec7400c0000000048c74010000000009090909090909090909048c1eb03895814488b6c24104883c418493ba7500400000f87ec000000c5f877c3909090e978ffffff90909090909090909048beaddeaddeaddeaddee8000000000f1f8400000000008500eba99090909090909090909048beaddeaddeaddeadde8bd5e8000000000f1f8400000000008500488bd8e991feffff909090909090909090488bcf488d7b104833c0f348aae972feffff90909041b9e585ffff9090909090909045898f8404000049c7879004000000000000e8000000000f1f84000000000090909041b9e58effffebcf9090909090909041c78784040000e59effff49c7879004000000000000e8000000000f1f84000000000048896c2410e800000000e9dafcfffff4488d0d00ffffff49898f68040000e9acfcfffff441c787840400008fcdfeff49c7879004000000000000e8000000000f1f84000000000041c787840400008ffdfeff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 NOP  <||@
  Comment 38 26 NOP  <||@
  Comment 39 28 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 44 30 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD  <||@
  Comment 44 32 r10|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 47 34 r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 50 36 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 55 38 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 58 40 rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 60 42 r8|DWORD = DEC value: rax|DWORD size: DWORD  <||@
  Comment 66 44 r9|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 72 46 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null  <||@
  Comment 82 block B1 null  <||@
  Comment 82 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 82 50 NOP  <||@
  Comment 83 52 NOP  <||@
  Comment 84 54 NOP  <||@
  Comment 85 56 NOP  <||@
  Comment 86 58 NOP  <||@
  Comment 87 60 NOP  <||@
  Comment 88 62 NOP  <||@
  Comment 89 64 NOP  <||@
  Comment 90 66 NOP  <||@
  Comment 91 68 NOP  <||@
  Comment 92 70 NOP  <||@
  Comment 93 72 NOP  <||@
  Comment 94 74 NOP  <||@
  Comment 95 76 NOP  <||@
  Comment 96 78 NOP  <||@
  Comment 97 80 NOP  <||@
  Comment 98 82 NOP  <||@
  Comment 99 84 NOP  <||@
  Comment 100 86 NOP  <||@
  Comment 101 88 NOP  <||@
  Comment 102 90 NOP  <||@
  Comment 103 92 NOP  <||@
  Comment 104 94 NOP  <||@
  Comment 105 96 NOP  <||@
  Comment 106 98 NOP  <||@
  Comment 107 100 NOP  <||@
  Comment 108 102 NOP  <||@
  Comment 109 104 NOP  <||@
  Comment 110 106 rax|DWORD = LZCNT value: r10|DWORD size: DWORD  <||@
  Comment 115 108 rdx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 120 110 rax|DWORD = LEA address: [rdx|DWORD + 31] size: DWORD  <||@
  Comment 123 114 (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD  <||@
  Comment 124 116 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:0]  <||@
  Comment 124 []at java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2  |3  |4 
     locals:  |r10|DWORD  |r11|DWORD  |-  |-  |-   <||@
  Comment 124 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 127 120 rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 134 122 CMP x: rax|DWORD y: 1 size: DWORD  <||@
  Comment 137 124 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 142 126 rbp|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rcx|DWORD) condition: <  <||@
  Comment 147 128 rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 149 130 rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD  <||@
  Comment 153 132 rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD  <||@
  Comment 157 134 rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 163 136 CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD  <||@
  Comment 176 block B3 null  <||@
  Comment 176 138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 176 140 NOP  <||@
  Comment 177 142 NOP  <||@
  Comment 178 144 NOP  <||@
  Comment 179 146 NOP  <||@
  Comment 180 148 NOP  <||@
  Comment 181 150 NOP  <||@
  Comment 182 152 NOP  <||@
  Comment 183 154 NOP  <||@
  Comment 184 156 NOP  <||@
  Comment 185 158 NOP  <||@
  Comment 186 160 NOP  <||@
  Comment 187 162 NOP  <||@
  Comment 188 164 NOP  <||@
  Comment 189 166 NOP  <||@
  Comment 190 168 MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD  <||@
  Comment 197 170 AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0  <||@
  Comment 205 172 AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0  <||@
  Comment 213 174 AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0  <||@
  Comment 221 176 MOV x: [rbx|QWORD] y: 1 size: QWORD  <||@
  Comment 228 178 MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 228 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 235 180 MOV (x: [rbx|QWORD + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 238 182 rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD  <||@
  Comment 242 184 CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 255 block B4 null  <||@
  Comment 255 186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 255 188 NOP  <||@
  Comment 256 190 NOP  <||@
  Comment 257 192 NOP  <||@
  Comment 258 -1 rax|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 265 194 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 270 block B6 loop 0 depth 1 header:202|LoopBegin  <||@
  Comment 270 208 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 288 210 NOP  <||@
  Comment 289 212 NOP  <||@
  Comment 290 214 NOP  <||@
  Comment 291 216 NOP  <||@
  Comment 292 218 NOP  <||@
  Comment 293 220 NOP  <||@
  Comment 294 222 NOP  <||@
  Comment 295 224 MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 303 226 rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD  <||@
  Comment 307 228 JUMP ~outgoingValues: [] destination: B6 -> B5  <||@
  Comment 307 block B5 loop 0 depth 1 header:202|LoopBegin  <||@
  Comment 307 196 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 307 198 NOP  <||@
  Comment 308 200 NOP  <||@
  Comment 309 202 NOP  <||@
  Comment 310 204 NOP  <||@
  Comment 311 206 CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD  <||@
  Comment 316 block B7 null  <||@
  Comment 316 230 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 316 232 NOP  <||@
  Comment 317 234 NOP  <||@
  Comment 318 236 NOP  <||@
  Comment 319 238 JUMP ~outgoingValues: [] destination: B7 -> B9  <||@
  Comment 319 block B9 null  <||@
  Comment 319 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 319 242 NOP  <||@
  Comment 320 244 NOP  <||@
  Comment 321 246 NOP  <||@
  Comment 322 248 NOP  <||@
  Comment 323 250 rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD  <||@
  Comment 323 252 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 323 block B10 null  <||@
  Comment 323 254 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 323 256 NOP  <||@
  Comment 324 258 NOP  <||@
  Comment 325 260 NOP  <||@
  Comment 326 262 NOP  <||@
  Comment 327 264 NOP  <||@
  Comment 328 266 NOP  <||@
  Comment 329 268 NOP  <||@
  Comment 330 270 NOP  <||@
  Comment 331 272 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 331 {Object[char[36]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 341 274 rcx|DWORD = MOVSX input: [rax|QWORD[.] + r9|DWORD * 2 + 16] size: DWORD  <||@
  Comment 347 276 rsi|DWORD = DEC value: rbp|DWORD size: DWORD  <||@
  Comment 351 278 MOVB (x: [rbx|QWORD[.] + rsi|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE  <||@
  Comment 355 280 CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null  <||@
  Comment 364 block B12 null  <||@
  Comment 364 282 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 364 284 NOP  <||@
  Comment 365 286 NOP  <||@
  Comment 366 288 NOP  <||@
  Comment 367 290 NOP  <||@
  Comment 368 292 NOP  <||@
  Comment 369 294 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 372 296 r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 375 298 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 380 block B14 loop 1 depth 1 header:43|LoopBegin  <||@
  Comment 380 316 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 384 318 NOP  <||@
  Comment 385 320 NOP  <||@
  Comment 386 322 NOP  <||@
  Comment 387 324 NOP  <||@
  Comment 388 326 NOP  <||@
  Comment 389 328 rdx|DWORD = DEC value: rsi|DWORD size: DWORD  <||@
  Comment 393 330 CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD  <||@
  Comment 401 block B15 loop 1 depth 1 header:43|LoopBegin  <||@
  Comment 401 332 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 401 334 NOP  <||@
  Comment 402 336 NOP  <||@
  Comment 403 338 NOP  <||@
  Comment 404 340 NOP  <||@
  Comment 405 342 NOP  <||@
  Comment 406 344 NOP  <||@
  Comment 407 346 rcx|DWORD = MOVSX input: [rax|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 412 348 MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE  <||@
  Comment 416 350 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null  <||@
  Comment 425 block B16 loop 1 depth 1 header:43|LoopBegin  <||@
  Comment 425 352 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 425 354 NOP  <||@
  Comment 426 356 NOP  <||@
  Comment 427 358 NOP  <||@
  Comment 428 360 NOP  <||@
  Comment 429 362 NOP  <||@
  Comment 430 364 NOP  <||@
  Comment 431 366 NOP  <||@
  Comment 432 368 SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36]  <||@
  Comment 439 [rax:0, rbx:0]at java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30, duringCall: false, rethrow: false]
              |0          |1          |2             |3  |4          |5  |6        
     locals:  |r10|DWORD  |r11|DWORD  |rbx|QWORD[.]  |-  |rdx|DWORD  |-  |r8|DWORD 
  at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4            
     locals:  |-  |-  |-  |-  |rbx|QWORD[.]   <||@
  Comment 439 {infopoint: SAFEPOINT}  <||@
  Comment 439 POLL_FAR  <||@
  Comment 441 370 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 444 372 r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 447 -1 rsi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 449 374 JUMP ~outgoingValues: [] destination: B16 -> B13  <||@
  Comment 449 block B13 loop 1 depth 1 header:43|LoopBegin  <||@
  Comment 449 300 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 449 302 NOP  <||@
  Comment 450 304 NOP  <||@
  Comment 451 306 NOP  <||@
  Comment 452 308 NOP  <||@
  Comment 453 310 NOP  <||@
  Comment 454 312 rcx|DWORD = AND (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 460 314 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null  <||@
  Comment 470 block B17 null  <||@
  Comment 470 376 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 470 378 NOP  <||@
  Comment 471 380 NOP  <||@
  Comment 472 382 NOP  <||@
  Comment 473 384 JUMP ~outgoingValues: [] destination: B17 -> B18  <||@
  Comment 473 block B18 null  <||@
  Comment 473 396 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 473 398 NOP  <||@
  Comment 474 400 NOP  <||@
  Comment 475 402 NOP  <||@
  Comment 476 404 NOP  <||@
  Comment 477 406 NOP  <||@
  Comment 478 408 NOP  <||@
  Comment 479 410 NOP  <||@
  Comment 480 412 NOP  <||@
  Comment 481 414 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 488 416 rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD  <||@
  Comment 492 418 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD  <||@
  Comment 505 block B20 null  <||@
  Comment 505 420 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 505 422 NOP  <||@
  Comment 506 424 NOP  <||@
  Comment 507 426 NOP  <||@
  Comment 508 428 NOP  <||@
  Comment 509 430 NOP  <||@
  Comment 510 432 NOP  <||@
  Comment 511 434 NOP  <||@
  Comment 512 436 NOP  <||@
  Comment 513 438 NOP  <||@
  Comment 514 440 NOP  <||@
  Comment 515 442 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 522 444 AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0  <||@
  Comment 529 446 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 536 448 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 536 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 543 450 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 550 452 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 558 454 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 558 456 JUMP ~outgoingValues: [] destination: B20 -> B21  <||@
  Comment 558 block B21 null  <||@
  Comment 558 458 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 558 460 NOP  <||@
  Comment 559 462 NOP  <||@
  Comment 560 464 NOP  <||@
  Comment 561 466 NOP  <||@
  Comment 562 468 NOP  <||@
  Comment 563 470 NOP  <||@
  Comment 564 472 NOP  <||@
  Comment 565 474 NOP  <||@
  Comment 566 476 NOP  <||@
  Comment 567 478 NOP  <||@
  Comment 568 480 rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3  <||@
  Comment 572 482 MOV (x: [rax|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD  <||@
  Comment 575 486 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 584 POLL_RETURN_FAR  <||@
  Comment 601 block B11 null  <||@
  Comment 601 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 601 388 NOP  <||@
  Comment 602 390 NOP  <||@
  Comment 603 392 NOP  <||@
  Comment 604 394 JUMP ~outgoingValues: [] destination: B11 -> B18  <||@
  Comment 609 block B19 null  <||@
  Comment 609 524 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 609 526 NOP  <||@
  Comment 610 528 NOP  <||@
  Comment 611 530 NOP  <||@
  Comment 612 532 NOP  <||@
  Comment 613 534 NOP  <||@
  Comment 614 536 NOP  <||@
  Comment 615 538 NOP  <||@
  Comment 616 540 NOP  <||@
  Comment 617 542 NOP  <||@
  Comment 618 544 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 618 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 628 548 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36]  <||@
  Comment 628 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 633 [rbx:0]at java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |- 
  at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4            
     locals:  |-  |-  |-  |-  |rbx|QWORD[.]   <||@
  Comment 641 552 NULLCHECK address: [rax|QWORD[.]] state [bci:39, 36]  <||@
  Comment 641 [rax:0, rbx:0]at java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |- 
  at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4            
     locals:  |-  |-  |-  |-  |rbx|QWORD[.]   <||@
  Comment 641 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 643 554 JUMP ~outgoingValues: [] destination: B19 -> B21  <||@
  Comment 645 block B2 null  <||@
  Comment 645 488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 645 490 NOP  <||@
  Comment 646 492 NOP  <||@
  Comment 647 494 NOP  <||@
  Comment 648 496 NOP  <||@
  Comment 649 498 NOP  <||@
  Comment 650 500 NOP  <||@
  Comment 651 502 NOP  <||@
  Comment 652 504 NOP  <||@
  Comment 653 506 NOP  <||@
  Comment 654 508 NOP  <||@
  Comment 655 510 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 655 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 665 514 rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 667 516 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 667 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 672 []at java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2  |3  |4 
     locals:  |r10|DWORD  |r11|DWORD  |-  |-  |-   <||@
  Comment 680 520 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 680 [rax:0]at java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2  |3  |4 
     locals:  |r10|DWORD  |r11|DWORD  |-  |-  |-   <||@
  Comment 680 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 682 -1 rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 685 522 JUMP ~outgoingValues: [] destination: B2 -> B10  <||@
  Comment 690 block B8 null  <||@
  Comment 690 556 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 690 558 NOP  <||@
  Comment 691 560 NOP  <||@
  Comment 692 562 NOP  <||@
  Comment 693 564 NOP  <||@
  Comment 694 566 NOP  <||@
  Comment 695 568 NOP  <||@
  Comment 696 570 NOP  <||@
  Comment 697 572 NOP  <||@
  Comment 698 574 NOP  <||@
  Comment 699 576 rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 702 578 ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 712 580 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 717 block B22 null  <||@
  Comment 717 582 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 717 584 NOP  <||@
  Comment 718 586 NOP  <||@
  Comment 719 588 NOP  <||@
  Comment 720 -1 r9|DWORD = MOVE input: int[-31259|0xffffffffffff85e5]  <||@
  Comment 726 590 JUMP ~outgoingValues: [] destination: B22 -> B24  <||@
  Comment 726 block B24 null  <||@
  Comment 726 602 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 726 604 NOP  <||@
  Comment 727 606 NOP  <||@
  Comment 728 608 NOP  <||@
  Comment 729 610 NOP  <||@
  Comment 730 612 NOP  <||@
  Comment 731 614 NOP  <||@
  Comment 732 616 NOP  <||@
  Comment 733 618 MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD  <||@
  Comment 740 620 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 751 622 DEOPT info [bci:14, 36]  <||@
  Comment 751 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 756 [rbx:0]at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14, duringCall: false, rethrow: false]
              |0          |1          |2             |3  |4          |5  |6        
     locals:  |r10|DWORD  |r11|DWORD  |rbx|QWORD[.]  |-  |rsi|DWORD  |-  |r8|DWORD 
  at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4            
     locals:  |-  |-  |-  |-  |rbx|QWORD[.]   <||@
  Comment 764 block B23 null  <||@
  Comment 764 592 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 764 594 NOP  <||@
  Comment 765 596 NOP  <||@
  Comment 766 598 NOP  <||@
  Comment 767 -1 r9|DWORD = MOVE input: int[-28955|0xffffffffffff8ee5]  <||@
  Comment 773 600 JUMP ~outgoingValues: [] destination: B23 -> B24  <||@
  Comment 775 block B25 null  <||@
  Comment 775 624 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 775 626 NOP  <||@
  Comment 776 628 NOP  <||@
  Comment 777 630 NOP  <||@
  Comment 778 632 NOP  <||@
  Comment 779 634 NOP  <||@
  Comment 780 636 NOP  <||@
  Comment 781 638 NOP  <||@
  Comment 782 640 MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD  <||@
  Comment 793 642 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 804 644 DEOPT info [bci:0]  <||@
  Comment 804 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 809 []at java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2  |3  |4 
     locals:  |r10|DWORD  |r11|DWORD  |-  |-  |-   <||@
  Comment 822 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 847 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 875 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 880 [rax:0, rbx:0]at java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |- 
  at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4            
     locals:  |-  |-  |-  |-  |rbx|QWORD[.]   <||@
  Comment 910 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 915 [rax:0]at java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2  |3  |4 
     locals:  |r10|DWORD  |r11|DWORD  |-  |-  |-   <||@
  Comment 923 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 923 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 929 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 929 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9607[java.lang.Integer.toUnsignedString0(int, int)]"
  method "HotSpotCompilation-9607[java.lang.Integer.toUnsignedString0(int, int)]"
  date 1724269759789
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af33820 89842400c0feff4883ec189041817f20000000000f85170300009090909090909090909090909048896c2410448bd6448bdab801000000418bcbd3e0448bc041ffc8458bca4523c84183f9240f83b502000090909090909090909090909090909090909090909090909090909090f3410fbdc2418bd32bd08d421f9941f7fb498b9fb801000083f801b9010000008be80f4ce98bcd488d49174883e1f8488bc14803c3493b87c80100000f87d50100009090909090909090909090909090498987b80100000f188419000100000f188419400100000f1884198001000048c70301000000c74308c0220000896b0c488d79f04881ff000800000f83b301000090909048c7c010000000e9250000006666660f1f840000000000666666906666909090909090909048c7040300000000488d400890909090483bc877e490909090909090909090909090909048b8e0f3de2d06000000420fbf4c48108bf5ffce884c331083fd010f84ed0000009090909090418bcb41d3eae9450000000f1f400090909090908bd6ffca3bea0f863c0100009090909090900fbf4c4810884c131083fa010f8c2d00000090909090909090498b8f580400008501418bcb41d3ea8bf29090909090418bc84123ca83f92472afe9260100009090909090909090909090498b87b8010000488d7018493bb7c80100000f8768000000909090909090909090904989b7b80100000f18801801000048c70001000000c74008d8e80000c7400c0000000048c74010000000009090909090909090909048c1eb03895814488b6c24104883c418493ba7500400000f87ec000000c5f877c3909090e978ffffff90909090909090909048bed8e8002b787f0000e8e7479afe0f1f8400000000008500eba99090909090909090909048bec022002b787f00008bd5e840b199fe0f1f8400000000008500488bd8e991feffff909090909090909090488bcf488d7b104833c0f348aae972feffff90909041b9e585ffff9090909090909045898f8404000049c7879004000000000000e8667685fe0f1f84000000000090909041b9e58effffebcf9090909090909041c78784040000e59effff49c7879004000000000000e8317685fe0f1f84000000000048896c2410e8c57683fee9dafcfffff4488d0d00ffffff49898f68040000e98c8485fef441c787840400008fcdfeff49c7879004000000000000e8ea7585fe0f1f84000000000041c787840400008ffdfeff49c7879004000000000000e8c77585fe0f1f840000000000e8401799fef4e85a7385fef4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|DWORD, rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 NOP  <||@
  Comment 38 26 NOP  <||@
  Comment 39 28 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 44 30 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@e248755 slotKind: QWORD  <||@
  Comment 44 32 r10|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 47 34 r11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 50 36 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 55 38 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 58 40 rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 60 42 r8|DWORD = DEC value: rax|DWORD size: DWORD  <||@
  Comment 66 44 r9|DWORD = AND (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 72 46 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B25 y: 36 size: DWORD inlinedY: null  <||@
  Comment 82 block B1 null  <||@
  Comment 82 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 82 50 NOP  <||@
  Comment 83 52 NOP  <||@
  Comment 84 54 NOP  <||@
  Comment 85 56 NOP  <||@
  Comment 86 58 NOP  <||@
  Comment 87 60 NOP  <||@
  Comment 88 62 NOP  <||@
  Comment 89 64 NOP  <||@
  Comment 90 66 NOP  <||@
  Comment 91 68 NOP  <||@
  Comment 92 70 NOP  <||@
  Comment 93 72 NOP  <||@
  Comment 94 74 NOP  <||@
  Comment 95 76 NOP  <||@
  Comment 96 78 NOP  <||@
  Comment 97 80 NOP  <||@
  Comment 98 82 NOP  <||@
  Comment 99 84 NOP  <||@
  Comment 100 86 NOP  <||@
  Comment 101 88 NOP  <||@
  Comment 102 90 NOP  <||@
  Comment 103 92 NOP  <||@
  Comment 104 94 NOP  <||@
  Comment 105 96 NOP  <||@
  Comment 106 98 NOP  <||@
  Comment 107 100 NOP  <||@
  Comment 108 102 NOP  <||@
  Comment 109 104 NOP  <||@
  Comment 110 106 rax|DWORD = LZCNT value: r10|DWORD size: DWORD  <||@
  Comment 115 108 rdx|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 120 110 rax|DWORD = LEA address: [rdx|DWORD + 31] size: DWORD  <||@
  Comment 123 114 (highResult: rdx|DWORD, lowResult: rax|DWORD) = CDQ input: rax|DWORD size: DWORD  <||@
  Comment 124 116 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IDIV (highX: rdx|DWORD, lowX: rax|DWORD, y: r11|DWORD) size: DWORD state [bci:0]  <||@
  Comment 124 []at java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2  |3  |4 
     locals:  |r10|DWORD  |r11|DWORD  |-  |-  |-   <||@
  Comment 124 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 127 120 rbx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 134 122 CMP x: rax|DWORD y: 1 size: DWORD  <||@
  Comment 137 124 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 142 126 rbp|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rcx|DWORD) condition: <  <||@
  Comment 147 128 rcx|QWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 149 130 rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD  <||@
  Comment 153 132 rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD  <||@
  Comment 157 134 rax|QWORD = ADD (x: rcx|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 163 136 CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD  <||@
  Comment 176 block B3 null  <||@
  Comment 176 138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 176 140 NOP  <||@
  Comment 177 142 NOP  <||@
  Comment 178 144 NOP  <||@
  Comment 179 146 NOP  <||@
  Comment 180 148 NOP  <||@
  Comment 181 150 NOP  <||@
  Comment 182 152 NOP  <||@
  Comment 183 154 NOP  <||@
  Comment 184 156 NOP  <||@
  Comment 185 158 NOP  <||@
  Comment 186 160 NOP  <||@
  Comment 187 162 NOP  <||@
  Comment 188 164 NOP  <||@
  Comment 189 166 NOP  <||@
  Comment 190 168 MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD  <||@
  Comment 197 170 AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 256] instr: 0  <||@
  Comment 205 172 AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 320] instr: 0  <||@
  Comment 213 174 AMD64PREFETCH ~address: [rcx|QWORD + rbx|QWORD * 1 + 384] instr: 0  <||@
  Comment 221 176 MOV x: [rbx|QWORD] y: 1 size: QWORD  <||@
  Comment 228 178 MOV x: [rbx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 228 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 235 180 MOV (x: [rbx|QWORD + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 238 182 rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD  <||@
  Comment 242 184 CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 255 block B4 null  <||@
  Comment 255 186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 255 188 NOP  <||@
  Comment 256 190 NOP  <||@
  Comment 257 192 NOP  <||@
  Comment 258 -1 rax|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 265 194 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 270 block B6 loop 0 depth 1 header:202|LoopBegin  <||@
  Comment 270 208 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 288 210 NOP  <||@
  Comment 289 212 NOP  <||@
  Comment 290 214 NOP  <||@
  Comment 291 216 NOP  <||@
  Comment 292 218 NOP  <||@
  Comment 293 220 NOP  <||@
  Comment 294 222 NOP  <||@
  Comment 295 224 MOV x: [rbx|QWORD + rax|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 303 226 rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD  <||@
  Comment 307 228 JUMP ~outgoingValues: [] destination: B6 -> B5  <||@
  Comment 307 block B5 loop 0 depth 1 header:202|LoopBegin  <||@
  Comment 307 196 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 307 198 NOP  <||@
  Comment 308 200 NOP  <||@
  Comment 309 202 NOP  <||@
  Comment 310 204 NOP  <||@
  Comment 311 206 CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD  <||@
  Comment 316 block B7 null  <||@
  Comment 316 230 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 316 232 NOP  <||@
  Comment 317 234 NOP  <||@
  Comment 318 236 NOP  <||@
  Comment 319 238 JUMP ~outgoingValues: [] destination: B7 -> B9  <||@
  Comment 319 block B9 null  <||@
  Comment 319 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 319 242 NOP  <||@
  Comment 320 244 NOP  <||@
  Comment 321 246 NOP  <||@
  Comment 322 248 NOP  <||@
  Comment 323 250 rbx|QWORD[.] = MOVE input: rbx|QWORD moveKind: QWORD  <||@
  Comment 323 252 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 323 block B10 null  <||@
  Comment 323 254 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 323 256 NOP  <||@
  Comment 324 258 NOP  <||@
  Comment 325 260 NOP  <||@
  Comment 326 262 NOP  <||@
  Comment 327 264 NOP  <||@
  Comment 328 266 NOP  <||@
  Comment 329 268 NOP  <||@
  Comment 330 270 NOP  <||@
  Comment 331 272 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 331 {Object[char[36]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 341 274 rcx|DWORD = MOVSX input: [rax|QWORD[.] + r9|DWORD * 2 + 16] size: DWORD  <||@
  Comment 347 276 rsi|DWORD = DEC value: rbp|DWORD size: DWORD  <||@
  Comment 351 278 MOVB (x: [rbx|QWORD[.] + rsi|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE  <||@
  Comment 355 280 CMPCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.42349162504617066 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 1 size: DWORD inlinedY: null  <||@
  Comment 364 block B12 null  <||@
  Comment 364 282 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 364 284 NOP  <||@
  Comment 365 286 NOP  <||@
  Comment 366 288 NOP  <||@
  Comment 367 290 NOP  <||@
  Comment 368 292 NOP  <||@
  Comment 369 294 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 372 296 r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 375 298 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 380 block B14 loop 1 depth 1 header:43|LoopBegin  <||@
  Comment 380 316 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 384 318 NOP  <||@
  Comment 385 320 NOP  <||@
  Comment 386 322 NOP  <||@
  Comment 387 324 NOP  <||@
  Comment 388 326 NOP  <||@
  Comment 389 328 rdx|DWORD = DEC value: rsi|DWORD size: DWORD  <||@
  Comment 393 330 CMPBRANCH (x: rbp|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B22 size: DWORD  <||@
  Comment 401 block B15 loop 1 depth 1 header:43|LoopBegin  <||@
  Comment 401 332 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 401 334 NOP  <||@
  Comment 402 336 NOP  <||@
  Comment 403 338 NOP  <||@
  Comment 404 340 NOP  <||@
  Comment 405 342 NOP  <||@
  Comment 406 344 NOP  <||@
  Comment 407 346 rcx|DWORD = MOVSX input: [rax|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 412 348 MOVB (x: [rbx|QWORD[.] + rdx|DWORD * 1 + 16], y: rcx|BYTE(DWORD)) size: BYTE  <||@
  Comment 416 350 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.7345801786142079 condition: < trueDestination: B15 -> B17 falseDestination: B15 -> B16 y: 1 size: DWORD inlinedY: null  <||@
  Comment 425 block B16 loop 1 depth 1 header:43|LoopBegin  <||@
  Comment 425 352 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 425 354 NOP  <||@
  Comment 426 356 NOP  <||@
  Comment 427 358 NOP  <||@
  Comment 428 360 NOP  <||@
  Comment 429 362 NOP  <||@
  Comment 430 364 NOP  <||@
  Comment 431 366 NOP  <||@
  Comment 432 368 SAFEPOINT temp: rcx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 thread: r15 state [bci:30, 36]  <||@
  Comment 439 [rax:0, rbx:0]at java.lang.Integer.formatUnsignedInt(Integer.java:393) [bci: 30, duringCall: false, rethrow: false]
              |0          |1          |2             |3  |4          |5  |6        
     locals:  |r10|DWORD  |r11|DWORD  |rbx|QWORD[.]  |-  |rdx|DWORD  |-  |r8|DWORD 
  at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4            
     locals:  |-  |-  |-  |-  |rbx|QWORD[.]   <||@
  Comment 439 {infopoint: SAFEPOINT}  <||@
  Comment 439 POLL_FAR  <||@
  Comment 441 370 rcx|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 444 372 r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 447 -1 rsi|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 449 374 JUMP ~outgoingValues: [] destination: B16 -> B13  <||@
  Comment 449 block B13 loop 1 depth 1 header:43|LoopBegin  <||@
  Comment 449 300 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 449 302 NOP  <||@
  Comment 450 304 NOP  <||@
  Comment 451 306 NOP  <||@
  Comment 452 308 NOP  <||@
  Comment 453 310 NOP  <||@
  Comment 454 312 rcx|DWORD = AND (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 460 314 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B23 y: 36 size: DWORD inlinedY: null  <||@
  Comment 470 block B17 null  <||@
  Comment 470 376 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 470 378 NOP  <||@
  Comment 471 380 NOP  <||@
  Comment 472 382 NOP  <||@
  Comment 473 384 JUMP ~outgoingValues: [] destination: B17 -> B18  <||@
  Comment 473 block B18 null  <||@
  Comment 473 396 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 473 398 NOP  <||@
  Comment 474 400 NOP  <||@
  Comment 475 402 NOP  <||@
  Comment 476 404 NOP  <||@
  Comment 477 406 NOP  <||@
  Comment 478 408 NOP  <||@
  Comment 479 410 NOP  <||@
  Comment 480 412 NOP  <||@
  Comment 481 414 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 488 416 rsi|QWORD = LEA address: [rax|QWORD + 24] size: QWORD  <||@
  Comment 492 418 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD  <||@
  Comment 505 block B20 null  <||@
  Comment 505 420 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 505 422 NOP  <||@
  Comment 506 424 NOP  <||@
  Comment 507 426 NOP  <||@
  Comment 508 428 NOP  <||@
  Comment 509 430 NOP  <||@
  Comment 510 432 NOP  <||@
  Comment 511 434 NOP  <||@
  Comment 512 436 NOP  <||@
  Comment 513 438 NOP  <||@
  Comment 514 440 NOP  <||@
  Comment 515 442 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 522 444 AMD64PREFETCH ~address: [rax|QWORD + 280] instr: 0  <||@
  Comment 529 446 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 536 448 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 536 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 543 450 MOV x: [rax|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 550 452 MOV x: [rax|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 558 454 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 558 456 JUMP ~outgoingValues: [] destination: B20 -> B21  <||@
  Comment 558 block B21 null  <||@
  Comment 558 458 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 558 460 NOP  <||@
  Comment 559 462 NOP  <||@
  Comment 560 464 NOP  <||@
  Comment 561 466 NOP  <||@
  Comment 562 468 NOP  <||@
  Comment 563 470 NOP  <||@
  Comment 564 472 NOP  <||@
  Comment 565 474 NOP  <||@
  Comment 566 476 NOP  <||@
  Comment 567 478 NOP  <||@
  Comment 568 480 rbx|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@30929c84 encoding: base: 0 shift: 3  <||@
  Comment 572 482 MOV (x: [rax|QWORD[.] + 20], y: rbx|DWORD[_]) size: DWORD  <||@
  Comment 575 486 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 584 POLL_RETURN_FAR  <||@
  Comment 601 block B11 null  <||@
  Comment 601 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 601 388 NOP  <||@
  Comment 602 390 NOP  <||@
  Comment 603 392 NOP  <||@
  Comment 604 394 JUMP ~outgoingValues: [] destination: B11 -> B18  <||@
  Comment 609 block B19 null  <||@
  Comment 609 524 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 609 526 NOP  <||@
  Comment 610 528 NOP  <||@
  Comment 611 530 NOP  <||@
  Comment 612 532 NOP  <||@
  Comment 613 534 NOP  <||@
  Comment 614 536 NOP  <||@
  Comment 615 538 NOP  <||@
  Comment 616 540 NOP  <||@
  Comment 617 542 NOP  <||@
  Comment 618 544 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 618 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 628 548 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:39, 36]  <||@
  Comment 628 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 633 [rbx:0]at java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |- 
  at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4            
     locals:  |-  |-  |-  |-  |rbx|QWORD[.]   <||@
  Comment 641 552 NULLCHECK address: [rax|QWORD[.]] state [bci:39, 36]  <||@
  Comment 641 [rax:0, rbx:0]at java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |- 
  at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4            
     locals:  |-  |-  |-  |-  |rbx|QWORD[.]   <||@
  Comment 641 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 643 554 JUMP ~outgoingValues: [] destination: B19 -> B21  <||@
  Comment 645 block B2 null  <||@
  Comment 645 488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 645 490 NOP  <||@
  Comment 646 492 NOP  <||@
  Comment 647 494 NOP  <||@
  Comment 648 496 NOP  <||@
  Comment 649 498 NOP  <||@
  Comment 650 500 NOP  <||@
  Comment 651 502 NOP  <||@
  Comment 652 504 NOP  <||@
  Comment 653 506 NOP  <||@
  Comment 654 508 NOP  <||@
  Comment 655 510 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 655 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 665 514 rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 667 516 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 667 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 672 []at java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2  |3  |4 
     locals:  |r10|DWORD  |r11|DWORD  |-  |-  |-   <||@
  Comment 680 520 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 680 [rax:0]at java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2  |3  |4 
     locals:  |r10|DWORD  |r11|DWORD  |-  |-  |-   <||@
  Comment 680 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 682 -1 rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 685 522 JUMP ~outgoingValues: [] destination: B2 -> B10  <||@
  Comment 690 block B8 null  <||@
  Comment 690 556 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 690 558 NOP  <||@
  Comment 691 560 NOP  <||@
  Comment 692 562 NOP  <||@
  Comment 693 564 NOP  <||@
  Comment 694 566 NOP  <||@
  Comment 695 568 NOP  <||@
  Comment 696 570 NOP  <||@
  Comment 697 572 NOP  <||@
  Comment 698 574 NOP  <||@
  Comment 699 576 rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 702 578 ZERO_MEMORY (pointer: [rbx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 712 580 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 717 block B22 null  <||@
  Comment 717 582 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 717 584 NOP  <||@
  Comment 718 586 NOP  <||@
  Comment 719 588 NOP  <||@
  Comment 720 -1 r9|DWORD = MOVE input: int[-31259|0xffffffffffff85e5]  <||@
  Comment 726 590 JUMP ~outgoingValues: [] destination: B22 -> B24  <||@
  Comment 726 block B24 null  <||@
  Comment 726 602 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 726 604 NOP  <||@
  Comment 727 606 NOP  <||@
  Comment 728 608 NOP  <||@
  Comment 729 610 NOP  <||@
  Comment 730 612 NOP  <||@
  Comment 731 614 NOP  <||@
  Comment 732 616 NOP  <||@
  Comment 733 618 MOV (x: [r15|QWORD + 1156], y: r9|DWORD) size: DWORD  <||@
  Comment 740 620 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 751 622 DEOPT info [bci:14, 36]  <||@
  Comment 751 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 756 [rbx:0]at java.lang.Integer.formatUnsignedInt(Integer.java:392) [bci: 14, duringCall: false, rethrow: false]
              |0          |1          |2             |3  |4          |5  |6        
     locals:  |r10|DWORD  |r11|DWORD  |rbx|QWORD[.]  |-  |rsi|DWORD  |-  |r8|DWORD 
  at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4            
     locals:  |-  |-  |-  |-  |rbx|QWORD[.]   <||@
  Comment 764 block B23 null  <||@
  Comment 764 592 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 764 594 NOP  <||@
  Comment 765 596 NOP  <||@
  Comment 766 598 NOP  <||@
  Comment 767 -1 r9|DWORD = MOVE input: int[-28955|0xffffffffffff8ee5]  <||@
  Comment 773 600 JUMP ~outgoingValues: [] destination: B23 -> B24  <||@
  Comment 775 block B25 null  <||@
  Comment 775 624 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 775 626 NOP  <||@
  Comment 776 628 NOP  <||@
  Comment 777 630 NOP  <||@
  Comment 778 632 NOP  <||@
  Comment 779 634 NOP  <||@
  Comment 780 636 NOP  <||@
  Comment 781 638 NOP  <||@
  Comment 782 640 MOV x: [r15|QWORD + 1156] y: -24859 size: DWORD  <||@
  Comment 793 642 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 804 644 DEOPT info [bci:0]  <||@
  Comment 804 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 809 []at java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2  |3  |4 
     locals:  |r10|DWORD  |r11|DWORD  |-  |-  |-   <||@
  Comment 822 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 847 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 875 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 880 [rax:0, rbx:0]at java.lang.Integer.formatUnsignedInt(Integer.java:395) [bci: 39, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6 
     locals:  |-  |-  |-  |-  |-  |-  |- 
  at java.lang.Integer.toUnsignedString0(Integer.java:368) [bci: 36, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4            
     locals:  |-  |-  |-  |-  |rbx|QWORD[.]   <||@
  Comment 910 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 915 [rax:0]at java.lang.Integer.toUnsignedString0(Integer.java:364) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2  |3  |4 
     locals:  |r10|DWORD  |r11|DWORD  |-  |-  |-   <||@
  Comment 923 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 923 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 929 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 929 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
