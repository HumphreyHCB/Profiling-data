begin_compilation
  name " HotSpotCompilation-10912[sun.nio.cs.StreamEncoder.implWrite(char[], int, int)]"
  method "HotSpotCompilation-10912[sun.nio.cs.StreamEncoder.implWrite(char[], int, int)]"
  date 1724269736527
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i794 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i794  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# sun.nio.cs.StreamEncoder
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?145 ?333 v831 ?83 v837 ?631 ?90 ?92 v445 ?632 v832 v834 ?634 v454 v726 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# char[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?356 v830 a566 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v64 i17 v66 v560 ?356 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i108 i17 v107 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
localsSize: 5
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 356
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
v643 i794 i796 f800 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i794 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-96011|0xfffffffffffe88f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v830 
lastLocationAccess: - 
=== Succesors ===
next: a795 
=== Usages ===
v564 ?356 v40 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v830 lastLocationAccess: - #next: a795  <|@  <|@
f <@~|@floating>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a795 a803 v457 v724 v726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a795 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.nio.ByteBuffer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.bb
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: n java.nio.ByteBuffer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v832 
lastLocationAccess: - 
=== Succesors ===
next: i796 
=== Usages ===
v833 
=== Predecessor ===
i794 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v832 lastLocationAccess: - #next: i796  <|@  <|@
f <@~|@floating>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a795 
=== Succesors ===
=== Usages ===
i796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i796 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-99339|0xfffffffffffe7bf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.capacity
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.capacity(Buffer.java:300) [bci: 1]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 4]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v833 
lastLocationAccess: - 
=== Succesors ===
next: v537 
=== Usages ===
v115 v126 
=== Predecessor ===
a795 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v833 lastLocationAccess: - #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 5]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: i32
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
v562 ?356 v40 v64 v42 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i794 
y: i17 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i794 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v535 
falseSuccessor: v536 
=== Usages ===
=== Predecessor ===
i796 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v535 #falseSuccessor: v536  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v646 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v646  <|@  <|@
f <@~|@floating>@ <|@
tid j648 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j642 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i647 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: -136723
stableDimension: 0
stamp: i32 [-136723]
stampKind: i32
value: int[-136723|0xfffffffffffde9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v535 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 12]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 9]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
?323 v340 i345 ?164 v42 v66 v278 v306 i108 v153 v768 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 14]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i17 
y: i19 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i17 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 14]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v42 
=== Succesors ===
trueSuccessor: v539 
falseSuccessor: v540 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v42 #trueSuccessor: v539 #falseSuccessor: v540  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 14]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v649 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v649  <|@  <|@
f <@~|@floating>@ <|@
tid j651 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j642 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i650 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: -137747
stableDimension: 0
stamp: i32 [-137747]
stampKind: i32
value: int[-137747|0xfffffffffffde5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v539 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 21]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v545  <|@  <|@
f <@~|@floating>@ <|@
tid j654 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: 3220
stableDimension: 0
stamp: i64 [3220]
stampKind: i64
value: long[3220|0xc94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j642 j704 j715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i17 
y: i3 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i17 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v543 
falseSuccessor: v544 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v543 #falseSuccessor: v544  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v652 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v652  <|@  <|@
f <@~|@floating>@ <|@
tid i653 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: -138771
stableDimension: 0
stamp: i32 [-138771]
stampKind: i32
value: int[-138771|0xfffffffffffde1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v543 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 12]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v549 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid j657 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: 3860
stableDimension: 0
stamp: i64 [3860]
stampKind: i64
value: long[3860|0xf14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j642 j704 j715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i19 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v66 
=== Succesors ===
trueSuccessor: v547 
falseSuccessor: v548 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v66 #trueSuccessor: v547 #falseSuccessor: v548  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v655 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v655  <|@  <|@
f <@~|@floating>@ <|@
tid i656 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: -139795
stableDimension: 0
stamp: i32 [-139795]
stampKind: i32
value: int[-139795|0xfffffffffffddded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v547 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 21]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i797 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i797  <|@  <|@
f <@~|@floating>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
displacement: 27
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i797 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i797 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.haveLeftoverChar
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v831 
lastLocationAccess: - 
=== Succesors ===
next: v553 
=== Usages ===
v459 
=== Predecessor ===
v548 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v831 lastLocationAccess: - #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid i458 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 4]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v459 v464 v466 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 4]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i797 
y: i458 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i797 y: i458  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 4]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v459 
=== Succesors ===
trueSuccessor: v551 
falseSuccessor: v552 
=== Usages ===
=== Predecessor ===
i797 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v459 #trueSuccessor: v551 #falseSuccessor: v552  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 13]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i798 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i798  <|@  <|@
f <@~|@floating>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i798 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i798 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.maxBufferCapacity
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:393) [bci: 10]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v834 
lastLocationAccess: - 
=== Succesors ===
next: v118 
=== Usages ===
v115 v143 i144 
=== Predecessor ===
v551 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v834 lastLocationAccess: - #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:393) [bci: 13]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i796 
y: i798 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i796 y: i798  <|@  <|@
tid a353 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<java.nio.Buffer.mark int:12>, HotSpotResolvedJavaFieldImpl<java.nio.Buffer.address long:16>, HotSpotResolvedJavaFieldImpl<java.nio.Buffer.position int:24>, HotSpotResolvedJavaFieldImpl<java.nio.Buffer.limit int:28>, HotSpotResolvedJavaFieldImpl<java.nio.Buffer.capacity int:32>, HotSpotResolvedJavaFieldImpl<java.nio.Buffer.segment MemorySegment:36>, HotSpotResolvedJavaFieldImpl<java.nio.CharBuffer.offset int:40>, HotSpotResolvedJavaFieldImpl<java.nio.CharBuffer.isReadOnly boolean:44>, HotSpotResolvedJavaFieldImpl<java.nio.CharBuffer.hb char[]:48>]
hasIdentity: true
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
objectId: 0
stamp: a!# java.nio.HeapCharBuffer
type: HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?203 ?634 ?90 ?274 ?285 ?284 ?323 ?92 ?145 ?356 ?370 ?164 ?83 ?333 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 1]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v556 ?356 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j26 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:90) [bci: 16]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
v558 j215 j216 ?356 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?356 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a353 
values: i16 j26 i3 i17 i794 - - - a2 
=== Succesors ===
=== Usages ===
?142 ?631 ?632 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a353 values: i16 j26 i3 i17 i794 - - - a2  <|@  <|@
tid ?350 <|@
d <@d|@=== Debug Properties ===
bci: 11
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
localsSize: 5
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 357
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?83 ?90 ?92 ?634 ?145 ?333 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?145 <|@
d <@d|@=== Debug Properties ===
bci: 18
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 367
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?350 
values: a1 a353 
=== Succesors ===
=== Usages ===
?142 ?631 ?632 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?350 values: a1 a353  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:380) [bci: 106]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 v107 v157 v344 v409 j198 v328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a801 a799 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:393) [bci: 13]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.8565208600609246
stamp: void
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v117 
falseSuccessor: v116 
=== Usages ===
=== Predecessor ===
i798 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v117 #falseSuccessor: v116  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 16]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a799 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a799  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a799 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# sun.nio.cs.UTF_8$Encoder
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.encoder
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: n# sun.nio.cs.UTF_8$Encoder
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v837 
lastLocationAccess: - 
=== Succesors ===
next: f800 
=== Usages ===
v850 
=== Predecessor ===
v117 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v837 lastLocationAccess: - #next: f800  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a799 
=== Succesors ===
=== Usages ===
f800 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a799  <|@  <|@
f <@#|@fixed with next>@ <|@
tid f800 <|@
d <@d|@=== Debug Properties ===
accessStamp: f32
barrierType: NONE
deoptReasonAndAction: int[-115467|0xfffffffffffe3cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharsetEncoder.maxBytesPerChar
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.charset.CharsetEncoder.maxBytesPerChar(CharsetEncoder.java:472) [bci: 1]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 21]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: f32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v850 
lastLocationAccess: - 
=== Succesors ===
next: v132 
=== Usages ===
i124 
=== Predecessor ===
a799 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v850 lastLocationAccess: - #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:522) [bci: 11]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i96 
=== Succesors ===
=== Usages ===
i108 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i96  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:522) [bci: 11]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v107 
trueValue: i19 
falseValue: i4 
=== Succesors ===
=== Usages ===
i125 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v107 trueValue: i19 falseValue: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(float) [bci: -1]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 24]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
value: f800 
=== Succesors ===
=== Usages ===
i125 
=== Predecessor ===
- >@ <|@
instruction <@RoundFloatToInteger|@jdk.graal.compiler.nodes.calc.RoundFloatToIntegerNode>@ value: f800  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 27]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i108 
y: i124 
=== Succesors ===
=== Usages ===
v143 i144 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: i108 y: i124  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:395) [bci: 34]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i798 
y: i125 
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i798 y: i125  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:395) [bci: 34]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
condition: v143 
trueValue: i798 
falseValue: i125 
=== Succesors ===
=== Usages ===
v126 ?631 v455 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v143 trueValue: i798 falseValue: i125  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:396) [bci: 42]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i796 
y: i144 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i796 y: i144  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:396) [bci: 42]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 2.2036465218155943E-4
stamp: void
=== Inputs ===
condition: v126 
=== Succesors ===
trueSuccessor: v130 
falseSuccessor: v131 
=== Usages ===
=== Predecessor ===
f800 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v126 #trueSuccessor: v130 #falseSuccessor: v131  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 45]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v134  <|@  <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lsun/nio/cs/StreamEncoder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.implFlushBuffer()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?631 <|@
d <@d|@=== Debug Properties ===
bci: 46
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.growByteBufferIfNeeded(int)>
localsSize: 5
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 397
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?145 
values: a1 - - - i144 
virtualObjectMappings: ?356 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?145 values: a1 - - - i144 virtualObjectMappings: ?356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
bci: 46
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.implFlushBuffer
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v454 
stateDuring: ?631 
=== Succesors ===
next: a137 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v454 stateDuring: ?631 #next: a137  <|@  <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
referencedType: [null]
returnStamp: a java.nio.ByteBuffer
signature: [HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ByteBuffer.allocate(int)>
=== Inputs ===
arguments: i144 
=== Succesors ===
=== Usages ===
a137 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i144  <|@  <|@
tid ?632 <|@
d <@d|@=== Debug Properties ===
bci: 52
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<StreamEncoder.growByteBufferIfNeeded(int)>
localsSize: 5
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 398
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?145 
values: a1 
virtualObjectMappings: ?356 
=== Succesors ===
=== Usages ===
a137 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?145 values: a1 virtualObjectMappings: ?356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a137 <|@
d <@d|@=== Debug Properties ===
bci: 52
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
polymorphic: false
stamp: a java.nio.ByteBuffer
targetMethod: Direct#ByteBuffer.allocate
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v455 
stateDuring: ?632 
=== Succesors ===
next: v724 
=== Usages ===
a456 v726 
=== Predecessor ===
v134 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v455 stateDuring: ?632 #next: v724  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
precise: true
stamp: void
=== Inputs ===
address: v832 
value: - 
stateBefore: - 
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
a137 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v832 value: - stateBefore: - #next: v457  <|@  <|@
f <@~|@floating>@ <|@
tid a456 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: Compress
stamp: n java.nio.ByteBuffer
=== Inputs ===
value: a137 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: StreamEncoder.bb
location: StreamEncoder.bb
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v832 
lastLocationAccess: - 
value: a456 
stateAfter: - 
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v832 lastLocationAccess: - value: a456 stateAfter: - #next: v726  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
precise: false
stamp: void
=== Inputs ===
address: v832 
value: a137 
object: a1 
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v832 value: a137 object: a1 #next: v141  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
v726 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
v131 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
v116 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v127 v129 v141 
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v127 v129 v141 #next: v783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j729 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j729 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j760 
=== Usages ===
v857 v858 
=== Predecessor ===
v783 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j760  <|@  <|@
f <@~|@floating>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j729 
index: - 
=== Succesors ===
=== Usages ===
j760 v762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j729 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j760 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v857 
lastLocationAccess: - 
=== Succesors ===
next: j761 
=== Usages ===
j732 v859 v860 a740 v861 v862 v863 v864 v865 v866 v867 
=== Predecessor ===
j729 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v857 lastLocationAccess: - #next: j761  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j729 
index: - 
=== Succesors ===
=== Usages ===
j761 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j729 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j761 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v858 
lastLocationAccess: - 
=== Succesors ===
next: v736 
=== Usages ===
v733 
=== Predecessor ===
j760 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v858 lastLocationAccess: - #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid j728 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: 56
stableDimension: 0
stamp: i64 [56]
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j732 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: i64
=== Inputs ===
x: j760 
y: j728 
=== Succesors ===
=== Usages ===
v733 v762 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j760 y: j728  <|@  <|@
f <@~|@floating>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j761 
y: j732 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j761 y: j732  <|@  <|@
f <@*|@fixed>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v733 
=== Succesors ===
trueSuccessor: v735 
falseSuccessor: v734 
=== Usages ===
=== Predecessor ===
j761 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v733 #trueSuccessor: v735 #falseSuccessor: v734  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a741 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a741  <|@  <|@
tid ?142 <|@
d <@d|@=== Debug Properties ===
bci: 58
bytecode: return
code: ResolvedJavaMethodBytecode<StreamEncoder.growByteBufferIfNeeded(int)>
localsSize: 5
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 401
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?145 
virtualObjectMappings: ?356 
=== Succesors ===
=== Usages ===
v825 a741 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?145 virtualObjectMappings: ?356  <|@  <|@
f <@~|@floating>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a741 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a741 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?142 
arguments: v727 
=== Succesors ===
next: v825 
=== Usages ===
v825 a758 
=== Predecessor ===
v735 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?142 arguments: v727 #next: v825  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-199537|0xfffffffffffcf48f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?142 
object: a741 
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
a741 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?142 object: a741 #next: v745  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
v825 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v857 
lastLocationAccess: - 
value: j732 
stateAfter: - 
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v857 lastLocationAccess: - value: j732 stateAfter: - #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
displacement: 312
stamp: void*
stride: S1
=== Inputs ===
base: j760 
index: - 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j760 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
address: v861 
=== Succesors ===
next: v763 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v861 #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j760 
index: - 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j760 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j737 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v859 
lastLocationAccess: - 
value: j737 
stateAfter: - 
=== Succesors ===
next: v767 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v859 lastLocationAccess: - value: j737 stateAfter: - #next: v767  <|@  <|@
f <@~|@floating>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j760 
index: - 
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j760 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v867 
lastLocationAccess: - 
value: v793 
stateAfter: - 
=== Succesors ===
next: v768 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v867 lastLocationAccess: - value: v793 stateAfter: - #next: v768  <|@  <|@
f <@~|@floating>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j760 
index: - 
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j760 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v860 
lastLocationAccess: - 
value: i19 
stateAfter: - 
=== Succesors ===
next: v769 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v860 lastLocationAccess: - value: i19 stateAfter: - #next: v769  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j760 
index: - 
=== Succesors ===
=== Usages ===
v769 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j760 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j640 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v773 v772 v771 v769 v770 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v862 
lastLocationAccess: - 
value: j640 
stateAfter: - 
=== Succesors ===
next: v770 
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v862 lastLocationAccess: - value: j640 stateAfter: - #next: v770  <|@  <|@
f <@~|@floating>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j760 
index: - 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j760 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v863 
lastLocationAccess: - 
value: j640 
stateAfter: - 
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v769 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v863 lastLocationAccess: - value: j640 stateAfter: - #next: v771  <|@  <|@
f <@~|@floating>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: j760 
index: - 
=== Succesors ===
=== Usages ===
v771 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j760 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v864 
lastLocationAccess: - 
value: j640 
stateAfter: - 
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v864 lastLocationAccess: - value: j640 stateAfter: - #next: v772  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j760 
index: - 
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j760 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v865 
lastLocationAccess: - 
value: j640 
stateAfter: - 
=== Succesors ===
next: v773 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v865 lastLocationAccess: - value: j640 stateAfter: - #next: v773  <|@  <|@
f <@~|@floating>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: j760 
index: - 
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j760 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v866 
lastLocationAccess: - 
value: j640 
stateAfter: - 
=== Succesors ===
next: a740 
=== Usages ===
=== Predecessor ===
v772 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v866 lastLocationAccess: - value: j640 stateAfter: - #next: a740  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j760 
=== Succesors ===
next: v743 
=== Usages ===
a758 
=== Predecessor ===
v773 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j760 #next: v743  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
a740 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v744 
values: a740 a741 
=== Succesors ===
=== Usages ===
v856 a568 v851 v852 v853 v854 v855 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v744 values: a740 a741  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v743 v745 
=== Succesors ===
next: v567 
=== Usages ===
a758 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v743 v745 #next: v567  <|@  <|@
f <@~|@floating>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a758 
index: - 
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a758 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a566 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
op: Compress
stamp: n# char[]
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v856 
lastLocationAccess: - 
value: a566 
stateAfter: - 
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v856 lastLocationAccess: - value: a566 stateAfter: - #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a758 
index: - 
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a758 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v855 
lastLocationAccess: - 
value: i794 
stateAfter: - 
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v855 lastLocationAccess: - value: i794 stateAfter: - #next: v562  <|@  <|@
f <@~|@floating>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a758 
index: - 
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a758 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v854 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v854 lastLocationAccess: - value: i17 stateAfter: - #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a758 
index: - 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a758 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v853 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v853 lastLocationAccess: - value: i3 stateAfter: - #next: v558  <|@  <|@
f <@~|@floating>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a758 
index: - 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a758 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v852 
lastLocationAccess: - 
value: j26 
stateAfter: - 
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v852 lastLocationAccess: - value: j26 stateAfter: - #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a758 
index: - 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a758 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v851 
lastLocationAccess: - 
value: i16 
stateAfter: - 
=== Succesors ===
next: v569 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v851 lastLocationAccess: - value: i16 stateAfter: - #next: v569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(char[], int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a568 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(char[], int, int) [bci: -6] Placeholder
stamp: a!# java.nio.HeapCharBuffer
=== Inputs ===
object: a758 
=== Succesors ===
next: v81 
=== Usages ===
v847 ?370 v835 v836 v839 v840 v843 v434 
=== Predecessor ===
v569 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a758 #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid v847 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a568 
index: - 
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a568 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a568 
index: - 
=== Succesors ===
=== Usages ===
i814 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a568 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a568 
index: - 
=== Succesors ===
=== Usages ===
i813 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a568 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a568 
index: - 
=== Succesors ===
=== Usages ===
a812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a568 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a568 
index: - 
=== Succesors ===
=== Usages ===
i811 i818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a568 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a568 
index: - 
=== Succesors ===
=== Usages ===
i810 v437 i819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a568 index: -  <|@  <|@
tid ?370 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a353 
materializedValue: a568 
=== Succesors ===
=== Usages ===
?83 ?634 ?164 ?204 ?92 ?284 ?633 ?169 ?90 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@jdk.graal.compiler.nodes.virtual.MaterializedObjectState>@ object: a353 materializedValue: a568  <|@  <|@
tid ?83 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: aload_1
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 369
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?350 
values: a1 a353 
virtualObjectMappings: ?370 
=== Succesors ===
=== Usages ===
v668 i802 a804 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?350 values: a1 a353 virtualObjectMappings: ?370  <|@  <|@
f <@~|@floating>@ <|@
tid a214 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:464) [bci: 133]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: CoderResult@167784470
stableDimension: 0
stamp: a!# java.nio.charset.CoderResult
stampKind: a java.lang.Object
value: Object[CoderResult@167784470]
=== Inputs ===
=== Succesors ===
=== Usages ===
a321 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j710 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: 4500
stableDimension: 0
stamp: i64 [4500]
stampKind: i64
value: long[4500|0x1194]
=== Inputs ===
=== Succesors ===
=== Usages ===
j704 j715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?333 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 370
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?350 
values: a1 a353 
=== Succesors ===
=== Usages ===
?323 ?164 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?350 values: a1 a353  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
a568 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 16
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v81 
=== Succesors ===
next: a801 
=== Usages ===
v91 v100 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v81 #next: a801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a801 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# sun.nio.cs.UTF_8$Encoder
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.encoder
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 29]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: n# sun.nio.cs.UTF_8$Encoder
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v837 
lastLocationAccess: - 
=== Succesors ===
next: i802 
=== Usages ===
a403 v838 
=== Predecessor ===
v82 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v837 lastLocationAccess: - #next: i802  <|@  <|@
f <@~|@floating>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a801 
=== Succesors ===
=== Usages ===
i802 v409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i802 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-103947|0xfffffffffffe69f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharsetEncoder.state
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 12]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?83 
guard: - 
address: v838 
lastLocationAccess: - 
=== Succesors ===
next: a803 
=== Usages ===
v153 v157 
=== Predecessor ===
a801 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?83 guard: - address: v838 lastLocationAccess: - #next: a803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a803 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.nio.ByteBuffer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.bb
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 34]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: n java.nio.ByteBuffer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v832 
lastLocationAccess: - 
=== Succesors ===
next: a804 
=== Usages ===
a405 v841 v842 v844 v845 v846 v848 v868 
=== Predecessor ===
i802 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v832 lastLocationAccess: - #next: a804  <|@  <|@
f <@~|@floating>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a803 
=== Succesors ===
=== Usages ===
a804 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a804 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-107019|0xfffffffffffe5df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteBuffer.hb
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?83 
guard: - 
address: v841 
lastLocationAccess: - 
=== Succesors ===
next: i805 
=== Usages ===
a421 v870 
=== Predecessor ===
a803 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?83 guard: - address: v841 lastLocationAccess: - #next: i805  <|@  <|@
f <@~|@floating>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a803 
=== Succesors ===
=== Usages ===
i805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i805 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteBuffer.isReadOnly
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v842 
lastLocationAccess: - 
=== Succesors ===
next: i806 
=== Usages ===
v466 
=== Predecessor ===
a804 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v842 lastLocationAccess: - #next: i806  <|@  <|@
f <@~|@floating>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a803 
=== Succesors ===
=== Usages ===
i806 v441 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i806 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:309) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:452) [bci: 38]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v845 
lastLocationAccess: - 
=== Succesors ===
next: i807 
=== Usages ===
i192 
=== Predecessor ===
i805 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v845 lastLocationAccess: - #next: i807  <|@  <|@
f <@~|@floating>@ <|@
tid v844 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a803 
=== Succesors ===
=== Usages ===
i807 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i807 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteBuffer.offset
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1536) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:452) [bci: 34]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v844 
lastLocationAccess: - 
=== Succesors ===
next: i808 
=== Usages ===
i192 i194 i266 
=== Predecessor ===
i806 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v844 lastLocationAccess: - #next: i808  <|@  <|@
f <@~|@floating>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a803 
=== Succesors ===
=== Usages ===
i808 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i808 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.limit
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:361) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:453) [bci: 49]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v846 
lastLocationAccess: - 
=== Succesors ===
next: v809 
=== Usages ===
i194 v304 
=== Predecessor ===
i807 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v846 lastLocationAccess: - #next: v809  <|@  <|@
f <@~|@floating>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a803 
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v868 
lastLocationAccess: - 
=== Succesors ===
next: i810 
=== Usages ===
v791 
=== Predecessor ===
i808 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v868 lastLocationAccess: - #next: i810  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i810 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:533) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 22]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v835 
lastLocationAccess: - 
=== Succesors ===
next: i811 
=== Usages ===
v148 i186 
=== Predecessor ===
v809 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v835 lastLocationAccess: - #next: i811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i811 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.limit
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:533) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 22]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v836 
lastLocationAccess: - 
=== Succesors ===
next: v573 
=== Usages ===
v148 i188 v276 
=== Predecessor ===
i810 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v836 lastLocationAccess: - #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:533) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 22]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i810 
y: i811 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i810 y: i811  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 25]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v148 
=== Succesors ===
trueSuccessor: v571 
falseSuccessor: v572 
=== Usages ===
=== Predecessor ===
i811 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v148 #trueSuccessor: v571 #falseSuccessor: v572  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 28]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i802 
y: i96 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i802 y: i96  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.9999405143388893
stamp: void
=== Inputs ===
condition: v157 
=== Succesors ===
trueSuccessor: v628 
falseSuccessor: v154 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v157 #trueSuccessor: v628 #falseSuccessor: v154  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v161  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
v628 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i802 
y: i19 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i802 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v153 
=== Succesors ===
trueSuccessor: v155 
falseSuccessor: v629 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v153 #trueSuccessor: v155 #falseSuccessor: v629  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
v155 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v159 v161 
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v159 v161 #next: v409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: CharsetEncoder.state
location: CharsetEncoder.state
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 51]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v838 
lastLocationAccess: - 
value: i96 
stateAfter: - 
=== Succesors ===
next: a812 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v838 lastLocationAccess: - value: i96 stateAfter: - #next: a812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a812 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# char[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharBuffer.hb
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: n# char[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v839 
lastLocationAccess: - 
=== Succesors ===
next: v827 
=== Usages ===
a413 v869 
=== Predecessor ===
v409 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v839 lastLocationAccess: - #next: v827  <|@  <|@
f <@~|@floating>@ <|@
tid a403 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 29]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: Uncompress
stamp: a# sun.nio.cs.UTF_8$Encoder
=== Inputs ===
value: a801 
=== Succesors ===
=== Usages ===
?203 ?164 v434 ?323 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a801  <|@  <|@
f <@~|@floating>@ <|@
tid a405 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 34]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: Uncompress
stamp: a java.nio.ByteBuffer
=== Inputs ===
value: a803 
=== Succesors ===
=== Usages ===
?323 ?164 v434 ?203 ?286 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a803  <|@  <|@
tid ?164 <|@
d <@d|@=== Debug Properties ===
bci: 54
bytecode: aload_0
code: ResolvedJavaMethodBytecode<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 51]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
sourceFile: CharsetEncoder.java
sourceLine: 586
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?333 
values: a403 a353 a405 i19 
virtualObjectMappings: ?370 
=== Succesors ===
=== Usages ===
v683 v827 v829 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?333 values: a403 a353 a405 i19 virtualObjectMappings: ?370  <|@  <|@
f <@~|@floating>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a812 
=== Succesors ===
=== Usages ===
v827 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?164 
object: v869 
=== Succesors ===
next: i813 
=== Usages ===
=== Predecessor ===
a812 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?164 object: v869 #next: i813  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i813 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharBuffer.isReadOnly
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v840 
lastLocationAccess: - 
=== Succesors ===
next: v581 
=== Usages ===
v464 
=== Predecessor ===
v827 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v840 lastLocationAccess: - #next: v581  <|@  <|@
f <@~|@floating>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i813 
y: i458 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i813 y: i458  <|@  <|@
f <@*|@fixed>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v464 
=== Succesors ===
trueSuccessor: v579 
falseSuccessor: v580 
=== Usages ===
=== Predecessor ===
i813 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v464 #trueSuccessor: v579 #falseSuccessor: v580  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 14]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v829 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v829  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a804 
=== Succesors ===
=== Usages ===
v829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?164 
object: v870 
=== Succesors ===
next: v589 
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?164 object: v870 #next: v589  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i805 
y: i458 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i805 y: i458  <|@  <|@
f <@*|@fixed>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v466 
=== Succesors ===
trueSuccessor: v587 
falseSuccessor: v588 
=== Usages ===
=== Predecessor ===
v829 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v466 #trueSuccessor: v587 #falseSuccessor: v588  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 14]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: j785 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j785  <|@  <|@
f <@~|@floating>@ <|@
tid a413 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: Uncompress
stamp: a# char[]
=== Inputs ===
value: a812 
=== Succesors ===
=== Usages ===
v434 j785 ?203 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i64
=== Inputs ===
object: a413 
=== Succesors ===
next: j787 
=== Usages ===
j786 
=== Predecessor ===
v587 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a413 #next: j787  <|@  <|@
f <@~|@floating>@ <|@
tid a421 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a804 
=== Succesors ===
=== Usages ===
v434 j787 ?203 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i64
=== Inputs ===
object: a421 
=== Succesors ===
next: i814 
=== Usages ===
j788 
=== Predecessor ===
j785 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a421 #next: i814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i814 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharBuffer.offset
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1536) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:448) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v843 
lastLocationAccess: - 
=== Succesors ===
next: i202 
=== Usages ===
i186 i188 i265 
=== Predecessor ===
j787 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v843 lastLocationAccess: - #next: i202  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:448) [bci: 13]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i810 
y: i814 
=== Succesors ===
=== Usages ===
i195 j197 ?203 i205 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i810 y: i814  <|@  <|@
f <@~|@floating>@ <|@
tid j197 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i186 
=== Succesors ===
=== Usages ===
j198 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i186  <|@  <|@
f <@~|@floating>@ <|@
tid j198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i64 [-4294967296 - 4294967294] bits:x...x0
=== Inputs ===
x: j197 
y: i96 
=== Succesors ===
=== Usages ===
j215 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j197 y: i96  <|@  <|@
f <@~|@floating>@ <|@
tid j215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i64 [-4294967280 - 4294967310] bits:x...x0
=== Inputs ===
x: j198 
y: j26 
=== Succesors ===
=== Usages ===
j786 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j198 y: j26  <|@  <|@
f <@~|@floating>@ <|@
tid j786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i64
=== Inputs ===
x: j215 
y: j785 
=== Succesors ===
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j215 y: j785  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:452) [bci: 41]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i806 
y: i807 
=== Succesors ===
=== Usages ===
i196 j200 ?203 i206 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i806 y: i807  <|@  <|@
f <@~|@floating>@ <|@
tid j200 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i192 
=== Succesors ===
=== Usages ===
j216 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i192  <|@  <|@
f <@~|@floating>@ <|@
tid j216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i64 [-2147483632 - 2147483663]
=== Inputs ===
x: j200 
y: j26 
=== Succesors ===
=== Usages ===
j788 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j200 y: j26  <|@  <|@
f <@~|@floating>@ <|@
tid j788 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i64
=== Inputs ===
x: j216 
y: j787 
=== Succesors ===
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j216 y: j787  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:453) [bci: 52]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i807 
y: i808 
=== Succesors ===
=== Usages ===
i196 ?203 v434 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i807 y: i808  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 74]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i194 
y: i192 
=== Succesors ===
=== Usages ===
v263 i264 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i194 y: i192  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:449) [bci: 24]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i811 
y: i814 
=== Succesors ===
=== Usages ===
i195 ?203 v207 v434 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i811 y: i814  <|@  <|@
f <@~|@floating>@ <|@
tid i195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 69]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i188 
y: i186 
=== Succesors ===
=== Usages ===
v263 i264 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i188 y: i186  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 75]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i196 
y: i195 
=== Succesors ===
=== Usages ===
i264 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i196 y: i195  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 75]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
condition: v263 
trueValue: i196 
falseValue: i195 
=== Succesors ===
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v263 trueValue: i196 falseValue: i195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i202 <|@
d <@d|@=== Debug Properties ===
charset: ASCII
locationIdentity: Array: char
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
runtimeCheckedCPUFeatures: [null]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j786 
dst: j788 
len: i264 
=== Succesors ===
next: v210 
=== Usages ===
?204 i205 i206 
=== Predecessor ===
i814 >@ <|@
instruction <@EncodeArray|@jdk.graal.compiler.replacements.nodes.EncodeArrayNode>@ stateAfter: - lastLocationAccess: - src: j786 dst: j788 len: i264 #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:458) [bci: 96]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i192 
y: i202 
=== Succesors ===
=== Usages ===
v434 i266 ?286 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i192 y: i202  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:457) [bci: 89]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i186 
y: i202 
=== Succesors ===
=== Usages ===
v207 v434 i265 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i186 y: i202  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:460) [bci: 103]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i205 
y: i188 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i205 y: i188  <|@  <|@
tid ?323 <|@
d <@d|@=== Debug Properties ===
bci: 57
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>
localsSize: 7
locksSize: 0
sourceFile: CharsetEncoder.java
sourceLine: 586
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?333 
values: a403 a353 a405 i19 
=== Succesors ===
=== Usages ===
?169 ?318 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?333 values: a403 a353 a405 i19  <|@  <|@
tid ?318 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)>
localsSize: 3
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 564
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?323 
=== Succesors ===
=== Usages ===
?203 ?633 ?317 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?323  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:460) [bci: 103]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 8.274622302240076E-6
stamp: void
=== Inputs ===
condition: v207 
=== Succesors ===
trueSuccessor: v209 
falseSuccessor: v208 
=== Usages ===
=== Predecessor ===
i202 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v207 #trueSuccessor: v209 #falseSuccessor: v208  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 106]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a212 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a212  <|@  <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
referencedType: [null]
returnStamp: a# java.nio.charset.CoderResult
signature: [HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>, UnresolvedJavaType<Ljava/nio/CharBuffer;>, UnresolvedJavaType<[C>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/nio/ByteBuffer;>, UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)>
=== Inputs ===
arguments: a403 a568 a413 i205 i188 a405 a421 i206 i194 
=== Succesors ===
=== Usages ===
a212 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a403 a568 a413 i205 i188 a405 a421 i206 i194  <|@  <|@
tid ?633 <|@
d <@d|@=== Debug Properties ===
bci: 120
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
localsSize: 10
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 461
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?318 
virtualObjectMappings: ?370 
=== Succesors ===
=== Usages ===
a212 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?318 virtualObjectMappings: ?370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a212 <|@
d <@d|@=== Debug Properties ===
bci: 120
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
polymorphic: false
stamp: a# java.nio.charset.CoderResult
targetMethod: Direct#UTF_8$Encoder.encodeArrayLoopSlow
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v434 
stateDuring: ?633 
=== Succesors ===
next: v320 
=== Usages ===
a321 
=== Predecessor ===
v209 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v434 stateDuring: ?633 #next: v320  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
a212 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 124]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v593 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v593  <|@  <|@
f <@~|@floating>@ <|@
tid i265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i205 
y: i814 
=== Succesors ===
=== Usages ===
?274 v276 v278 v281 v437 ?284 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i205 y: i814  <|@  <|@
f <@~|@floating>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i811 
y: i265 
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i811 y: i265  <|@  <|@
f <@*|@fixed>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v276 
=== Succesors ===
trueSuccessor: v591 
falseSuccessor: v592 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v276 #trueSuccessor: v591 #falseSuccessor: v592  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid i702 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: -151059
stableDimension: 0
stamp: i32 [-151059]
stampKind: i32
value: int[-151059|0xfffffffffffdb1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v591 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 12]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i265 
y: i19 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i265 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v278 
=== Succesors ===
trueSuccessor: v595 
falseSuccessor: v596 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v278 #trueSuccessor: v595 #falseSuccessor: v596  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid i707 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: -152083
stableDimension: 0
stamp: i32 [-152083]
stampKind: i32
value: int[-152083|0xfffffffffffdaded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v595 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 21]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i815 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i815  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i815 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.mark
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 33]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v847 
lastLocationAccess: - 
=== Succesors ===
next: v601 
=== Usages ===
v281 
=== Predecessor ===
v596 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v847 lastLocationAccess: - #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i265 
y: i815 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i265 y: i815  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v281 
=== Succesors ===
trueSuccessor: v599 
falseSuccessor: v600 
=== Usages ===
=== Predecessor ===
i815 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v281 #trueSuccessor: v599 #falseSuccessor: v600  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v708  <|@  <|@
f <@~|@floating>@ <|@
tid i709 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: -153107
stableDimension: 0
stamp: i32 [-153107]
stampKind: i32
value: int[-153107|0xfffffffffffda9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v599 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32 [-153107 - -151059] bits:1...101101xxx0111101101
valueDescription: i32
=== Inputs ===
merge: v700 
values: i702 i707 i709 
=== Succesors ===
=== Usages ===
v705 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v700 values: i702 i707 i709  <|@  <|@
f <@~|@floating>@ <|@
tid j704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i64 [3220 - 4500] bits:0...0xxxxxx0010100
valueDescription: i64
=== Inputs ===
merge: v700 
values: j654 j657 j710 
=== Succesors ===
=== Usages ===
v705 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v700 values: j654 j657 j710  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v701 v706 v708 
=== Succesors ===
next: v705 
=== Usages ===
i703 j704 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v701 v706 v708 #next: v705  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 78
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
localsSize: 10
locksSize: 0
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
sourceFile: UTF_8.java
sourceLine: 456
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?318 
values: a403 a353 a405 a413 i186 i188 a421 i192 i194 
=== Succesors ===
=== Usages ===
?204 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?318 values: a403 a353 a405 a413 i186 i188 a421 i192 i194  <|@  <|@
tid ?204 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: ireturn
code: ResolvedJavaMethodBytecode<System$2.encodeASCII(char[], int, byte[], int, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
sourceFile: System.java
sourceLine: 2506
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?203 
values: i202 
virtualObjectMappings: ?370 
=== Succesors ===
=== Usages ===
v705 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?203 values: i202 virtualObjectMappings: ?370  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
stateBefore: ?204 
actionAndReason: i703 
speculation: j704 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?204 actionAndReason: i703 speculation: j704  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 45]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.position
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 47]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v835 
lastLocationAccess: - 
value: i265 
stateAfter: - 
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v835 lastLocationAccess: - value: i265 stateAfter: - #next: v316  <|@  <|@
f <@~|@floating>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v809 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v809  <|@  <|@
f <@*|@fixed>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>}]
keySuccessors: [I@793a7bd1
keys: [HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>]
profileData: PROFILED keyProbabilities: [1.0, 0.0]
stamp: void
=== Inputs ===
value: v791 
=== Succesors ===
successors: v296 v298 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v791 #successors: v296 v298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid i266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 17]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i206 
y: i807 
=== Succesors ===
=== Usages ===
v304 v306 v309 v441 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i206 y: i807  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i808 
y: i266 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i808 y: i266  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v304 
=== Succesors ===
trueSuccessor: v603 
falseSuccessor: v604 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v304 #trueSuccessor: v603 #falseSuccessor: v604  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid i713 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: -154131
stableDimension: 0
stamp: i32 [-154131]
stampKind: i32
value: int[-154131|0xfffffffffffda5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v711 
=== Predecessor ===
v603 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 12]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v609  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i266 
y: i19 
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i266 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v306 
=== Succesors ===
trueSuccessor: v607 
falseSuccessor: v608 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v306 #trueSuccessor: v607 #falseSuccessor: v608  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v720 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid i721 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: -155155
stableDimension: 0
stamp: i32 [-155155]
stampKind: i32
value: int[-155155|0xfffffffffffda1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v711 
=== Predecessor ===
v607 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 21]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i816 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i816  <|@  <|@
f <@~|@floating>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a803 
=== Succesors ===
=== Usages ===
i816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i816 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.mark
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 33]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v848 
lastLocationAccess: - 
=== Succesors ===
next: v613 
=== Usages ===
v309 
=== Predecessor ===
v608 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v848 lastLocationAccess: - #next: v613  <|@  <|@
f <@~|@floating>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i266 
y: i816 
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i266 y: i816  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v309 
=== Succesors ===
trueSuccessor: v611 
falseSuccessor: v612 
=== Usages ===
=== Predecessor ===
i816 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v309 #trueSuccessor: v611 #falseSuccessor: v612  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v722  <|@  <|@
f <@~|@floating>@ <|@
tid i723 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: -156179
stableDimension: 0
stamp: i32 [-156179]
stampKind: i32
value: int[-156179|0xfffffffffffd9ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v711 
=== Predecessor ===
v611 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 45]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v441 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.position
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 47]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v845 
lastLocationAccess: - 
value: i266 
stateAfter: - 
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v845 lastLocationAccess: - value: i266 stateAfter: - #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
v441 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a321 <|@
d <@d|@=== Debug Properties ===
stamp: a# java.nio.charset.CoderResult
valueDescription: a java.lang.Object
=== Inputs ===
merge: v319 
values: a212 a214 
=== Succesors ===
=== Usages ===
?90 ?169 v849 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v319 values: a212 a214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v320 v322 
=== Succesors ===
next: i817 
=== Usages ===
a321 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v320 v322 #next: i817  <|@  <|@
tid ?169 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: areturn
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
sourceFile: UTF_8.java
sourceLine: 564
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?323 
values: a321 
virtualObjectMappings: ?370 
=== Succesors ===
=== Usages ===
v871 i817 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?323 values: a321 virtualObjectMappings: ?370  <|@  <|@
f <@~|@floating>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a321 
index: - 
=== Succesors ===
=== Usages ===
i817 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a321 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i817 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-113163|0xfffffffffffe45f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CoderResult.type
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:128) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:591) [bci: 79]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?169 
guard: - 
address: v849 
lastLocationAccess: - 
=== Succesors ===
next: v626 
=== Usages ===
v328 v340 
=== Predecessor ===
v319 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?169 guard: - address: v849 lastLocationAccess: - #next: v626  <|@  <|@
f <@~|@floating>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:128) [bci: 5]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:591) [bci: 79]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i817 
y: i96 
=== Succesors ===
=== Usages ===
v166 v617 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i817 y: i96  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isUnderflow(CoderResult.java:119) [bci: 4]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:371) [bci: 43]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i817 
y: i19 
=== Succesors ===
=== Usages ===
v94 v626 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i817 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:594) [bci: 93]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.9999917243269874
stamp: void
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v624 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
i817 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v624 #falseSuccessor: v165  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:595) [bci: 96]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v336  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v624 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:594) [bci: 93]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v166  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:591) [bci: 82]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v328 
=== Succesors ===
trueSuccessor: v168 
falseSuccessor: v625 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v328 #trueSuccessor: v168 #falseSuccessor: v625  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:592) [bci: 85]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v335  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v168 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v335 v336 
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v335 v336 #next: v94  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:371) [bci: 46]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.9999917209847682
stamp: void
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v91 #falseSuccessor: v93  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:379) [bci: 99]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v617  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:379) [bci: 103]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v328 
=== Succesors ===
trueSuccessor: v615 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v328 #trueSuccessor: v615 #falseSuccessor: v616  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:380) [bci: 106]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v98 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v98  <|@  <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lsun/nio/cs/StreamEncoder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.writeBytes()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?634 <|@
d <@d|@=== Debug Properties ===
bci: 131
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 381
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?350 
values: a1 a353 
virtualObjectMappings: ?370 
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?350 values: a1 a353 virtualObjectMappings: ?370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
bci: 131
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.writeBytes
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v445 
stateDuring: ?634 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v445 stateDuring: ?634 #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
loopBegin: v82 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v82  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v82 
=== Succesors ===
next: i818 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v82 #next: i818  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i818 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.limit
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:521) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 76]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v836 
lastLocationAccess: - 
=== Succesors ===
next: i819 
=== Usages ===
i343 
=== Predecessor ===
v91 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v836 lastLocationAccess: - #next: i819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i819 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:521) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 76]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v835 
lastLocationAccess: - 
=== Succesors ===
next: v622 
=== Usages ===
i343 
=== Predecessor ===
i818 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v835 lastLocationAccess: - #next: v622  <|@  <|@
f <@~|@floating>@ <|@
tid i343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:521) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 76]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i818 
y: i819 
=== Succesors ===
=== Usages ===
v344 i345 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i818 y: i819  <|@  <|@
f <@~|@floating>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:522) [bci: 11]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 76]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i343 
y: i96 
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i343 y: i96  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:522) [bci: 11]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 76]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v344 
trueValue: i19 
falseValue: i343 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v344 trueValue: i19 falseValue: i343  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 80]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i345 
y: i96 
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i345 y: i96  <|@  <|@
f <@*|@fixed>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 80]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v101 
=== Succesors ===
trueSuccessor: v620 
falseSuccessor: v621 
=== Usages ===
=== Predecessor ===
i819 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v101 #trueSuccessor: v620 #falseSuccessor: v621  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 80]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
v622 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v619  <|@  <|@
tid ?92 <|@
d <@d|@=== Debug Properties ===
bci: 49
bytecode: getstatic
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
sourceFile: StreamEncoder.java
sourceLine: 372
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?350 
values: a1 a353 
virtualObjectMappings: ?370 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?350 values: a1 a353 virtualObjectMappings: ?370  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 80]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
reason: UnreachedCode
speculation: {0x0000000000001b94[index: 220, len: 20, hash: 0x92b47afe]: UnreachedCode@6[HotSpotMethod<StreamEncoder.implWrite(CharBuffer)>, 83]}
stamp: void
=== Inputs ===
stateBefore: ?92 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?92  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:386) [bci: 144]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v622 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v12  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:358) [bci: 14]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:379) [bci: 103]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v614 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v614  <|@  <|@
tid ?90 <|@
d <@d|@=== Debug Properties ===
bci: 41
bytecode: astore_2
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
sourceFile: StreamEncoder.java
sourceLine: 370
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?350 
values: a321 a1 a353 
virtualObjectMappings: ?370 
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?350 values: a321 a1 a353 virtualObjectMappings: ?370  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:379) [bci: 103]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
reason: UnreachedCode
speculation: {0x0000000000001914[index: 200, len: 20, hash: 0x92b47a34]: UnreachedCode@6[HotSpotMethod<StreamEncoder.implWrite(CharBuffer)>, 137]}
stamp: void
=== Inputs ===
stateBefore: ?90 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?90  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:594) [bci: 88]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v871  <|@  <|@
f <@*|@fixed>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 623
mayConvertToGuard: true
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:591) [bci: 79]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
reason: UnreachedCode
speculation: {0x0000000000002314[index: 280, len: 20, hash: 0x1038279]: UnreachedCode@6[HotSpotMethod<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>, 122]}
stamp: void
=== Inputs ===
stateBefore: ?169 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?169  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@~|@floating>@ <|@
tid j719 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: 17300
stableDimension: 0
stamp: i64 [17300]
stampKind: i64
value: long[17300|0x4394]
=== Inputs ===
=== Succesors ===
=== Usages ===
j715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i718 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: -76083
stableDimension: 0
stamp: i32 [-76083]
stampKind: i32
value: int[-76083|0xfffffffffffed6cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v711 
=== Predecessor ===
v298 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i714 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32 [-156179 - -76083] bits:1...1xx1xxxxxxx11x01101
valueDescription: i32
=== Inputs ===
merge: v711 
values: i713 i718 i721 i723 
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v711 values: i713 i718 i721 i723  <|@  <|@
f <@~|@floating>@ <|@
tid j715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i64 [3220 - 17300] bits:0...0x0xxxxxx0010100
valueDescription: i64
=== Inputs ===
merge: v711 
values: j654 j719 j657 j710 
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v711 values: j654 j719 j657 j710  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v712 v717 v720 v722 
=== Succesors ===
next: v716 
=== Usages ===
i714 j715 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v712 v717 v720 v722 #next: v716  <|@  <|@
tid ?317 <|@
d <@d|@=== Debug Properties ===
bci: 130
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
localsSize: 10
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 463
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?318 
=== Succesors ===
=== Usages ===
?286 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?318  <|@  <|@
tid ?286 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<UTF_8.updatePositions(Buffer, int, Buffer, int)>
localsSize: 4
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 82
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?317 
values: - - a405 i206 
=== Succesors ===
=== Usages ===
?274 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?317 values: - - a405 i206  <|@  <|@
tid ?274 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<CharBuffer.position(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
sourceFile: CharBuffer.java
sourceLine: 285
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?286 
values: a353 i265 
=== Succesors ===
=== Usages ===
?285 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?286 values: a353 i265  <|@  <|@
tid ?285 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<CharBuffer.position(int)>
localsSize: 2
locksSize: 0
sourceFile: CharBuffer.java
sourceLine: 1551
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?274 
values: a353 
=== Succesors ===
=== Usages ===
?284 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?274 values: a353  <|@  <|@
tid ?284 <|@
d <@d|@=== Debug Properties ===
bci: 50
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Buffer.position(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 47]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
sourceFile: Buffer.java
sourceLine: 330
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?285 
values: a353 i265 
virtualObjectMappings: ?370 
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?285 values: a353 i265 virtualObjectMappings: ?370  <|@  <|@
f <@*|@fixed>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
stateBefore: ?284 
actionAndReason: i714 
speculation: j715 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?284 actionAndReason: i714 speculation: j715  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@~|@floating>@ <|@
tid j686 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: 11540
stableDimension: 0
stamp: i64 [11540]
stampKind: i64
value: long[11540|0x2d14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i690 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: -150035
stableDimension: 0
stamp: i32 [-150035]
stampKind: i32
value: int[-150035|0xfffffffffffdb5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i681 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
v588 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v687 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v687  <|@  <|@
f <@~|@floating>@ <|@
tid j680 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: 10900
stableDimension: 0
stamp: i64 [10900]
stampKind: i64
value: long[10900|0x2a94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i688 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: -147987
stableDimension: 0
stamp: i32 [-147987]
stampKind: i32
value: int[-147987|0xfffffffffffdbded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i681 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
v580 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32 [-150035 - -147987] bits:1...1011011x10111101101
valueDescription: i32
=== Inputs ===
merge: v677 
values: i688 i690 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v677 values: i688 i690  <|@  <|@
f <@~|@floating>@ <|@
tid j682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i64 [10900 - 11540] bits:0...0101xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v677 
values: j680 j686 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v677 values: j680 j686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v687 v689 
=== Succesors ===
next: v683 
=== Usages ===
i681 j682 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v687 v689 #next: v683  <|@  <|@
f <@*|@fixed>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
stateBefore: ?164 
actionAndReason: i681 
speculation: j682 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v677 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?164 actionAndReason: i681 speculation: j682  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
f <@~|@floating>@ <|@
tid j676 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: 8340
stableDimension: 0
stamp: i64 [8340]
stampKind: i64
value: long[8340|0x2094]
=== Inputs ===
=== Succesors ===
=== Usages ===
j667 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i675 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: -160531
stableDimension: 0
stamp: i32 [-160531]
stampKind: i32
value: int[-160531|0xfffffffffffd8ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i666 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v663 
=== Predecessor ===
v629 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 25]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v671 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v671  <|@  <|@
f <@~|@floating>@ <|@
tid j673 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: 5780
stableDimension: 0
stamp: i64 [5780]
stampKind: i64
value: long[5780|0x1694]
=== Inputs ===
=== Succesors ===
=== Usages ===
j667 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i672 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: -145939
stableDimension: 0
stamp: i32 [-145939]
stampKind: i32
value: int[-145939|0xfffffffffffdc5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i666 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v663 
=== Predecessor ===
v572 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i666 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32 [-160531 - -145939] bits:1...1011x00x10x11101101
valueDescription: i32
=== Inputs ===
merge: v663 
values: i672 i675 
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v663 values: i672 i675  <|@  <|@
f <@~|@floating>@ <|@
tid j667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i64 [5780 - 8340] bits:0...0xx0xx010010100
valueDescription: i64
=== Inputs ===
merge: v663 
values: j673 j676 
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v663 values: j673 j676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v671 v674 
=== Succesors ===
next: v668 
=== Usages ===
i666 j667 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v671 v674 #next: v668  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
stateBefore: ?83 
actionAndReason: i666 
speculation: j667 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?83 actionAndReason: i666 speculation: j667  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 4]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid j662 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: 5140
stableDimension: 0
stamp: i64 [5140]
stampKind: i64
value: long[5140|0x1414]
=== Inputs ===
=== Succesors ===
=== Usages ===
j642 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i661 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: -140819
stableDimension: 0
stamp: i32 [-140819]
stampKind: i32
value: int[-140819|0xfffffffffffdd9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v552 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i641 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: i32 [-140819 - -136723] bits:1...10111xxxx0111101101
valueDescription: i32
=== Inputs ===
merge: v637 
values: i647 i650 i653 i656 i661 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v637 values: i647 i650 i653 i656 i661  <|@  <|@
f <@~|@floating>@ <|@
tid j642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: i64 [1300 - 5140] bits:0...0xx1xxx0010100
valueDescription: i64
=== Inputs ===
merge: v637 
values: j648 j651 j654 j657 j662 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v637 values: j648 j651 j654 j657 j662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v646 v649 v652 v655 v660 
=== Succesors ===
next: v643 
=== Usages ===
i641 j642 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v646 v649 v652 v655 v660 #next: v643  <|@  <|@
f <@*|@fixed>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i641 
speculation: j642 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i641 speculation: j642  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v10|SINGLE = MOVSS input: [v9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP x: v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v10|SINGLE {tmp: v14|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = IMUL (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v15|DWORD, ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v6|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 48], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 32], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 28], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v33|DWORD = MOV input: [v32|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v35|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVSXB input: [v34|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOV input: [v34|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v34|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV input: [v34|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV input: [v29|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v29|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v29|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v35|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOV input: [v29|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v41|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD value: v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = SHL value: v52|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[*] = ADD (x: v54|QWORD, y: v47|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = ADD (x: v37|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVSXD value: v56|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA address: [v57|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = ADD (x: v58|QWORD, y: v49|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = ADD (x: v39|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SUB (x: v60|DWORD, ~y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = ADD (x: v42|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SUB (x: v62|DWORD, ~y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = CMOVE (falseValue: v63|DWORD, ~trueValue: v61|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v59|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = ADD (x: v65|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = ADD (x: v51|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v67|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = SUB (x: v67|DWORD, ~y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v42|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v69|DWORD, y: [v29|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = UNCOMPRESSPOINTER (input: v40|DWORD, ~baseRegister: v73|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v74|QWORD, y: v72|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = SUB (x: v66|DWORD, ~y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v75|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v75|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 24], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v76|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v78|DWORD = MOV input: [v77|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:8|DWORD = MOVE input: v66|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction out:16|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|QWORD[.]] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = SUB (x: v79|DWORD, ~y: [v29|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v80|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = CMOVE (falseValue: v80|DWORD, ~trueValue: v82|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v81|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v16|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v17|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-138771|0xfffffffffffde1ed], long[3220|0xc94]] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[4500|0x1194]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-147987|0xfffffffffffdbded], long[10900|0x2a94]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-156179|0xfffffffffffd9ded], long[4500|0x1194]] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155155|0xfffffffffffda1ed], long[3860|0xf14]] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154131|0xfffffffffffda5ed], long[3220|0xc94]] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-152083|0xfffffffffffdaded], long[3860|0xf14]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76083|0xfffffffffffed6cd], long[17300|0x4394]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|DWORD, v84|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v29|QWORD[.] v69|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v29|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v29|QWORD[.] v69|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v45|QWORD[.] v66|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-160531|0xfffffffffffd8ced], long[8340|0x2094]] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-136723|0xfffffffffffde9ed], long[1300|0x514]] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v77|QWORD[.] 
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-140819|0xfffffffffffdd9ed], long[5140|0x1414]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-139795|0xfffffffffffddded], long[3860|0xf14]] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-151059|0xfffffffffffdb1ed], long[3220|0xc94]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|DWORD, v71|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v65|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] v46|QWORD[.] v51|DWORD v62|DWORD v48|QWORD[.] v56|DWORD v60|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-145939|0xfffffffffffdc5ed], long[5780|0x1694]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-150035|0xfffffffffffdb5ed], long[11540|0x2d14]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-137747|0xfffffffffffde5ed], long[1940|0x794]] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD, v90|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i794 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i794  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# sun.nio.cs.StreamEncoder
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?145 ?333 v831 ?83 v837 ?631 ?90 ?92 v445 ?632 v832 v834 ?634 v454 v726 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# char[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?356 v830 a566 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v64 i17 v66 v560 ?356 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i108 i17 v107 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
localsSize: 5
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 356
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
v643 i794 i796 f800 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid v830 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i794 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-96011|0xfffffffffffe88f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v830 
lastLocationAccess: - 
=== Succesors ===
next: a795 
=== Usages ===
v564 ?356 v40 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v830 lastLocationAccess: - #next: a795  <|@  <|@
f <@~|@floating>@ <|@
tid v832 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a795 a803 v457 v724 v726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a795 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.nio.ByteBuffer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.bb
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: n java.nio.ByteBuffer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v832 
lastLocationAccess: - 
=== Succesors ===
next: i796 
=== Usages ===
v833 
=== Predecessor ===
i794 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v832 lastLocationAccess: - #next: i796  <|@  <|@
f <@~|@floating>@ <|@
tid v833 <|@
result [v5|DWORD[_] * 8 + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a795 
=== Succesors ===
=== Usages ===
i796 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i796 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-99339|0xfffffffffffe7bf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.capacity
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.capacity(Buffer.java:300) [bci: 1]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:392) [bci: 4]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v833 
lastLocationAccess: - 
=== Succesors ===
next: v537 
=== Usages ===
v115 v126 
=== Predecessor ===
a795 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v833 lastLocationAccess: - #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 5]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: i32
=== Inputs ===
x: i3 
y: i4 
=== Succesors ===
=== Usages ===
v562 ?356 v40 v64 v42 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i794 
y: i17 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i794 y: i17  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v535 
falseSuccessor: v536 
=== Usages ===
=== Predecessor ===
i796 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v535 #falseSuccessor: v536  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 5]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v646 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v646  <|@  <|@
f <@~|@floating>@ <|@
tid j648 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j642 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i647 <|@
result int[-136723|0xfffffffffffde9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: -136723
stableDimension: 0
stamp: i32 [-136723]
stampKind: i32
value: int[-136723|0xfffffffffffde9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v535 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-136723|0xfffffffffffde9ed], long[1300|0x514]] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 12]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v541 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v541  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 9]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
?323 v340 i345 ?164 v42 v66 v278 v306 i108 v153 v768 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 14]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i17 
y: i19 
=== Succesors ===
=== Usages ===
v541 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i17 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 14]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v42 
=== Succesors ===
trueSuccessor: v539 
falseSuccessor: v540 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v42 #trueSuccessor: v539 #falseSuccessor: v540  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 14]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v649 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v649  <|@  <|@
f <@~|@floating>@ <|@
tid j651 <|@
result long[1940|0x794] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j642 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i650 <|@
result int[-137747|0xfffffffffffde5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: -137747
stableDimension: 0
stamp: i32 [-137747]
stampKind: i32
value: int[-137747|0xfffffffffffde5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v539 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-137747|0xfffffffffffde5ed], long[1940|0x794]] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:379) [bci: 21]
at java.nio.CharBuffer.limit(CharBuffer.java:1565) [bci: 2]
at java.nio.CharBuffer.limit(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:256) [bci: 39]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v545  <|@  <|@
f <@~|@floating>@ <|@
tid j654 <|@
result long[3220|0xc94] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: 3220
stableDimension: 0
stamp: i64 [3220]
stampKind: i64
value: long[3220|0xc94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j642 j704 j715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i17 
y: i3 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i17 y: i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v543 
falseSuccessor: v544 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v543 #falseSuccessor: v544  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v652 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v652  <|@  <|@
f <@~|@floating>@ <|@
tid i653 <|@
result int[-138771|0xfffffffffffde1ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: -138771
stableDimension: 0
stamp: i32 [-138771]
stampKind: i32
value: int[-138771|0xfffffffffffde1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v543 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-138771|0xfffffffffffde1ed], long[3220|0xc94]] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 12]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v549 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid j657 <|@
result long[3860|0xf14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: 3860
stableDimension: 0
stamp: i64 [3860]
stampKind: i64
value: long[3860|0xf14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j642 j704 j715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i19 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v66 
=== Succesors ===
trueSuccessor: v547 
falseSuccessor: v548 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v66 #trueSuccessor: v547 #falseSuccessor: v548  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v655 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v655  <|@  <|@
f <@~|@floating>@ <|@
tid i656 <|@
result int[-139795|0xfffffffffffddded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: -139795
stableDimension: 0
stamp: i32 [-139795]
stampKind: i32
value: int[-139795|0xfffffffffffddded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v547 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-139795|0xfffffffffffddded], long[3860|0xf14]] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 21]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at java.nio.Buffer.<init>(Buffer.java:257) [bci: 45]
at java.nio.CharBuffer.<init>(CharBuffer.java:316) [bci: 8]
at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 12]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: i797 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i797  <|@  <|@
f <@~|@floating>@ <|@
tid v831 <|@
result [v0|QWORD[.] + 27] <|@
d <@d|@=== Debug Properties ===
displacement: 27
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i797 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i797 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.haveLeftoverChar
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v831 
lastLocationAccess: - 
=== Succesors ===
next: v553 
=== Usages ===
v459 
=== Predecessor ===
v548 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v831 lastLocationAccess: - #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid i458 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 4]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v459 v464 v466 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 4]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i797 
y: i458 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i797 y: i458  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 4]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v459 
=== Succesors ===
trueSuccessor: v551 
falseSuccessor: v552 
=== Usages ===
=== Predecessor ===
i797 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v459 #trueSuccessor: v551 #falseSuccessor: v552  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 13]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i798 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i798  <|@  <|@
f <@~|@floating>@ <|@
tid v834 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i798 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i798 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.maxBufferCapacity
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:393) [bci: 10]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v834 
lastLocationAccess: - 
=== Succesors ===
next: v118 
=== Usages ===
v115 v143 i144 
=== Predecessor ===
v551 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v834 lastLocationAccess: - #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:393) [bci: 13]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i796 
y: i798 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i796 y: i798  <|@  <|@
tid a353 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<java.nio.Buffer.mark int:12>, HotSpotResolvedJavaFieldImpl<java.nio.Buffer.address long:16>, HotSpotResolvedJavaFieldImpl<java.nio.Buffer.position int:24>, HotSpotResolvedJavaFieldImpl<java.nio.Buffer.limit int:28>, HotSpotResolvedJavaFieldImpl<java.nio.Buffer.capacity int:32>, HotSpotResolvedJavaFieldImpl<java.nio.Buffer.segment MemorySegment:36>, HotSpotResolvedJavaFieldImpl<java.nio.CharBuffer.offset int:40>, HotSpotResolvedJavaFieldImpl<java.nio.CharBuffer.isReadOnly boolean:44>, HotSpotResolvedJavaFieldImpl<java.nio.CharBuffer.hb char[]:48>]
hasIdentity: true
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
objectId: 0
stamp: a!# java.nio.HeapCharBuffer
type: HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?203 ?634 ?90 ?274 ?285 ?284 ?323 ?92 ?145 ?356 ?370 ?164 ?83 ?333 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 1]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v556 ?356 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j26 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:90) [bci: 16]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
v558 j215 j216 ?356 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?356 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a353 
values: i16 j26 i3 i17 i794 - - - a2 
=== Succesors ===
=== Usages ===
?142 ?631 ?632 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a353 values: i16 j26 i3 i17 i794 - - - a2  <|@  <|@
tid ?350 <|@
d <@d|@=== Debug Properties ===
bci: 11
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(char[], int, int)>
localsSize: 5
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 357
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?83 ?90 ?92 ?634 ?145 ?333 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?145 <|@
d <@d|@=== Debug Properties ===
bci: 18
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 367
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?350 
values: a1 a353 
=== Succesors ===
=== Usages ===
?142 ?631 ?632 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?350 values: a1 a353  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:380) [bci: 106]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 v107 v157 v344 v409 j198 v328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v837 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a801 a799 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:393) [bci: 13]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.8565208600609246
stamp: void
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v117 
falseSuccessor: v116 
=== Usages ===
=== Predecessor ===
i798 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v117 #falseSuccessor: v116  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 16]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a799 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a799  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a799 <|@
result v9|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# sun.nio.cs.UTF_8$Encoder
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.encoder
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: n# sun.nio.cs.UTF_8$Encoder
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v837 
lastLocationAccess: - 
=== Succesors ===
next: f800 
=== Usages ===
v850 
=== Predecessor ===
v117 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v837 lastLocationAccess: - #next: f800  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
result [v9|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a799 
=== Succesors ===
=== Usages ===
f800 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a799  <|@  <|@
f <@#|@fixed with next>@ <|@
tid f800 <|@
result v10|SINGLE <|@
d <@d|@=== Debug Properties ===
accessStamp: f32
barrierType: NONE
deoptReasonAndAction: int[-115467|0xfffffffffffe3cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharsetEncoder.maxBytesPerChar
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.charset.CharsetEncoder.maxBytesPerChar(CharsetEncoder.java:472) [bci: 1]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 21]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: f32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v850 
lastLocationAccess: - 
=== Succesors ===
next: v132 
=== Usages ===
i124 
=== Predecessor ===
a799 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v850 lastLocationAccess: - #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:522) [bci: 11]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i96 
=== Succesors ===
=== Usages ===
i108 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i4 y: i96  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:522) [bci: 11]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v107 
trueValue: i19 
falseValue: i4 
=== Succesors ===
=== Usages ===
i125 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v107 trueValue: i19 falseValue: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.round(float) [bci: -1]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 24]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
value: f800 
=== Succesors ===
=== Usages ===
i125 
=== Predecessor ===
- >@ <|@
instruction <@RoundFloatToInteger|@jdk.graal.compiler.nodes.calc.RoundFloatToIntegerNode>@ value: f800  <|@  <|@
f <@~|@floating>@ <|@
tid i125 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:394) [bci: 27]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i108 
y: i124 
=== Succesors ===
=== Usages ===
v143 i144 
=== Predecessor ===
- >@ <|@
instruction <@*|@jdk.graal.compiler.nodes.calc.MulNode>@ x: i108 y: i124  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:395) [bci: 34]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i798 
y: i125 
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i798 y: i125  <|@  <|@
f <@~|@floating>@ <|@
tid i144 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:395) [bci: 34]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
condition: v143 
trueValue: i798 
falseValue: i125 
=== Succesors ===
=== Usages ===
v126 ?631 v455 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v143 trueValue: i798 falseValue: i125  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:396) [bci: 42]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i796 
y: i144 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i796 y: i144  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:396) [bci: 42]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 2.2036465218155943E-4
stamp: void
=== Inputs ===
condition: v126 
=== Succesors ===
trueSuccessor: v130 
falseSuccessor: v131 
=== Usages ===
=== Predecessor ===
f800 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v126 #trueSuccessor: v130 #falseSuccessor: v131  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v10|SINGLE = MOVSS input: [v9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP x: v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v10|SINGLE {tmp: v14|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = IMUL (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v15|DWORD, ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v6|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 45]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v134  <|@  <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lsun/nio/cs/StreamEncoder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.implFlushBuffer()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?631 <|@
d <@d|@=== Debug Properties ===
bci: 46
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.growByteBufferIfNeeded(int)>
localsSize: 5
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 397
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?145 
values: a1 - - - i144 
virtualObjectMappings: ?356 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?145 values: a1 - - - i144 virtualObjectMappings: ?356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
bci: 46
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.implFlushBuffer
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v454 
stateDuring: ?631 
=== Succesors ===
next: a137 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v454 stateDuring: ?631 #next: a137  <|@  <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
referencedType: [null]
returnStamp: a java.nio.ByteBuffer
signature: [HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ByteBuffer.allocate(int)>
=== Inputs ===
arguments: i144 
=== Succesors ===
=== Usages ===
a137 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: i144  <|@  <|@
tid ?632 <|@
d <@d|@=== Debug Properties ===
bci: 52
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<StreamEncoder.growByteBufferIfNeeded(int)>
localsSize: 5
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 398
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?145 
values: a1 
virtualObjectMappings: ?356 
=== Succesors ===
=== Usages ===
a137 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?145 values: a1 virtualObjectMappings: ?356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a137 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 52
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
polymorphic: false
stamp: a java.nio.ByteBuffer
targetMethod: Direct#ByteBuffer.allocate
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v455 
stateDuring: ?632 
=== Succesors ===
next: v724 
=== Usages ===
a456 v726 
=== Predecessor ===
v134 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v455 stateDuring: ?632 #next: v724  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
precise: true
stamp: void
=== Inputs ===
address: v832 
value: - 
stateBefore: - 
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
a137 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v832 value: - stateBefore: - #next: v457  <|@  <|@
f <@~|@floating>@ <|@
tid a456 <|@
result v20|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: Compress
stamp: n java.nio.ByteBuffer
=== Inputs ===
value: a137 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: StreamEncoder.bb
location: StreamEncoder.bb
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v832 
lastLocationAccess: - 
value: a456 
stateAfter: - 
=== Succesors ===
next: v726 
=== Usages ===
=== Predecessor ===
v724 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v832 lastLocationAccess: - value: a456 stateAfter: - #next: v726  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 55]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
precise: false
stamp: void
=== Inputs ===
address: v832 
value: a137 
object: a1 
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v832 value: a137 object: a1 #next: v141  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
v726 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v16|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v17|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
v131 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v127 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v127  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
v116 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v127 v129 v141 
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v127 v129 v141 #next: v783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: j729 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j729 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j760 
=== Usages ===
v857 v858 
=== Predecessor ===
v783 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j760  <|@  <|@
f <@~|@floating>@ <|@
tid v857 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j729 
index: - 
=== Succesors ===
=== Usages ===
j760 v762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j729 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j760 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v857 
lastLocationAccess: - 
=== Succesors ===
next: j761 
=== Usages ===
j732 v859 v860 a740 v861 v862 v863 v864 v865 v866 v867 
=== Predecessor ===
j729 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v857 lastLocationAccess: - #next: j761  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j729 
index: - 
=== Succesors ===
=== Usages ===
j761 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j729 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j761 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v858 
lastLocationAccess: - 
=== Succesors ===
next: v736 
=== Usages ===
v733 
=== Predecessor ===
j760 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v858 lastLocationAccess: - #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid j728 <|@
result long[56|0x38] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: 56
stableDimension: 0
stamp: i64 [56]
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j732 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j732 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: i64
=== Inputs ===
x: j760 
y: j728 
=== Succesors ===
=== Usages ===
v733 v762 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j760 y: j728  <|@  <|@
f <@~|@floating>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j761 
y: j732 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j761 y: j732  <|@  <|@
f <@*|@fixed>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v733 
=== Succesors ===
trueSuccessor: v735 
falseSuccessor: v734 
=== Usages ===
=== Predecessor ===
j761 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v733 #trueSuccessor: v735 #falseSuccessor: v734  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a741 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a741  <|@  <|@
tid ?142 <|@
d <@d|@=== Debug Properties ===
bci: 58
bytecode: return
code: ResolvedJavaMethodBytecode<StreamEncoder.growByteBufferIfNeeded(int)>
localsSize: 5
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 401
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?145 
virtualObjectMappings: ?356 
=== Succesors ===
=== Usages ===
v825 a741 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?145 virtualObjectMappings: ?356  <|@  <|@
f <@~|@floating>@ <|@
tid v727 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a741 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a741 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?142 
arguments: v727 
=== Succesors ===
next: v825 
=== Usages ===
v825 a758 
=== Predecessor ===
v735 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?142 arguments: v727 #next: v825  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-199537|0xfffffffffffcf48f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?142 
object: a741 
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
a741 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?142 object: a741 #next: v745  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
v825 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v857 
lastLocationAccess: - 
value: j732 
stateAfter: - 
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v857 lastLocationAccess: - value: j732 stateAfter: - #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid v861 <|@
result [v23|QWORD + 312] <|@
d <@d|@=== Debug Properties ===
displacement: 312
stamp: void*
stride: S1
=== Inputs ===
base: j760 
index: - 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j760 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
address: v861 
=== Succesors ===
next: v763 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v861 #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
result [v23|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j760 
index: - 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j760 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j737 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v859 
lastLocationAccess: - 
value: j737 
stateAfter: - 
=== Succesors ===
next: v767 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v859 lastLocationAccess: - value: j737 stateAfter: - #next: v767  <|@  <|@
f <@~|@floating>@ <|@
tid v867 <|@
result [v23|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j760 
index: - 
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j760 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v793 <|@
result meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v867 
lastLocationAccess: - 
value: v793 
stateAfter: - 
=== Succesors ===
next: v768 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v867 lastLocationAccess: - value: v793 stateAfter: - #next: v768  <|@  <|@
f <@~|@floating>@ <|@
tid v860 <|@
result [v23|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j760 
index: - 
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j760 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v860 
lastLocationAccess: - 
value: i19 
stateAfter: - 
=== Succesors ===
next: v769 
=== Usages ===
=== Predecessor ===
v767 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v860 lastLocationAccess: - value: i19 stateAfter: - #next: v769  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
result [v23|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j760 
index: - 
=== Succesors ===
=== Usages ===
v769 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j760 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j640 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v773 v772 v771 v769 v770 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v862 
lastLocationAccess: - 
value: j640 
stateAfter: - 
=== Succesors ===
next: v770 
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v862 lastLocationAccess: - value: j640 stateAfter: - #next: v770  <|@  <|@
f <@~|@floating>@ <|@
tid v863 <|@
result [v23|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j760 
index: - 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j760 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v863 
lastLocationAccess: - 
value: j640 
stateAfter: - 
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v769 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v863 lastLocationAccess: - value: j640 stateAfter: - #next: v771  <|@  <|@
f <@~|@floating>@ <|@
tid v864 <|@
result [v23|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: j760 
index: - 
=== Succesors ===
=== Usages ===
v771 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j760 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v864 
lastLocationAccess: - 
value: j640 
stateAfter: - 
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v770 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v864 lastLocationAccess: - value: j640 stateAfter: - #next: v772  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
result [v23|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j760 
index: - 
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j760 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v865 
lastLocationAccess: - 
value: j640 
stateAfter: - 
=== Succesors ===
next: v773 
=== Usages ===
=== Predecessor ===
v771 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v865 lastLocationAccess: - value: j640 stateAfter: - #next: v773  <|@  <|@
f <@~|@floating>@ <|@
tid v866 <|@
result [v23|QWORD + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: j760 
index: - 
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j760 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v866 
lastLocationAccess: - 
value: j640 
stateAfter: - 
=== Succesors ===
next: a740 
=== Usages ===
=== Predecessor ===
v772 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v866 lastLocationAccess: - value: j640 stateAfter: - #next: a740  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a740 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j760 
=== Succesors ===
next: v743 
=== Usages ===
a758 
=== Predecessor ===
v773 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j760 #next: v743  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
a740 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a758 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v744 
values: a740 a741 
=== Succesors ===
=== Usages ===
v856 a568 v851 v852 v853 v854 v855 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v744 values: a740 a741  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v743 v745 
=== Succesors ===
next: v567 
=== Usages ===
a758 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v743 v745 #next: v567  <|@  <|@
f <@~|@floating>@ <|@
tid v856 <|@
result [v29|QWORD[.] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a758 
index: - 
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a758 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a566 <|@
result v30|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
op: Compress
stamp: n# char[]
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v856 
lastLocationAccess: - 
value: a566 
stateAfter: - 
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v856 lastLocationAccess: - value: a566 stateAfter: - #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid v855 <|@
result [v29|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a758 
index: - 
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a758 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v855 
lastLocationAccess: - 
value: i794 
stateAfter: - 
=== Succesors ===
next: v562 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v855 lastLocationAccess: - value: i794 stateAfter: - #next: v562  <|@  <|@
f <@~|@floating>@ <|@
tid v854 <|@
result [v29|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a758 
index: - 
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a758 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v854 
lastLocationAccess: - 
value: i17 
stateAfter: - 
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v854 lastLocationAccess: - value: i17 stateAfter: - #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
result [v29|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a758 
index: - 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a758 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v853 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v853 lastLocationAccess: - value: i3 stateAfter: - #next: v558  <|@  <|@
f <@~|@floating>@ <|@
tid v852 <|@
result [v29|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a758 
index: - 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a758 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v852 
lastLocationAccess: - 
value: j26 
stateAfter: - 
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v560 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v852 lastLocationAccess: - value: j26 stateAfter: - #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid v851 <|@
result [v29|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a758 
index: - 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a758 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 0]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v851 
lastLocationAccess: - 
value: i16 
stateAfter: - 
=== Succesors ===
next: v569 
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v851 lastLocationAccess: - value: i16 stateAfter: - #next: v569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(char[], int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a568 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a568 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(char[], int, int) [bci: -6] Placeholder
stamp: a!# java.nio.HeapCharBuffer
=== Inputs ===
object: a758 
=== Succesors ===
next: v81 
=== Usages ===
v847 ?370 v835 v836 v839 v840 v843 v434 
=== Predecessor ===
v569 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a758 #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid v847 <|@
result [v29|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a568 
index: - 
=== Succesors ===
=== Usages ===
i815 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a568 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v843 <|@
result [v29|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a568 
index: - 
=== Succesors ===
=== Usages ===
i814 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a568 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v840 <|@
result [v29|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a568 
index: - 
=== Succesors ===
=== Usages ===
i813 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a568 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v839 <|@
result [v29|QWORD[.] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a568 
index: - 
=== Succesors ===
=== Usages ===
a812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a568 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v836 <|@
result [v29|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a568 
index: - 
=== Succesors ===
=== Usages ===
i811 i818 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a568 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v835 <|@
result [v29|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a568 
index: - 
=== Succesors ===
=== Usages ===
i810 v437 i819 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a568 index: -  <|@  <|@
tid ?370 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a353 
materializedValue: a568 
=== Succesors ===
=== Usages ===
?83 ?634 ?164 ?204 ?92 ?284 ?633 ?169 ?90 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@jdk.graal.compiler.nodes.virtual.MaterializedObjectState>@ object: a353 materializedValue: a568  <|@  <|@
tid ?83 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: aload_1
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 369
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?350 
values: a1 a353 
virtualObjectMappings: ?370 
=== Succesors ===
=== Usages ===
v668 i802 a804 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?350 values: a1 a353 virtualObjectMappings: ?370  <|@  <|@
f <@~|@floating>@ <|@
tid a214 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:464) [bci: 133]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: CoderResult@167784470
stableDimension: 0
stamp: a!# java.nio.charset.CoderResult
stampKind: a java.lang.Object
value: Object[CoderResult@167784470]
=== Inputs ===
=== Succesors ===
=== Usages ===
a321 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j710 <|@
result long[4500|0x1194] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: 4500
stableDimension: 0
stamp: i64 [4500]
stampKind: i64
value: long[4500|0x1194]
=== Inputs ===
=== Succesors ===
=== Usages ===
j704 j715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?333 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 370
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?350 
values: a1 a353 
=== Succesors ===
=== Usages ===
?323 ?164 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?350 values: a1 a353  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
a568 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 48], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 32], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 28], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 16
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v81 
=== Succesors ===
next: a801 
=== Usages ===
v91 v100 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v81 #next: a801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a801 <|@
result v32|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# sun.nio.cs.UTF_8$Encoder
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.encoder
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 29]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: n# sun.nio.cs.UTF_8$Encoder
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v837 
lastLocationAccess: - 
=== Succesors ===
next: i802 
=== Usages ===
a403 v838 
=== Predecessor ===
v82 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v837 lastLocationAccess: - #next: i802  <|@  <|@
f <@~|@floating>@ <|@
tid v838 <|@
result [v32|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a801 
=== Succesors ===
=== Usages ===
i802 v409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i802 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-103947|0xfffffffffffe69f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharsetEncoder.state
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 12]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?83 
guard: - 
address: v838 
lastLocationAccess: - 
=== Succesors ===
next: a803 
=== Usages ===
v153 v157 
=== Predecessor ===
a801 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?83 guard: - address: v838 lastLocationAccess: - #next: a803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a803 <|@
result v34|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.nio.ByteBuffer
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: StreamEncoder.bb
memoryOrder: PLAIN
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 34]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: n java.nio.ByteBuffer
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v832 
lastLocationAccess: - 
=== Succesors ===
next: a804 
=== Usages ===
a405 v841 v842 v844 v845 v846 v848 v868 
=== Predecessor ===
i802 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v832 lastLocationAccess: - #next: a804  <|@  <|@
f <@~|@floating>@ <|@
tid v841 <|@
result [v34|DWORD[_] * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a803 
=== Succesors ===
=== Usages ===
a804 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a804 <|@
result v35|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-107019|0xfffffffffffe5df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteBuffer.hb
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?83 
guard: - 
address: v841 
lastLocationAccess: - 
=== Succesors ===
next: i805 
=== Usages ===
a421 v870 
=== Predecessor ===
a803 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?83 guard: - address: v841 lastLocationAccess: - #next: i805  <|@  <|@
f <@~|@floating>@ <|@
tid v842 <|@
result [v34|DWORD[_] * 8 + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a803 
=== Succesors ===
=== Usages ===
i805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i805 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteBuffer.isReadOnly
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v842 
lastLocationAccess: - 
=== Succesors ===
next: i806 
=== Usages ===
v466 
=== Predecessor ===
a804 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v842 lastLocationAccess: - #next: i806  <|@  <|@
f <@~|@floating>@ <|@
tid v845 <|@
result [v34|DWORD[_] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a803 
=== Succesors ===
=== Usages ===
i806 v441 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i806 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:309) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:452) [bci: 38]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v845 
lastLocationAccess: - 
=== Succesors ===
next: i807 
=== Usages ===
i192 
=== Predecessor ===
i805 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v845 lastLocationAccess: - #next: i807  <|@  <|@
f <@~|@floating>@ <|@
tid v844 <|@
result [v34|DWORD[_] * 8 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a803 
=== Succesors ===
=== Usages ===
i807 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i807 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ByteBuffer.offset
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.ByteBuffer.arrayOffset(ByteBuffer.java:1536) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:452) [bci: 34]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v844 
lastLocationAccess: - 
=== Succesors ===
next: i808 
=== Usages ===
i192 i194 i266 
=== Predecessor ===
i806 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v844 lastLocationAccess: - #next: i808  <|@  <|@
f <@~|@floating>@ <|@
tid v846 <|@
result [v34|DWORD[_] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a803 
=== Succesors ===
=== Usages ===
i808 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i808 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.limit
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.limit(Buffer.java:361) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:453) [bci: 49]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v846 
lastLocationAccess: - 
=== Succesors ===
next: v809 
=== Usages ===
i194 v304 
=== Predecessor ===
i807 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v846 lastLocationAccess: - #next: v809  <|@  <|@
f <@~|@floating>@ <|@
tid v868 <|@
result [v34|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a803 
=== Succesors ===
=== Usages ===
v809 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v809 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v868 
lastLocationAccess: - 
=== Succesors ===
next: i810 
=== Usages ===
v791 
=== Predecessor ===
i808 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v868 lastLocationAccess: - #next: i810  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i810 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:533) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 22]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v835 
lastLocationAccess: - 
=== Succesors ===
next: i811 
=== Usages ===
v148 i186 
=== Predecessor ===
v809 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v835 lastLocationAccess: - #next: i811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i811 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.limit
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:533) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 22]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v836 
lastLocationAccess: - 
=== Succesors ===
next: v573 
=== Usages ===
v148 i188 v276 
=== Predecessor ===
i810 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v836 lastLocationAccess: - #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.hasRemaining(Buffer.java:533) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 22]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i810 
y: i811 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i810 y: i811  <|@  <|@
f <@*|@fixed>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 25]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v148 
=== Succesors ===
trueSuccessor: v571 
falseSuccessor: v572 
=== Usages ===
=== Predecessor ===
i811 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v148 #trueSuccessor: v571 #falseSuccessor: v572  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v33|DWORD = MOV input: [v32|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v35|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVSXB input: [v34|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOV input: [v34|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v34|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV input: [v34|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV input: [v29|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 28]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i802 
y: i96 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i802 y: i96  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.9999405143388893
stamp: void
=== Inputs ===
condition: v157 
=== Succesors ===
trueSuccessor: v628 
falseSuccessor: v154 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v157 #trueSuccessor: v628 #falseSuccessor: v154  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v161  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
v628 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 23]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v156  <|@  <|@
f <@~|@floating>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i802 
y: i19 
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i802 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 15]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v153 
=== Succesors ===
trueSuccessor: v155 
falseSuccessor: v629 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v153 #trueSuccessor: v155 #falseSuccessor: v629  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
v155 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 48]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v159 v161 
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v159 v161 #next: v409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: CharsetEncoder.state
location: CharsetEncoder.state
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 51]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v838 
lastLocationAccess: - 
value: i96 
stateAfter: - 
=== Succesors ===
next: a812 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v838 lastLocationAccess: - value: i96 stateAfter: - #next: a812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a812 <|@
result v43|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# char[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharBuffer.hb
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: n# char[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v839 
lastLocationAccess: - 
=== Succesors ===
next: v827 
=== Usages ===
a413 v869 
=== Predecessor ===
v409 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v839 lastLocationAccess: - #next: v827  <|@  <|@
f <@~|@floating>@ <|@
tid a403 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 29]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: Uncompress
stamp: a# sun.nio.cs.UTF_8$Encoder
=== Inputs ===
value: a801 
=== Succesors ===
=== Usages ===
?203 ?164 v434 ?323 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a801  <|@  <|@
f <@~|@floating>@ <|@
tid a405 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 34]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: Uncompress
stamp: a java.nio.ByteBuffer
=== Inputs ===
value: a803 
=== Succesors ===
=== Usages ===
?323 ?164 v434 ?203 ?286 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a803  <|@  <|@
tid ?164 <|@
d <@d|@=== Debug Properties ===
bci: 54
bytecode: aload_0
code: ResolvedJavaMethodBytecode<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:580) [bci: 51]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
sourceFile: CharsetEncoder.java
sourceLine: 586
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?333 
values: a403 a353 a405 i19 
virtualObjectMappings: ?370 
=== Succesors ===
=== Usages ===
v683 v827 v829 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?333 values: a403 a353 a405 i19 virtualObjectMappings: ?370  <|@  <|@
f <@~|@floating>@ <|@
tid v869 <|@
result [v43|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a812 
=== Succesors ===
=== Usages ===
v827 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v827 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?164 
object: v869 
=== Succesors ===
next: i813 
=== Usages ===
=== Predecessor ===
a812 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?164 object: v869 #next: i813  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i813 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharBuffer.isReadOnly
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 8]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v840 
lastLocationAccess: - 
=== Succesors ===
next: v581 
=== Usages ===
v464 
=== Predecessor ===
v827 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v840 lastLocationAccess: - #next: v581  <|@  <|@
f <@~|@floating>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i813 
y: i458 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i813 y: i458  <|@  <|@
f <@*|@fixed>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v464 
=== Succesors ===
trueSuccessor: v579 
falseSuccessor: v580 
=== Usages ===
=== Predecessor ===
i813 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v464 #trueSuccessor: v579 #falseSuccessor: v580  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v29|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v29|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 14]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v829 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v829  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
result [v35|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a804 
=== Succesors ===
=== Usages ===
v829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?164 
object: v870 
=== Succesors ===
next: v589 
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?164 object: v870 #next: v589  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i805 
y: i458 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i805 y: i458  <|@  <|@
f <@*|@fixed>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v466 
=== Succesors ===
trueSuccessor: v587 
falseSuccessor: v588 
=== Usages ===
=== Predecessor ===
v829 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v466 #trueSuccessor: v587 #falseSuccessor: v588  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v35|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 14]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: j785 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j785  <|@  <|@
f <@~|@floating>@ <|@
tid a413 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: Uncompress
stamp: a# char[]
=== Inputs ===
value: a812 
=== Succesors ===
=== Usages ===
v434 j785 ?203 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j785 <|@
result v47|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i64
=== Inputs ===
object: a413 
=== Succesors ===
next: j787 
=== Usages ===
j786 
=== Predecessor ===
v587 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a413 #next: j787  <|@  <|@
f <@~|@floating>@ <|@
tid a421 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 1]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a804 
=== Succesors ===
=== Usages ===
v434 j787 ?203 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j787 <|@
result v49|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i64
=== Inputs ===
object: a421 
=== Succesors ===
next: i814 
=== Usages ===
j788 
=== Predecessor ===
j785 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a421 #next: i814  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i814 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CharBuffer.offset
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.CharBuffer.arrayOffset(CharBuffer.java:1536) [bci: 31]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:448) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v843 
lastLocationAccess: - 
=== Succesors ===
next: i202 
=== Usages ===
i186 i188 i265 
=== Predecessor ===
j787 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v843 lastLocationAccess: - #next: i202  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:448) [bci: 13]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i810 
y: i814 
=== Succesors ===
=== Usages ===
i195 j197 ?203 i205 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i810 y: i814  <|@  <|@
f <@~|@floating>@ <|@
tid j197 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i186 
=== Succesors ===
=== Usages ===
j198 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i186  <|@  <|@
f <@~|@floating>@ <|@
tid j198 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i64 [-4294967296 - 4294967294] bits:x...x0
=== Inputs ===
x: j197 
y: i96 
=== Succesors ===
=== Usages ===
j215 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j197 y: i96  <|@  <|@
f <@~|@floating>@ <|@
tid j215 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i64 [-4294967280 - 4294967310] bits:x...x0
=== Inputs ===
x: j198 
y: j26 
=== Succesors ===
=== Usages ===
j786 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j198 y: j26  <|@  <|@
f <@~|@floating>@ <|@
tid j786 <|@
result v55|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i64
=== Inputs ===
x: j215 
y: j785 
=== Succesors ===
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j215 y: j785  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:452) [bci: 41]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i806 
y: i807 
=== Succesors ===
=== Usages ===
i196 j200 ?203 i206 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i806 y: i807  <|@  <|@
f <@~|@floating>@ <|@
tid j200 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i192 
=== Succesors ===
=== Usages ===
j216 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i192  <|@  <|@
f <@~|@floating>@ <|@
tid j216 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i64 [-2147483632 - 2147483663]
=== Inputs ===
x: j200 
y: j26 
=== Succesors ===
=== Usages ===
j788 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j200 y: j26  <|@  <|@
f <@~|@floating>@ <|@
tid j788 <|@
result v59|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i64
=== Inputs ===
x: j216 
y: j787 
=== Succesors ===
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j216 y: j787  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:453) [bci: 52]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i807 
y: i808 
=== Succesors ===
=== Usages ===
i196 ?203 v434 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i807 y: i808  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 74]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i194 
y: i192 
=== Succesors ===
=== Usages ===
v263 i264 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i194 y: i192  <|@  <|@
f <@~|@floating>@ <|@
tid i188 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:449) [bci: 24]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i811 
y: i814 
=== Succesors ===
=== Usages ===
i195 ?203 v207 v434 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i811 y: i814  <|@  <|@
f <@~|@floating>@ <|@
tid i195 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 69]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i188 
y: i186 
=== Succesors ===
=== Usages ===
v263 i264 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i188 y: i186  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 75]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i196 
y: i195 
=== Succesors ===
=== Usages ===
i264 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i196 y: i195  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 75]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
condition: v263 
trueValue: i196 
falseValue: i195 
=== Succesors ===
=== Usages ===
i202 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v263 trueValue: i196 falseValue: i195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i202 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
charset: ASCII
locationIdentity: Array: char
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
runtimeCheckedCPUFeatures: [null]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j786 
dst: j788 
len: i264 
=== Succesors ===
next: v210 
=== Usages ===
?204 i205 i206 
=== Predecessor ===
i814 >@ <|@
instruction <@EncodeArray|@jdk.graal.compiler.replacements.nodes.EncodeArrayNode>@ stateAfter: - lastLocationAccess: - src: j786 dst: j788 len: i264 #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid i206 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:458) [bci: 96]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i192 
y: i202 
=== Succesors ===
=== Usages ===
v434 i266 ?286 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i192 y: i202  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:457) [bci: 89]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i186 
y: i202 
=== Succesors ===
=== Usages ===
v207 v434 i265 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i186 y: i202  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:460) [bci: 103]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i205 
y: i188 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i205 y: i188  <|@  <|@
tid ?323 <|@
d <@d|@=== Debug Properties ===
bci: 57
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>
localsSize: 7
locksSize: 0
sourceFile: CharsetEncoder.java
sourceLine: 586
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?333 
values: a403 a353 a405 i19 
=== Succesors ===
=== Usages ===
?169 ?318 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?333 values: a403 a353 a405 i19  <|@  <|@
tid ?318 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)>
localsSize: 3
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 564
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?323 
=== Succesors ===
=== Usages ===
?203 ?633 ?317 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?323  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:460) [bci: 103]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 8.274622302240076E-6
stamp: void
=== Inputs ===
condition: v207 
=== Succesors ===
trueSuccessor: v209 
falseSuccessor: v208 
=== Usages ===
=== Predecessor ===
i202 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v207 #trueSuccessor: v209 #falseSuccessor: v208  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOV input: [v29|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v41|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD value: v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = SHL value: v52|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[*] = ADD (x: v54|QWORD, y: v47|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = ADD (x: v37|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVSXD value: v56|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA address: [v57|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = ADD (x: v58|QWORD, y: v49|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = ADD (x: v39|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SUB (x: v60|DWORD, ~y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = ADD (x: v42|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SUB (x: v62|DWORD, ~y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = CMOVE (falseValue: v63|DWORD, ~trueValue: v61|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v59|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = ADD (x: v65|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = ADD (x: v51|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v67|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 106]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a212 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a212  <|@  <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
referencedType: [null]
returnStamp: a# java.nio.charset.CoderResult
signature: [HotSpotType<Lsun/nio/cs/UTF_8$Encoder;, resolved>, UnresolvedJavaType<Ljava/nio/CharBuffer;>, UnresolvedJavaType<[C>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/nio/ByteBuffer;>, UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)>
=== Inputs ===
arguments: a403 a568 a413 i205 i188 a405 a421 i206 i194 
=== Succesors ===
=== Usages ===
a212 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a403 a568 a413 i205 i188 a405 a421 i206 i194  <|@  <|@
tid ?633 <|@
d <@d|@=== Debug Properties ===
bci: 120
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
localsSize: 10
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 461
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?318 
virtualObjectMappings: ?370 
=== Succesors ===
=== Usages ===
a212 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?318 virtualObjectMappings: ?370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a212 <|@
result v68|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 120
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
polymorphic: false
stamp: a# java.nio.charset.CoderResult
targetMethod: Direct#UTF_8$Encoder.encodeArrayLoopSlow
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v434 
stateDuring: ?633 
=== Succesors ===
next: v320 
=== Usages ===
a321 
=== Predecessor ===
v209 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v434 stateDuring: ?633 #next: v320  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
a212 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:8|DWORD = MOVE input: v66|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction out:16|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|QWORD[.]] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 124]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v593 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v593  <|@  <|@
f <@~|@floating>@ <|@
tid i265 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 6]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i205 
y: i814 
=== Succesors ===
=== Usages ===
?274 v276 v278 v281 v437 ?284 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i205 y: i814  <|@  <|@
f <@~|@floating>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i811 
y: i265 
=== Succesors ===
=== Usages ===
v593 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i811 y: i265  <|@  <|@
f <@*|@fixed>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v276 
=== Succesors ===
trueSuccessor: v591 
falseSuccessor: v592 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v276 #trueSuccessor: v591 #falseSuccessor: v592  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = SUB (x: v67|DWORD, ~y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v42|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v701 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v701  <|@  <|@
f <@~|@floating>@ <|@
tid i702 <|@
result int[-151059|0xfffffffffffdb1ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: -151059
stableDimension: 0
stamp: i32 [-151059]
stampKind: i32
value: int[-151059|0xfffffffffffdb1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v591 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-151059|0xfffffffffffdb1ed], long[3220|0xc94]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 12]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v593 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i265 
y: i19 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i265 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v278 
=== Succesors ===
trueSuccessor: v595 
falseSuccessor: v596 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v278 #trueSuccessor: v595 #falseSuccessor: v596  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid i707 <|@
result int[-152083|0xfffffffffffdaded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: -152083
stableDimension: 0
stamp: i32 [-152083]
stampKind: i32
value: int[-152083|0xfffffffffffdaded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v595 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-152083|0xfffffffffffdaded], long[3860|0xf14]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 21]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i815 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i815  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i815 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.mark
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 33]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v847 
lastLocationAccess: - 
=== Succesors ===
next: v601 
=== Usages ===
v281 
=== Predecessor ===
v596 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v847 lastLocationAccess: - #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i265 
y: i815 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i265 y: i815  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v281 
=== Succesors ===
trueSuccessor: v599 
falseSuccessor: v600 
=== Usages ===
=== Predecessor ===
i815 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v281 #trueSuccessor: v599 #falseSuccessor: v600  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v69|DWORD, y: [v29|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v708  <|@  <|@
f <@~|@floating>@ <|@
tid i709 <|@
result int[-153107|0xfffffffffffda9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: -153107
stableDimension: 0
stamp: i32 [-153107]
stampKind: i32
value: int[-153107|0xfffffffffffda9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v700 
=== Predecessor ===
v599 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[4500|0x1194]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i703 <|@
result v70|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32 [-153107 - -151059] bits:1...101101xxx0111101101
valueDescription: i32
=== Inputs ===
merge: v700 
values: i702 i707 i709 
=== Succesors ===
=== Usages ===
v705 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v700 values: i702 i707 i709  <|@  <|@
f <@~|@floating>@ <|@
tid j704 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i64 [3220 - 4500] bits:0...0xxxxxx0010100
valueDescription: i64
=== Inputs ===
merge: v700 
values: j654 j657 j710 
=== Succesors ===
=== Usages ===
v705 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v700 values: j654 j657 j710  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v701 v706 v708 
=== Succesors ===
next: v705 
=== Usages ===
i703 j704 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v701 v706 v708 #next: v705  <|@  <|@
tid ?203 <|@
d <@d|@=== Debug Properties ===
bci: 78
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
localsSize: 10
locksSize: 0
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
sourceFile: UTF_8.java
sourceLine: 456
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?318 
values: a403 a353 a405 a413 i186 i188 a421 i192 i194 
=== Succesors ===
=== Usages ===
?204 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?318 values: a403 a353 a405 a413 i186 i188 a421 i192 i194  <|@  <|@
tid ?204 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: ireturn
code: ResolvedJavaMethodBytecode<System$2.encodeASCII(char[], int, byte[], int, int)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.lang.StringCoding.implEncodeAsciiArray(char[], int, byte[], int, int) [bci: -1]
at java.lang.System$2.encodeASCII(System.java:2506) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
sourceFile: System.java
sourceLine: 2506
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?203 
values: i202 
virtualObjectMappings: ?370 
=== Succesors ===
=== Usages ===
v705 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?203 values: i202 virtualObjectMappings: ?370  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
stateBefore: ?204 
actionAndReason: i703 
speculation: j704 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v700 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?204 actionAndReason: i703 speculation: j704  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|DWORD, v71|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v65|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] v46|QWORD[.] v51|DWORD v62|DWORD v48|QWORD[.] v56|DWORD v60|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 45]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v437  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.position
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 47]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v835 
lastLocationAccess: - 
value: i265 
stateAfter: - 
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v835 lastLocationAccess: - value: i265 stateAfter: - #next: v316  <|@  <|@
f <@~|@floating>@ <|@
tid v791 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v809 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v809  <|@  <|@
f <@*|@fixed>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>}]
keySuccessors: [I@793a7bd1
keys: [HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>]
profileData: PROFILED keyProbabilities: [1.0, 0.0]
stamp: void
=== Inputs ===
value: v791 
=== Succesors ===
successors: v296 v298 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v791 #successors: v296 v298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = UNCOMPRESSPOINTER (input: v40|DWORD, ~baseRegister: v73|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v74|QWORD, y: v72|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid i266 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 17]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i206 
y: i807 
=== Succesors ===
=== Usages ===
v304 v306 v309 v441 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i206 y: i807  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i808 
y: i266 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i808 y: i266  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v304 
=== Succesors ===
trueSuccessor: v603 
falseSuccessor: v604 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v304 #trueSuccessor: v603 #falseSuccessor: v604  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = SUB (x: v66|DWORD, ~y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid i713 <|@
result int[-154131|0xfffffffffffda5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: -154131
stableDimension: 0
stamp: i32 [-154131]
stampKind: i32
value: int[-154131|0xfffffffffffda5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v711 
=== Predecessor ===
v603 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154131|0xfffffffffffda5ed], long[3220|0xc94]] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 12]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v609 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v609  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i266 
y: i19 
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i266 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v306 
=== Succesors ===
trueSuccessor: v607 
falseSuccessor: v608 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v306 #trueSuccessor: v607 #falseSuccessor: v608  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v75|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 14]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v720 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid i721 <|@
result int[-155155|0xfffffffffffda1ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: -155155
stableDimension: 0
stamp: i32 [-155155]
stampKind: i32
value: int[-155155|0xfffffffffffda1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v711 
=== Predecessor ===
v607 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155155|0xfffffffffffda1ed], long[3860|0xf14]] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 21]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: i816 
=== Usages ===
=== Predecessor ===
v609 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i816  <|@  <|@
f <@~|@floating>@ <|@
tid v848 <|@
result [v34|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a803 
=== Succesors ===
=== Usages ===
i816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i816 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.mark
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 33]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v848 
lastLocationAccess: - 
=== Succesors ===
next: v613 
=== Usages ===
v309 
=== Predecessor ===
v608 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v848 lastLocationAccess: - #next: v613  <|@  <|@
f <@~|@floating>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i266 
y: i816 
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i266 y: i816  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v309 
=== Succesors ===
trueSuccessor: v611 
falseSuccessor: v612 
=== Usages ===
=== Predecessor ===
i816 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v309 #trueSuccessor: v611 #falseSuccessor: v612  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v75|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:328) [bci: 37]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v722  <|@  <|@
f <@~|@floating>@ <|@
tid i723 <|@
result int[-156179|0xfffffffffffd9ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: -156179
stableDimension: 0
stamp: i32 [-156179]
stampKind: i32
value: int[-156179|0xfffffffffffd9ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v711 
=== Predecessor ===
v611 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-156179|0xfffffffffffd9ded], long[4500|0x1194]] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 45]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v441 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.position
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 47]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v845 
lastLocationAccess: - 
value: i266 
stateAfter: - 
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v845 lastLocationAccess: - value: i266 stateAfter: - #next: v322  <|@  <|@
f <@*|@fixed>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
v441 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 24], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v76|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a321 <|@
result v77|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# java.nio.charset.CoderResult
valueDescription: a java.lang.Object
=== Inputs ===
merge: v319 
values: a212 a214 
=== Succesors ===
=== Usages ===
?90 ?169 v849 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v319 values: a212 a214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v320 v322 
=== Succesors ===
next: i817 
=== Usages ===
a321 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v320 v322 #next: i817  <|@  <|@
tid ?169 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: areturn
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeLoop(CharBuffer, ByteBuffer)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
sourceFile: UTF_8.java
sourceLine: 564
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?323 
values: a321 
virtualObjectMappings: ?370 
=== Succesors ===
=== Usages ===
v871 i817 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?323 values: a321 virtualObjectMappings: ?370  <|@  <|@
f <@~|@floating>@ <|@
tid v849 <|@
result [v77|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a321 
index: - 
=== Succesors ===
=== Usages ===
i817 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a321 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i817 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-113163|0xfffffffffffe45f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CoderResult.type
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:128) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:591) [bci: 79]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?169 
guard: - 
address: v849 
lastLocationAccess: - 
=== Succesors ===
next: v626 
=== Usages ===
v328 v340 
=== Predecessor ===
v319 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?169 guard: - address: v849 lastLocationAccess: - #next: v626  <|@  <|@
f <@~|@floating>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isOverflow(CoderResult.java:128) [bci: 5]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:591) [bci: 79]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i817 
y: i96 
=== Succesors ===
=== Usages ===
v166 v617 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i817 y: i96  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.nio.charset.CoderResult.isUnderflow(CoderResult.java:119) [bci: 4]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:371) [bci: 43]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i817 
y: i19 
=== Succesors ===
=== Usages ===
v94 v626 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i817 y: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:594) [bci: 93]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.9999917243269874
stamp: void
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v624 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
i817 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v624 #falseSuccessor: v165  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v78|DWORD = MOV input: [v77|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:595) [bci: 96]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v336  <|@  <|@
f <@*|@fixed>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v624 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:594) [bci: 93]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v626 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v166  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:591) [bci: 82]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v328 
=== Succesors ===
trueSuccessor: v168 
falseSuccessor: v625 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v328 #trueSuccessor: v168 #falseSuccessor: v625  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:592) [bci: 85]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v335  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v168 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v335 v336 
=== Succesors ===
next: v94 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v335 v336 #next: v94  <|@  <|@
f <@*|@fixed>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:371) [bci: 46]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: PROFILED designatedSuccessorProbability: 0.9999917209847682
stamp: void
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v93 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v91 #falseSuccessor: v93  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:379) [bci: 99]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v617 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v617  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:379) [bci: 103]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v328 
=== Succesors ===
trueSuccessor: v615 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v328 #trueSuccessor: v615 #falseSuccessor: v616  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:380) [bci: 106]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v98 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v98  <|@  <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lsun/nio/cs/StreamEncoder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<StreamEncoder.writeBytes()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?634 <|@
d <@d|@=== Debug Properties ===
bci: 131
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
sourceFile: StreamEncoder.java
sourceLine: 381
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?350 
values: a1 a353 
virtualObjectMappings: ?370 
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?350 values: a1 a353 virtualObjectMappings: ?370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
bci: 131
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
polymorphic: false
stamp: void
targetMethod: Direct#StreamEncoder.writeBytes
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v445 
stateDuring: ?634 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v445 stateDuring: ?634 #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
loopBegin: v82 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v82  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v82 
=== Succesors ===
next: i818 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v82 #next: i818  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i818 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.limit
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:521) [bci: 1]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 76]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v836 
lastLocationAccess: - 
=== Succesors ===
next: i819 
=== Usages ===
i343 
=== Predecessor ===
v91 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v836 lastLocationAccess: - #next: i819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i819 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:521) [bci: 5]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 76]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v835 
lastLocationAccess: - 
=== Succesors ===
next: v622 
=== Usages ===
i343 
=== Predecessor ===
i818 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v835 lastLocationAccess: - #next: v622  <|@  <|@
f <@~|@floating>@ <|@
tid i343 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:521) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 76]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32
=== Inputs ===
x: i818 
y: i819 
=== Succesors ===
=== Usages ===
v344 i345 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i818 y: i819  <|@  <|@
f <@~|@floating>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:522) [bci: 11]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 76]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i343 
y: i96 
=== Succesors ===
=== Usages ===
i345 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i343 y: i96  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.remaining(Buffer.java:522) [bci: 11]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 76]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v344 
trueValue: i19 
falseValue: i343 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v344 trueValue: i19 falseValue: i343  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 80]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i345 
y: i96 
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i345 y: i96  <|@  <|@
f <@*|@fixed>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 80]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v101 
=== Succesors ===
trueSuccessor: v620 
falseSuccessor: v621 
=== Usages ===
=== Predecessor ===
i819 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v101 #trueSuccessor: v620 #falseSuccessor: v621  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = SUB (x: v79|DWORD, ~y: [v29|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v80|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = CMOVE (falseValue: v80|DWORD, ~trueValue: v82|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v81|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 80]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
v622 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v619  <|@  <|@
tid ?92 <|@
d <@d|@=== Debug Properties ===
bci: 49
bytecode: getstatic
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
sourceFile: StreamEncoder.java
sourceLine: 372
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?350 
values: a1 a353 
virtualObjectMappings: ?370 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?350 values: a1 a353 virtualObjectMappings: ?370  <|@  <|@
f <@*|@fixed>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:373) [bci: 80]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
reason: UnreachedCode
speculation: {0x0000000000001b94[index: 220, len: 20, hash: 0x92b47afe]: UnreachedCode@6[HotSpotMethod<StreamEncoder.implWrite(CharBuffer)>, 83]}
stamp: void
=== Inputs ===
stateBefore: ?92 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?92  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:386) [bci: 144]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v622 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v12  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:358) [bci: 14]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v621 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:379) [bci: 103]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v614 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v614  <|@  <|@
tid ?90 <|@
d <@d|@=== Debug Properties ===
bci: 41
bytecode: astore_2
code: ResolvedJavaMethodBytecode<StreamEncoder.implWrite(CharBuffer)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
sourceFile: StreamEncoder.java
sourceLine: 370
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?350 
values: a321 a1 a353 
virtualObjectMappings: ?370 
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?350 values: a321 a1 a353 virtualObjectMappings: ?370  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:379) [bci: 103]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
reason: UnreachedCode
speculation: {0x0000000000001914[index: 200, len: 20, hash: 0x92b47a34]: UnreachedCode@6[HotSpotMethod<StreamEncoder.implWrite(CharBuffer)>, 137]}
stamp: void
=== Inputs ===
stateBefore: ?90 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v616 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?90  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v77|QWORD[.] 
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:594) [bci: 88]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v871 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v871  <|@  <|@
f <@*|@fixed>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 623
mayConvertToGuard: true
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:591) [bci: 79]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
reason: UnreachedCode
speculation: {0x0000000000002314[index: 280, len: 20, hash: 0x1038279]: UnreachedCode@6[HotSpotMethod<CharsetEncoder.encode(CharBuffer, ByteBuffer, boolean)>, 122]}
stamp: void
=== Inputs ===
stateBefore: ?169 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?169  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@~|@floating>@ <|@
tid j719 <|@
result long[17300|0x4394] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: 17300
stableDimension: 0
stamp: i64 [17300]
stampKind: i64
value: long[17300|0x4394]
=== Inputs ===
=== Succesors ===
=== Usages ===
j715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i718 <|@
result int[-76083|0xfffffffffffed6cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: -76083
stableDimension: 0
stamp: i32 [-76083]
stampKind: i32
value: int[-76083|0xfffffffffffed6cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v711 
=== Predecessor ===
v298 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76083|0xfffffffffffed6cd], long[17300|0x4394]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i714 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32 [-156179 - -76083] bits:1...1xx1xxxxxxx11x01101
valueDescription: i32
=== Inputs ===
merge: v711 
values: i713 i718 i721 i723 
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v711 values: i713 i718 i721 i723  <|@  <|@
f <@~|@floating>@ <|@
tid j715 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i64 [3220 - 17300] bits:0...0x0xxxxxx0010100
valueDescription: i64
=== Inputs ===
merge: v711 
values: j654 j719 j657 j710 
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v711 values: j654 j719 j657 j710  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v712 v717 v720 v722 
=== Succesors ===
next: v716 
=== Usages ===
i714 j715 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v712 v717 v720 v722 #next: v716  <|@  <|@
tid ?317 <|@
d <@d|@=== Debug Properties ===
bci: 130
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<UTF_8$Encoder.encodeArrayLoop(CharBuffer, ByteBuffer)>
localsSize: 10
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 463
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?318 
=== Succesors ===
=== Usages ===
?286 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?318  <|@  <|@
tid ?286 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<UTF_8.updatePositions(Buffer, int, Buffer, int)>
localsSize: 4
locksSize: 0
sourceFile: UTF_8.java
sourceLine: 82
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?317 
values: - - a405 i206 
=== Succesors ===
=== Usages ===
?274 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?317 values: - - a405 i206  <|@  <|@
tid ?274 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<CharBuffer.position(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
sourceFile: CharBuffer.java
sourceLine: 285
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?286 
values: a353 i265 
=== Succesors ===
=== Usages ===
?285 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?286 values: a353 i265  <|@  <|@
tid ?285 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<CharBuffer.position(int)>
localsSize: 2
locksSize: 0
sourceFile: CharBuffer.java
sourceLine: 1551
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?274 
values: a353 
=== Succesors ===
=== Usages ===
?284 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?274 values: a353  <|@  <|@
tid ?284 <|@
d <@d|@=== Debug Properties ===
bci: 50
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Buffer.position(int)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:329) [bci: 47]
at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
sourceFile: Buffer.java
sourceLine: 330
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?285 
values: a353 i265 
virtualObjectMappings: ?370 
=== Succesors ===
=== Usages ===
v716 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?285 values: a353 i265 virtualObjectMappings: ?370  <|@  <|@
f <@*|@fixed>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.position(Buffer.java:326) [bci: 5]
at java.nio.ByteBuffer.position(ByteBuffer.java:1551) [bci: 2]
at java.nio.ByteBuffer.position(ByteBuffer.java:285) [bci: 2]
at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:83) [bci: 18]
at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
stateBefore: ?284 
actionAndReason: i714 
speculation: j715 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?284 actionAndReason: i714 speculation: j715  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|DWORD, v84|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v29|QWORD[.] v69|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v29|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v29|QWORD[.] v69|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v45|QWORD[.] v66|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.ByteBuffer.hasArray(ByteBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 8]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@~|@floating>@ <|@
tid j686 <|@
result long[11540|0x2d14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: 11540
stableDimension: 0
stamp: i64 [11540]
stampKind: i64
value: long[11540|0x2d14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i690 <|@
result int[-150035|0xfffffffffffdb5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: -150035
stableDimension: 0
stamp: i32 [-150035]
stampKind: i32
value: int[-150035|0xfffffffffffdb5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i681 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
v588 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-150035|0xfffffffffffdb5ed], long[11540|0x2d14]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 11]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v687 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v687  <|@  <|@
f <@~|@floating>@ <|@
tid j680 <|@
result long[10900|0x2a94] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: 10900
stableDimension: 0
stamp: i64 [10900]
stampKind: i64
value: long[10900|0x2a94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j682 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i688 <|@
result int[-147987|0xfffffffffffdbded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: -147987
stableDimension: 0
stamp: i32 [-147987]
stampKind: i32
value: int[-147987|0xfffffffffffdbded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i681 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
v580 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-147987|0xfffffffffffdbded], long[10900|0x2a94]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i681 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32 [-150035 - -147987] bits:1...1011011x10111101101
valueDescription: i32
=== Inputs ===
merge: v677 
values: i688 i690 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v677 values: i688 i690  <|@  <|@
f <@~|@floating>@ <|@
tid j682 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i64 [10900 - 11540] bits:0...0101xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v677 
values: j680 j686 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v677 values: j680 j686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v687 v689 
=== Succesors ===
next: v683 
=== Usages ===
i681 j682 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v687 v689 #next: v683  <|@  <|@
f <@*|@fixed>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.CharBuffer.hasArray(CharBuffer.java:1481) [bci: 4]
at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:563) [bci: 1]
at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
stateBefore: ?164 
actionAndReason: i681 
speculation: j682 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v677 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?164 actionAndReason: i681 speculation: j682  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:577) [bci: 18]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
f <@~|@floating>@ <|@
tid j676 <|@
result long[8340|0x2094] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: 8340
stableDimension: 0
stamp: i64 [8340]
stampKind: i64
value: long[8340|0x2094]
=== Inputs ===
=== Succesors ===
=== Usages ===
j667 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i675 <|@
result int[-160531|0xfffffffffffd8ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: -160531
stableDimension: 0
stamp: i32 [-160531]
stampKind: i32
value: int[-160531|0xfffffffffffd8ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i666 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v663 
=== Predecessor ===
v629 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-160531|0xfffffffffffd8ced], long[8340|0x2094]] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 25]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v671 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v671  <|@  <|@
f <@~|@floating>@ <|@
tid j673 <|@
result long[5780|0x1694] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: 5780
stableDimension: 0
stamp: i64 [5780]
stampKind: i64
value: long[5780|0x1694]
=== Inputs ===
=== Succesors ===
=== Usages ===
j667 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i672 <|@
result int[-145939|0xfffffffffffdc5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
rawvalue: -145939
stableDimension: 0
stamp: i32 [-145939]
stampKind: i32
value: int[-145939|0xfffffffffffdc5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i666 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v663 
=== Predecessor ===
v572 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-145939|0xfffffffffffdc5ed], long[5780|0x1694]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i666 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i32 [-160531 - -145939] bits:1...1011x00x10x11101101
valueDescription: i32
=== Inputs ===
merge: v663 
values: i672 i675 
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v663 values: i672 i675  <|@  <|@
f <@~|@floating>@ <|@
tid j667 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: i64 [5780 - 8340] bits:0...0xx0xx010010100
valueDescription: i64
=== Inputs ===
merge: v663 
values: j673 j676 
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v663 values: j673 j676  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v671 v674 
=== Succesors ===
next: v668 
=== Usages ===
i666 j667 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v671 v674 #next: v668  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
stateBefore: ?83 
actionAndReason: i666 
speculation: j667 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v663 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?83 actionAndReason: i666 speculation: j667  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:363) [bci: 4]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v660 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid j662 <|@
result long[5140|0x1414] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: 5140
stableDimension: 0
stamp: i64 [5140]
stampKind: i64
value: long[5140|0x1414]
=== Inputs ===
=== Succesors ===
=== Usages ===
j642 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i661 <|@
result int[-140819|0xfffffffffffdd9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
rawvalue: -140819
stableDimension: 0
stamp: i32 [-140819]
stampKind: i32
value: int[-140819|0xfffffffffffdd9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v552 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-140819|0xfffffffffffdd9ed], long[5140|0x1414]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i641 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: i32 [-140819 - -136723] bits:1...10111xxxx0111101101
valueDescription: i32
=== Inputs ===
merge: v637 
values: i647 i650 i653 i656 i661 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v637 values: i647 i650 i653 i656 i661  <|@  <|@
f <@~|@floating>@ <|@
tid j642 <|@
result v90|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: i64 [1300 - 5140] bits:0...0xx1xxx0010100
valueDescription: i64
=== Inputs ===
merge: v637 
values: j648 j651 j654 j657 j662 
=== Succesors ===
=== Usages ===
v643 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v637 values: j648 j651 j654 j657 j662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v646 v649 v652 v655 v660 
=== Succesors ===
next: v643 
=== Usages ===
i641 j642 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v646 v649 v652 v655 v660 #next: v643  <|@  <|@
f <@*|@fixed>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:85) [bci: 7]
at java.nio.CharBuffer.wrap(CharBuffer.java:436) [bci: 8]
at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 3]
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i641 
speculation: j642 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v637 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i641 speculation: j642  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD, v90|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v10|SINGLE = MOVSS input: [v9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP x: v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v10|SINGLE {tmp: v14|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = IMUL (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v15|DWORD, ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v6|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 48], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 32], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 28], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v33|DWORD = MOV input: [v32|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v35|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVSXB input: [v34|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOV input: [v34|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v34|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV input: [v34|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV input: [v29|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v29|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v29|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v35|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOV input: [v29|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v41|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD value: v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = SHL value: v52|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[*] = ADD (x: v54|QWORD, y: v47|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = ADD (x: v37|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVSXD value: v56|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA address: [v57|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = ADD (x: v58|QWORD, y: v49|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = ADD (x: v39|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SUB (x: v60|DWORD, ~y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = ADD (x: v42|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SUB (x: v62|DWORD, ~y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = CMOVE (falseValue: v63|DWORD, ~trueValue: v61|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v59|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = ADD (x: v65|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = ADD (x: v51|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v67|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = SUB (x: v67|DWORD, ~y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v42|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v69|DWORD, y: [v29|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = UNCOMPRESSPOINTER (input: v40|DWORD, ~baseRegister: v73|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v74|QWORD, y: v72|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = SUB (x: v66|DWORD, ~y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v75|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v75|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 24], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v76|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v78|DWORD = MOV input: [v77|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:8|DWORD = MOVE input: v66|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction out:16|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|QWORD[.]] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = SUB (x: v79|DWORD, ~y: [v29|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v80|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = CMOVE (falseValue: v80|DWORD, ~trueValue: v82|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v81|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v16|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v17|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-138771|0xfffffffffffde1ed], long[3220|0xc94]] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[4500|0x1194]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-147987|0xfffffffffffdbded], long[10900|0x2a94]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-156179|0xfffffffffffd9ded], long[4500|0x1194]] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155155|0xfffffffffffda1ed], long[3860|0xf14]] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154131|0xfffffffffffda5ed], long[3220|0xc94]] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-152083|0xfffffffffffdaded], long[3860|0xf14]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76083|0xfffffffffffed6cd], long[17300|0x4394]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|DWORD, v84|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v29|QWORD[.] v69|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v29|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v29|QWORD[.] v69|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v45|QWORD[.] v66|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-160531|0xfffffffffffd8ced], long[8340|0x2094]] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-136723|0xfffffffffffde9ed], long[1300|0x514]] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v77|QWORD[.] 
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-140819|0xfffffffffffdd9ed], long[5140|0x1414]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-139795|0xfffffffffffddded], long[3860|0xf14]] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-151059|0xfffffffffffdb1ed], long[3220|0xc94]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|DWORD, v71|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v65|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] v46|QWORD[.] v51|DWORD v62|DWORD v48|QWORD[.] v56|DWORD v60|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-145939|0xfffffffffffdc5ed], long[5780|0x1694]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-150035|0xfffffffffffdb5ed], long[11540|0x2d14]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-137747|0xfffffffffffde5ed], long[1940|0x794]] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD, v90|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v10|SINGLE = MOVSS input: [v9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP x: v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v10|SINGLE {tmp: v14|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = IMUL (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v15|DWORD, ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v6|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 48], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 32], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 28], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v33|DWORD = MOV input: [v32|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v35|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVSXB input: [v34|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOV input: [v34|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v34|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV input: [v34|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV input: [v29|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v29|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v29|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v35|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOV input: [v29|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v41|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD value: v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = SHL value: v52|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[*] = ADD (x: v54|QWORD, y: v47|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = ADD (x: v37|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVSXD value: v56|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA address: [v57|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = ADD (x: v58|QWORD, y: v49|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = ADD (x: v39|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SUB (x: v60|DWORD, ~y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = ADD (x: v42|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SUB (x: v62|DWORD, ~y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = CMOVE (falseValue: v63|DWORD, ~trueValue: v61|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v59|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = ADD (x: v65|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = ADD (x: v51|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v67|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = SUB (x: v67|DWORD, ~y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v42|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v69|DWORD, y: [v29|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = UNCOMPRESSPOINTER (input: v40|DWORD, ~baseRegister: v73|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v74|QWORD, y: v72|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = SUB (x: v66|DWORD, ~y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v75|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v75|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 24], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v76|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v78|DWORD = MOV input: [v77|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:8|DWORD = MOVE input: v66|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction out:16|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|QWORD[.]] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = SUB (x: v79|DWORD, ~y: [v29|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v80|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = CMOVE (falseValue: v80|DWORD, ~trueValue: v82|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v81|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v16|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v17|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-138771|0xfffffffffffde1ed], long[3220|0xc94]] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[4500|0x1194]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-147987|0xfffffffffffdbded], long[10900|0x2a94]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-156179|0xfffffffffffd9ded], long[4500|0x1194]] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155155|0xfffffffffffda1ed], long[3860|0xf14]] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154131|0xfffffffffffda5ed], long[3220|0xc94]] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-152083|0xfffffffffffdaded], long[3860|0xf14]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76083|0xfffffffffffed6cd], long[17300|0x4394]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|DWORD, v84|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v29|QWORD[.] v69|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v29|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v29|QWORD[.] v69|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v45|QWORD[.] v66|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-160531|0xfffffffffffd8ced], long[8340|0x2094]] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-136723|0xfffffffffffde9ed], long[1300|0x514]] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v77|QWORD[.] 
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-140819|0xfffffffffffdd9ed], long[5140|0x1414]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-139795|0xfffffffffffddded], long[3860|0xf14]] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-151059|0xfffffffffffdb1ed], long[3220|0xc94]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|DWORD, v71|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v65|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] v46|QWORD[.] v51|DWORD v62|DWORD v48|QWORD[.] v56|DWORD v60|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-145939|0xfffffffffffdc5ed], long[5780|0x1694]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-150035|0xfffffffffffdb5ed], long[11540|0x2d14]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-137747|0xfffffffffffde5ed], long[1940|0x794]] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD, v90|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v10|SINGLE = MOVSS input: [v9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP x: v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v10|SINGLE {tmp: v14|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = IMUL (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v15|DWORD, ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v6|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 48], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 32], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 28], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v33|DWORD = MOV input: [v32|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v35|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVSXB input: [v34|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOV input: [v34|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v34|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV input: [v34|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV input: [v29|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v29|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v29|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v35|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOV input: [v29|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v41|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD value: v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = SHL value: v52|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[*] = ADD (x: v54|QWORD, y: v47|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = ADD (x: v37|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVSXD value: v56|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA address: [v57|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = ADD (x: v58|QWORD, y: v49|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = ADD (x: v39|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SUB (x: v60|DWORD, ~y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = ADD (x: v42|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SUB (x: v62|DWORD, ~y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = CMOVE (falseValue: v63|DWORD, ~trueValue: v61|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v59|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = ADD (x: v65|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = ADD (x: v51|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v67|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = SUB (x: v67|DWORD, ~y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v42|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v69|DWORD, y: [v29|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = UNCOMPRESSPOINTER (input: v40|DWORD, ~baseRegister: v73|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v74|QWORD, y: v72|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = SUB (x: v66|DWORD, ~y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v75|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v75|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 24], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v76|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v78|DWORD = MOV input: [v77|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:8|DWORD = MOVE input: v66|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction out:16|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|QWORD[.]] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = SUB (x: v79|DWORD, ~y: [v29|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v80|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = CMOVE (falseValue: v80|DWORD, ~trueValue: v82|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v81|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v16|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v17|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-138771|0xfffffffffffde1ed], long[3220|0xc94]] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[4500|0x1194]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-147987|0xfffffffffffdbded], long[10900|0x2a94]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-156179|0xfffffffffffd9ded], long[4500|0x1194]] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155155|0xfffffffffffda1ed], long[3860|0xf14]] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154131|0xfffffffffffda5ed], long[3220|0xc94]] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-152083|0xfffffffffffdaded], long[3860|0xf14]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76083|0xfffffffffffed6cd], long[17300|0x4394]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|DWORD, v84|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v29|QWORD[.] v69|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v29|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v29|QWORD[.] v69|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v45|QWORD[.] v66|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-160531|0xfffffffffffd8ced], long[8340|0x2094]] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-136723|0xfffffffffffde9ed], long[1300|0x514]] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v77|QWORD[.] 
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-140819|0xfffffffffffdd9ed], long[5140|0x1414]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-139795|0xfffffffffffddded], long[3860|0xf14]] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-151059|0xfffffffffffdb1ed], long[3220|0xc94]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|DWORD, v71|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v65|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] v46|QWORD[.] v51|DWORD v62|DWORD v48|QWORD[.] v56|DWORD v60|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-145939|0xfffffffffffdc5ed], long[5780|0x1694]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-150035|0xfffffffffffdb5ed], long[11540|0x2d14]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-137747|0xfffffffffffde5ed], long[1940|0x794]] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD, v90|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v10|SINGLE = MOVSS input: [v9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP x: v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v10|SINGLE {tmp: v14|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = IMUL (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v15|DWORD, ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v6|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 48], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 32], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 28], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v33|DWORD = MOV input: [v32|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v35|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVSXB input: [v34|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOV input: [v34|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v34|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV input: [v34|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV input: [v29|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v29|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v29|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v35|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOV input: [v29|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v41|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD value: v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = SHL value: v52|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[*] = ADD (x: v54|QWORD, y: v47|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = ADD (x: v37|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVSXD value: v56|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA address: [v57|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = ADD (x: v58|QWORD, y: v49|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = ADD (x: v39|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SUB (x: v60|DWORD, ~y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = ADD (x: v42|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SUB (x: v62|DWORD, ~y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = CMOVE (falseValue: v63|DWORD, ~trueValue: v61|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v59|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = ADD (x: v65|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = ADD (x: v51|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v67|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = SUB (x: v67|DWORD, ~y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v42|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v69|DWORD, y: [v29|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = UNCOMPRESSPOINTER (input: v40|DWORD, ~baseRegister: v73|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v74|QWORD, y: v72|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = SUB (x: v66|DWORD, ~y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v75|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v75|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 24], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v76|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v78|DWORD = MOV input: [v77|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:8|DWORD = MOVE input: v66|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction out:16|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|QWORD[.]] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = SUB (x: v79|DWORD, ~y: [v29|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v80|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = CMOVE (falseValue: v80|DWORD, ~trueValue: v82|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v81|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v16|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v17|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-138771|0xfffffffffffde1ed], long[3220|0xc94]] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[4500|0x1194]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-147987|0xfffffffffffdbded], long[10900|0x2a94]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-156179|0xfffffffffffd9ded], long[4500|0x1194]] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155155|0xfffffffffffda1ed], long[3860|0xf14]] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154131|0xfffffffffffda5ed], long[3220|0xc94]] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-152083|0xfffffffffffdaded], long[3860|0xf14]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76083|0xfffffffffffed6cd], long[17300|0x4394]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|DWORD, v84|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v29|QWORD[.] v69|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v29|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v29|QWORD[.] v69|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v45|QWORD[.] v66|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-160531|0xfffffffffffd8ced], long[8340|0x2094]] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-136723|0xfffffffffffde9ed], long[1300|0x514]] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v77|QWORD[.] 
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-140819|0xfffffffffffdd9ed], long[5140|0x1414]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-139795|0xfffffffffffddded], long[3860|0xf14]] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-151059|0xfffffffffffdb1ed], long[3220|0xc94]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|DWORD, v71|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v65|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] v46|QWORD[.] v51|DWORD v62|DWORD v48|QWORD[.] v56|DWORD v60|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-145939|0xfffffffffffdc5ed], long[5780|0x1694]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-150035|0xfffffffffffdb5ed], long[11540|0x2d14]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-137747|0xfffffffffffde5ed], long[1940|0x794]] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD, v90|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v10|SINGLE = MOVSS input: [v9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP x: v3|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v10|SINGLE {tmp: v14|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = IMUL (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v15|DWORD, ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v6|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v23|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 48], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 32], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 28], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v29|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v33|DWORD = MOV input: [v32|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v35|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVSXB input: [v34|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOV input: [v34|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV input: [v34|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV input: [v34|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = MOV input: [v29|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v29|QWORD[.] + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v29|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v35|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = MOV input: [v29|QWORD[.] + 40] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v51|DWORD = ADD (x: v41|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOVSXD value: v51|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = SHL value: v52|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[*] = ADD (x: v54|QWORD, y: v47|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = ADD (x: v37|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVSXD value: v56|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA address: [v57|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[*] = ADD (x: v58|QWORD, y: v49|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = ADD (x: v39|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = SUB (x: v60|DWORD, ~y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|DWORD = ADD (x: v42|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = SUB (x: v62|DWORD, ~y: v51|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = CMOVE (falseValue: v63|DWORD, ~trueValue: v61|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v59|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = ADD (x: v65|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = ADD (x: v51|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v67|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = SUB (x: v67|DWORD, ~y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v42|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v69|DWORD, y: [v29|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = UNCOMPRESSPOINTER (input: v40|DWORD, ~baseRegister: v73|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v74|QWORD, y: v72|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = SUB (x: v66|DWORD, ~y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v75|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v75|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 24], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v76|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v78|DWORD = MOV input: [v77|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:0|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction out:8|DWORD = MOVE input: v66|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction out:16|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|QWORD[.]] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = SUB (x: v79|DWORD, ~y: [v29|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v80|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = CMOVE (falseValue: v80|DWORD, ~trueValue: v82|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v81|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v16|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v17|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-138771|0xfffffffffffde1ed], long[3220|0xc94]] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[4500|0x1194]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-147987|0xfffffffffffdbded], long[10900|0x2a94]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-156179|0xfffffffffffd9ded], long[4500|0x1194]] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-155155|0xfffffffffffda1ed], long[3860|0xf14]] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-154131|0xfffffffffffda5ed], long[3220|0xc94]] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-152083|0xfffffffffffdaded], long[3860|0xf14]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-76083|0xfffffffffffed6cd], long[17300|0x4394]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|DWORD, v84|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v29|QWORD[.] v69|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v29|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v29|QWORD[.] v69|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v45|QWORD[.] v66|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-160531|0xfffffffffffd8ced], long[8340|0x2094]] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-136723|0xfffffffffffde9ed], long[1300|0x514]] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v77|QWORD[.] 
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-140819|0xfffffffffffdd9ed], long[5140|0x1414]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-139795|0xfffffffffffddded], long[3860|0xf14]] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-151059|0xfffffffffffdb1ed], long[3220|0xc94]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|DWORD, v71|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v70|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v65|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] v46|QWORD[.] v51|DWORD v62|DWORD v48|QWORD[.] v56|DWORD v60|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-145939|0xfffffffffffdc5ed], long[5780|0x1694]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-150035|0xfffffffffffdb5ed], long[11540|0x2d14]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-137747|0xfffffffffffde5ed], long[1940|0x794]] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v89|DWORD, v90|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v89|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v90|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v7|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction v9|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v10|SINGLE = MOVSS input: [v9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr  148  <|@ instruction CMP x: v3|DWORD y: 1 size: DWORD <|@ <|@
      nr  150  <|@ instruction v12|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  152  <|@ instruction v11|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr  154  <|@ instruction v13|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v10|SINGLE {tmp: v14|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  156  <|@ instruction v15|DWORD = IMUL (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction CMP (x: v15|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction v16|DWORD = CMOVE (falseValue: v15|DWORD, ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v6|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  204  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + 312] instr: 0 <|@ <|@
      nr  242  <|@ instruction MOV x: [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr  244  <|@ instruction MOV x: [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  246  <|@ instruction MOV x: [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  248  <|@ instruction MOV x: [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV x: [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  252  <|@ instruction MOV x: [v23|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  254  <|@ instruction MOV x: [v23|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV x: [v23|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  258  <|@ instruction v28|QWORD[.] = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction MOV (x: [v29|QWORD[.] + 48], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [v29|QWORD[.] + 32], y: v4|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV (x: [v29|QWORD[.] + 28], y: v7|DWORD) size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [v29|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [v29|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction v31|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v33|DWORD = MOV input: [v32|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr  340  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  342  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v35|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr  344  <|@ instruction v36|DWORD = MOVSXB input: [v34|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  346  <|@ instruction v37|DWORD = MOV input: [v34|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  348  <|@ instruction v38|DWORD = MOV input: [v34|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  350  <|@ instruction v39|DWORD = MOV input: [v34|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  352  <|@ instruction v40|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  354  <|@ instruction v41|DWORD = MOV input: [v29|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  356  <|@ instruction v42|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: v42|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction MOV x: [v32|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  408  <|@ instruction v43|DWORD[_] = MOV input: [v29|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  410  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  412  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  416  <|@ instruction CMPCONSTBRANCH x: [v29|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v35|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  432  <|@ instruction TESTBYTEBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  514  <|@ instruction v47|QWORD[*] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction v49|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction v50|DWORD = MOV input: [v29|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  522  <|@ instruction v51|DWORD = ADD (x: v41|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction v52|QWORD = MOVSXD value: v51|DWORD size: QWORD <|@ <|@
      nr  526  <|@ instruction v53|QWORD = SHL value: v52|QWORD size: QWORD <|@ <|@
      nr  528  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr  530  <|@ instruction v55|QWORD[*] = ADD (x: v54|QWORD, y: v47|QWORD[*]) size: QWORD <|@ <|@
      nr  532  <|@ instruction v56|DWORD = ADD (x: v37|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction v57|QWORD = MOVSXD value: v56|DWORD size: QWORD <|@ <|@
      nr  536  <|@ instruction v58|QWORD = LEA address: [v57|QWORD + 16] size: QWORD <|@ <|@
      nr  538  <|@ instruction v59|QWORD[*] = ADD (x: v58|QWORD, y: v49|QWORD[*]) size: QWORD <|@ <|@
      nr  540  <|@ instruction v60|DWORD = ADD (x: v39|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction v61|DWORD = SUB (x: v60|DWORD, ~y: v56|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction v62|DWORD = ADD (x: v42|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr  546  <|@ instruction v63|DWORD = SUB (x: v62|DWORD, ~y: v51|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction CMP (x: v63|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction v64|DWORD = CMOVE (falseValue: v63|DWORD, ~trueValue: v61|DWORD) condition: > <|@ <|@
      nr  552  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD[*] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rdx|QWORD = MOVE input: v59|QWORD[*] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rcx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  560  <|@ instruction v65|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  562  <|@ instruction v66|DWORD = ADD (x: v65|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction v67|DWORD = ADD (x: v51|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr  566  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v67|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction v69|DWORD = SUB (x: v67|DWORD, ~y: v50|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v42|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: v69|DWORD, y: [v29|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v69|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction v73|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  632  <|@ instruction v72|QWORD = UNCOMPRESSPOINTER (input: v40|DWORD, ~baseRegister: v73|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  634  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: v74|QWORD, y: v72|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction v75|DWORD = SUB (x: v66|DWORD, ~y: v38|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction TESTBRANCH (x: v75|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: v75|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 24], y: v75|DWORD) size: DWORD <|@ <|@
      nr  692  <|@ instruction v76|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [v76|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  696  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v78|DWORD = MOV input: [v77|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction rsi|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rcx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction r8|DWORD = MOVE input: v67|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction r9|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction rdi|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction out:0|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction out:8|DWORD = MOVE input: v66|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction out:16|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr  866  <|@ instruction v68|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [v68|QWORD[.]] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction v79|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  892  <|@ instruction v80|DWORD = SUB (x: v79|DWORD, ~y: [v29|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  894  <|@ instruction CMP x: v80|DWORD y: 1 size: DWORD <|@ <|@
      nr  896  <|@ instruction v82|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  898  <|@ instruction v81|DWORD = CMOVE (falseValue: v80|DWORD, ~trueValue: v82|DWORD) condition: < <|@ <|@
      nr  900  <|@ instruction CMPCONSTBRANCH x: v81|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  942  <|@ instruction rsi|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr  946  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v16|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr 1088  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr 1090  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr 1092  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1094  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr 1096  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr 1098  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr 1100  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v17|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction JUMP ~outgoingValues: [int[-138771|0xfffffffffffde1ed], long[3220|0xc94]] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[4500|0x1194]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [int[-147987|0xfffffffffffdbded], long[10900|0x2a94]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction JUMP ~outgoingValues: [int[-156179|0xfffffffffffd9ded], long[4500|0x1194]] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [int[-155155|0xfffffffffffda1ed], long[3860|0xf14]] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [int[-154131|0xfffffffffffda5ed], long[3220|0xc94]] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [int[-152083|0xfffffffffffdaded], long[3860|0xf14]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [int[-76083|0xfffffffffffed6cd], long[17300|0x4394]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1206  <|@ instruction [v83|DWORD, v84|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v83|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v84|QWORD) size: QWORD <|@ <|@
      nr 1226  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v29|QWORD[.] v69|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v29|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v29|QWORD[.] v69|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v45|QWORD[.] v66|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction JUMP ~outgoingValues: [int[-160531|0xfffffffffffd8ced], long[8340|0x2094]] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction JUMP ~outgoingValues: [int[-136723|0xfffffffffffde9ed], long[1300|0x514]] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1266  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr 1268  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v77|QWORD[.] 
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction JUMP ~outgoingValues: [int[-140819|0xfffffffffffdd9ed], long[5140|0x1414]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [int[-139795|0xfffffffffffddded], long[3860|0xf14]] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction JUMP ~outgoingValues: [int[-151059|0xfffffffffffdb1ed], long[3220|0xc94]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1300  <|@ instruction [v70|DWORD, v71|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v70|DWORD) size: DWORD <|@ <|@
      nr 1318  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v71|QWORD) size: QWORD <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v65|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] v46|QWORD[.] v51|DWORD v62|DWORD v48|QWORD[.] v56|DWORD v60|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction JUMP ~outgoingValues: [int[-145939|0xfffffffffffdc5ed], long[5780|0x1694]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1332  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr 1350  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr 1352  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1374  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [int[-150035|0xfffffffffffdb5ed], long[11540|0x2d14]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1386  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr 1404  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr 1406  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction JUMP ~outgoingValues: [int[-137747|0xfffffffffffde5ed], long[1940|0x794]] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1418  <|@ instruction [v89|DWORD, v90|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v89|DWORD) size: DWORD <|@ <|@
      nr 1436  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v90|QWORD) size: QWORD <|@ <|@
      nr 1438  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v7|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction v9|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v10|SINGLE = MOVSS input: [v9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr  148  <|@ instruction CMP x: v3|DWORD y: 1 size: DWORD <|@ <|@
      nr  150  <|@ instruction v12|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  152  <|@ instruction v11|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr  154  <|@ instruction v13|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v10|SINGLE {tmp: v14|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  156  <|@ instruction v15|DWORD = IMUL (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction CMP (x: v15|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction v16|DWORD = CMOVE (falseValue: v15|DWORD, ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v6|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  204  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + 312] instr: 0 <|@ <|@
      nr  242  <|@ instruction MOV x: [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr  244  <|@ instruction MOV x: [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  246  <|@ instruction MOV x: [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  248  <|@ instruction MOV x: [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV x: [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  252  <|@ instruction MOV x: [v23|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  254  <|@ instruction MOV x: [v23|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV x: [v23|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  258  <|@ instruction v28|QWORD[.] = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction MOV (x: [v29|QWORD[.] + 48], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [v29|QWORD[.] + 32], y: v4|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV (x: [v29|QWORD[.] + 28], y: v7|DWORD) size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [v29|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [v29|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction v31|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v33|DWORD = MOV input: [v32|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr  340  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  342  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v35|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr  344  <|@ instruction v36|DWORD = MOVSXB input: [v34|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  346  <|@ instruction v37|DWORD = MOV input: [v34|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  348  <|@ instruction v38|DWORD = MOV input: [v34|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  350  <|@ instruction v39|DWORD = MOV input: [v34|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  352  <|@ instruction v40|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  354  <|@ instruction v41|DWORD = MOV input: [v29|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  356  <|@ instruction v42|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: v42|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction MOV x: [v32|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  408  <|@ instruction v43|DWORD[_] = MOV input: [v29|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  410  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  412  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  416  <|@ instruction CMPCONSTBRANCH x: [v29|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v35|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  432  <|@ instruction TESTBYTEBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  514  <|@ instruction v47|QWORD[*] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction v49|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction v50|DWORD = MOV input: [v29|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  522  <|@ instruction v51|DWORD = ADD (x: v41|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction v52|QWORD = MOVSXD value: v51|DWORD size: QWORD <|@ <|@
      nr  526  <|@ instruction v53|QWORD = SHL value: v52|QWORD size: QWORD <|@ <|@
      nr  528  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr  530  <|@ instruction v55|QWORD[*] = ADD (x: v54|QWORD, y: v47|QWORD[*]) size: QWORD <|@ <|@
      nr  532  <|@ instruction v56|DWORD = ADD (x: v37|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction v57|QWORD = MOVSXD value: v56|DWORD size: QWORD <|@ <|@
      nr  536  <|@ instruction v58|QWORD = LEA address: [v57|QWORD + 16] size: QWORD <|@ <|@
      nr  538  <|@ instruction v59|QWORD[*] = ADD (x: v58|QWORD, y: v49|QWORD[*]) size: QWORD <|@ <|@
      nr  540  <|@ instruction v60|DWORD = ADD (x: v39|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction v61|DWORD = SUB (x: v60|DWORD, ~y: v56|DWORD) size: DWORD <|@ <|@
      nr  544  <|@ instruction v62|DWORD = ADD (x: v42|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr  546  <|@ instruction v63|DWORD = SUB (x: v62|DWORD, ~y: v51|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction CMP (x: v63|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction v64|DWORD = CMOVE (falseValue: v63|DWORD, ~trueValue: v61|DWORD) condition: > <|@ <|@
      nr  552  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD[*] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rdx|QWORD = MOVE input: v59|QWORD[*] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rcx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  560  <|@ instruction v65|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  562  <|@ instruction v66|DWORD = ADD (x: v65|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction v67|DWORD = ADD (x: v51|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr  566  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v67|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction v69|DWORD = SUB (x: v67|DWORD, ~y: v50|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v42|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: v69|DWORD, y: [v29|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v69|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction v73|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  632  <|@ instruction v72|QWORD = UNCOMPRESSPOINTER (input: v40|DWORD, ~baseRegister: v73|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  634  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: v74|QWORD, y: v72|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction v75|DWORD = SUB (x: v66|DWORD, ~y: v38|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction TESTBRANCH (x: v75|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: v75|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 24], y: v75|DWORD) size: DWORD <|@ <|@
      nr  692  <|@ instruction v76|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [v76|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  696  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v78|DWORD = MOV input: [v77|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction rsi|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rcx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction r8|DWORD = MOVE input: v67|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction r9|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction rdi|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction out:0|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction out:8|DWORD = MOVE input: v66|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction out:16|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr  866  <|@ instruction v68|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [v68|QWORD[.]] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction v79|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  892  <|@ instruction v80|DWORD = SUB (x: v79|DWORD, ~y: [v29|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  894  <|@ instruction CMP x: v80|DWORD y: 1 size: DWORD <|@ <|@
      nr  896  <|@ instruction v82|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  898  <|@ instruction v81|DWORD = CMOVE (falseValue: v80|DWORD, ~trueValue: v82|DWORD) condition: < <|@ <|@
      nr  900  <|@ instruction CMPCONSTBRANCH x: v81|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  942  <|@ instruction rsi|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr  946  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v16|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr 1088  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr 1090  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr 1092  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1094  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr 1096  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr 1098  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr 1100  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v17|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction JUMP ~outgoingValues: [int[-138771|0xfffffffffffde1ed], long[3220|0xc94]] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[4500|0x1194]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [int[-147987|0xfffffffffffdbded], long[10900|0x2a94]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction JUMP ~outgoingValues: [int[-156179|0xfffffffffffd9ded], long[4500|0x1194]] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [int[-155155|0xfffffffffffda1ed], long[3860|0xf14]] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [int[-154131|0xfffffffffffda5ed], long[3220|0xc94]] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [int[-152083|0xfffffffffffdaded], long[3860|0xf14]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [int[-76083|0xfffffffffffed6cd], long[17300|0x4394]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1206  <|@ instruction [v83|DWORD, v84|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v83|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v84|QWORD) size: QWORD <|@ <|@
      nr 1226  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v29|QWORD[.] v69|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v29|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v29|QWORD[.] v69|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v45|QWORD[.] v66|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction JUMP ~outgoingValues: [int[-160531|0xfffffffffffd8ced], long[8340|0x2094]] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction JUMP ~outgoingValues: [int[-136723|0xfffffffffffde9ed], long[1300|0x514]] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1266  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr 1268  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v77|QWORD[.] 
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction JUMP ~outgoingValues: [int[-140819|0xfffffffffffdd9ed], long[5140|0x1414]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [int[-139795|0xfffffffffffddded], long[3860|0xf14]] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction JUMP ~outgoingValues: [int[-151059|0xfffffffffffdb1ed], long[3220|0xc94]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1300  <|@ instruction [v70|DWORD, v71|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v70|DWORD) size: DWORD <|@ <|@
      nr 1318  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v71|QWORD) size: QWORD <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v65|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] v46|QWORD[.] v51|DWORD v62|DWORD v48|QWORD[.] v56|DWORD v60|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction JUMP ~outgoingValues: [int[-145939|0xfffffffffffdc5ed], long[5780|0x1694]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1332  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr 1350  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr 1352  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1374  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [int[-150035|0xfffffffffffdb5ed], long[11540|0x2d14]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1386  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr 1404  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr 1406  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction JUMP ~outgoingValues: [int[-137747|0xfffffffffffde5ed], long[1940|0x794]] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1418  <|@ instruction [v89|DWORD, v90|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v89|DWORD) size: DWORD <|@ <|@
      nr 1436  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v90|QWORD) size: QWORD <|@ <|@
      nr 1438  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[558, 560[[764, 765[[864, 866[[944, 946[[1086, 1087[[1090, 1092[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v64|d [0, 38[[154, 155[[556, 558[[764, 765[[850, 865[[1086, 1087[[1090, 1091[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v59|q [0, 36[[554, 558[[764, 765[[848, 865[[1086, 1087[[1090, 1091[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 30[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v55|q [0, 34[[552, 558[[762, 765[[846, 865[[942, 944[[1084, 1087[[1088, 1091[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v45|q [0, 1[[764, 765[[856, 865[[1086, 1087[[1090, 1091[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- v67|d [0, 40[[558, 559[[764, 765[[852, 865[[1086, 1087[[1090, 1091[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- v62|d [0, 1[[558, 559[[764, 765[[854, 865[[1086, 1087[[1090, 1091[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [34, 902[[920, 1145[[1146, 1227[[1228, 1269[[1270, 1321[[1322, 1353[[1354, 1375[[1376, 1407[[1408, 1439[34 MustHaveRegister 44 MustHaveRegister 98 MustHaveRegister 112 MustHaveRegister 144 MustHaveRegister 336 MustHaveRegister 340 MustHaveRegister 762 ShouldHaveRegister 767 LiveAtLoopEnd 1084 ShouldHaveRegister 1094 MustHaveRegister 1098 MustHaveRegister 1100 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [36, 286[[920, 1114[[1238, 1248[[1270, 1290[[1408, 1439[36 MustHaveRegister 42 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|- [38, 294[[920, 1114[[1238, 1248[[1270, 1290[[1408, 1439[38 MustHaveRegister 48 ShouldHaveRegister 74 MustHaveRegister 86 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d r8|- [40, 152[[1104, 1114[[1238, 1248[[1270, 1290[[1408, 1439[40 MustHaveRegister 48 ShouldHaveRegister 148 ShouldHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [42, 290[[920, 1104[42 MustHaveRegister 50 ShouldHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [46, 162[46 MustHaveRegister 114 ShouldHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d v2|d [48, 292[[920, 1104[48 MustHaveRegister 50 MustHaveRegister 62 MustHaveRegister 74 ShouldHaveRegister 292 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [112, 161[112 MustHaveRegister 114 MustHaveRegister 158 ShouldHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [144, 146[144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v10|S SINGLE "[v10|S]" v10|S -1 [146, 154[146 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v3|d [152, 156[152 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [150, 153[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d v10|S [154, 156[154 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [154, 155[154 MustHaveRegister  "NoDefinitionFound"
  v15|d DWORD "[v15|d]" v15|d v11|d [156, 160[156 MustHaveRegister 158 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d v15|d [160, 164[[952, 1088[160 MustHaveRegister 162 MustHaveRegister 1088 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q rax|q [1092, 1101[1092 MustHaveRegister 1096 MustHaveRegister 1100 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [1094, 1095[1094 MustHaveRegister  "NoDefinitionFound"
  v19|q QWORD "[v19|q]" v19|q -1 [1094, 1095[1094 MustHaveRegister  "NoDefinitionFound"
  v20|d DWORD "[v20|d]" v20|d v17|q [1096, 1098[1096 MustHaveRegister 1098 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q -1 [1100, 1101[1100 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[v22|q]" v22|q -1 [1100, 1101[1100 MustHaveRegister  "NoDefinitionFound"
  v23|q QWORD "[v23|q]" v23|q -1 [202, 258[202 MustHaveRegister 204 MustHaveRegister 240 MustHaveRegister 242 MustHaveRegister 244 MustHaveRegister 246 MustHaveRegister 248 MustHaveRegister 250 MustHaveRegister 252 MustHaveRegister 254 MustHaveRegister 256 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q -1 [204, 238[204 MustHaveRegister 206 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q -1 [940, 942[940 MustHaveRegister 942 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q rax|q [946, 951[946 MustHaveRegister 948 MustHaveRegister 950 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q v23|q [258, 261[258 MustHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v28|q [262, 902[[1114, 1145[[1146, 1227[[1228, 1238[[1248, 1269[[1290, 1321[[1322, 1353[[1354, 1375[[1376, 1407[288 MustHaveRegister 290 MustHaveRegister 292 MustHaveRegister 294 MustHaveRegister 296 MustHaveRegister 298 MustHaveRegister 354 MustHaveRegister 356 MustHaveRegister 408 MustHaveRegister 416 MustHaveRegister 520 MustHaveRegister 606 MustHaveRegister 628 MustHaveRegister 767 LiveAtLoopEnd 848 ShouldHaveRegister 890 MustHaveRegister 892 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d v1|q [286, 288[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q -1 [300, 870[300 MustHaveRegister 692 ShouldHaveRegister 767 LiveAtLoopEnd  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d -1 [336, 410[[768, 790[336 MustHaveRegister 338 MustHaveRegister 406 MustHaveRegister 410 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d -1 [338, 372[[768, 778[338 MustHaveRegister 370 ShouldHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [340, 690[[768, 790[340 MustHaveRegister 342 MustHaveRegister 344 MustHaveRegister 346 MustHaveRegister 348 MustHaveRegister 350 MustHaveRegister 352 MustHaveRegister 412 MustHaveRegister 676 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d -1 [342, 516[[768, 790[342 MustHaveRegister 430 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d -1 [344, 432[[768, 790[344 MustHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d -1 [346, 532[[768, 790[346 MustHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d -1 [348, 651[[768, 790[348 MustHaveRegister 532 ShouldHaveRegister 540 ShouldHaveRegister 650 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d -1 [350, 652[[768, 790[350 MustHaveRegister 540 ShouldHaveRegister 652 ShouldHaveRegister  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d -1 [352, 632[[768, 790[352 MustHaveRegister 632 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d -1 [354, 522[[768, 790[354 MustHaveRegister 358 ShouldHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [356, 582[[768, 790[356 MustHaveRegister 358 MustHaveRegister 544 ShouldHaveRegister 582 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d -1 [408, 512[408 MustHaveRegister 414 MustHaveRegister 512 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v32|d [410, 712[[790, 802[[812, 870[[1114, 1124[[1146, 1227[[1290, 1321[[1354, 1375[[1376, 1407[410 MustHaveRegister 846 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q v34|d [412, 712[[790, 802[[812, 870[[1114, 1124[[1146, 1227[[1290, 1321[[1354, 1375[[1376, 1407[412 MustHaveRegister 856 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q v43|d [512, 608[[812, 850[[1114, 1124[[1186, 1196[[1290, 1321[512 MustHaveRegister 514 ShouldHaveRegister 850 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q v46|q [514, 530[514 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q v35|d [516, 608[[812, 858[[1114, 1124[[1186, 1196[[1290, 1321[516 MustHaveRegister 518 ShouldHaveRegister 858 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q v48|q [518, 538[518 MustHaveRegister 538 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d -1 [520, 581[520 MustHaveRegister 522 ShouldHaveRegister 544 ShouldHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d v41|d [522, 608[[1114, 1124[[1186, 1196[[1290, 1321[522 MustHaveRegister 524 ShouldHaveRegister 546 ShouldHaveRegister 564 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q -1 [524, 526[524 MustHaveRegister 526 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q v52|q [526, 528[526 MustHaveRegister 528 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q -1 [528, 530[528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q v54|q [530, 552[530 MustHaveRegister 552 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d v37|d [532, 608[[1114, 1124[[1186, 1196[[1290, 1321[532 MustHaveRegister 534 ShouldHaveRegister 542 ShouldHaveRegister 562 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q -1 [534, 536[534 MustHaveRegister 536 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q -1 [536, 538[536 MustHaveRegister 538 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q v58|q [538, 554[538 MustHaveRegister 554 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[v60|d]" v60|d v39|d [540, 608[[812, 862[[1114, 1124[[1186, 1196[[1290, 1321[540 MustHaveRegister 542 MustHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v61|d DWORD "[v61|d]" v61|d v60|d [542, 551[542 MustHaveRegister 548 ShouldHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[v62|d]" v62|d v42|d [544, 608[[812, 854[[1114, 1124[[1186, 1196[[1290, 1321[544 MustHaveRegister 546 MustHaveRegister 566 MustHaveRegister 854 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[v63|d]" v63|d v62|d [546, 550[546 MustHaveRegister 548 MustHaveRegister 550 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[v64|d]" v64|d v63|d [550, 556[550 MustHaveRegister 556 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[v65|d]" v65|d rax|q [560, 608[[1114, 1124[[1186, 1196[[1290, 1321[560 MustHaveRegister 562 ShouldHaveRegister 564 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[v66|d]" v66|d v65|d [562, 678[[812, 860[[1156, 1186[[1196, 1227[562 MustHaveRegister 650 MustHaveRegister 860 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[v67|d]" v67|d v51|d [564, 580[[812, 852[564 MustHaveRegister 566 ShouldHaveRegister 580 MustHaveRegister 852 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[v68|q]" v68|q rax|q [866, 869[866 MustHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[v69|d]" v69|d v67|d [580, 678[[1156, 1186[[1196, 1227[580 MustHaveRegister 582 MustHaveRegister 594 MustHaveRegister 606 MustHaveRegister 628 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[v70|d]" v70|d -1 [1300, 1316[1316 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[v71|q]" v71|q -1 [1300, 1318[1318 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[v72|q]" v72|q v40|d [632, 636[632 MustHaveRegister 636 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[v73|q]" v73|q -1 [630, 633[630 MustHaveRegister 632 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[v74|q]" v74|q -1 [634, 636[634 MustHaveRegister 636 MustHaveRegister  "NoSpillStore"
  v75|d DWORD "[v75|d]" v75|d v66|d [650, 690[650 MustHaveRegister 652 MustHaveRegister 664 MustHaveRegister 676 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[v76|q]" v76|q v31|q [692, 695[692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[v77|q]" v77|q v76|q [696, 746[[790, 812[[1248, 1269[[1354, 1375[708 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[v78|d]" v78|d -1 [708, 744[[790, 812[708 MustHaveRegister 710 MustHaveRegister 732 MustHaveRegister 744 ShouldHaveRegister 800 ShouldHaveRegister  "NoSpillStore"
  v79|d DWORD "[v79|d]" v79|d -1 [890, 892[890 MustHaveRegister 892 MustHaveRegister  "NoSpillStore"
  v80|d DWORD "[v80|d]" v80|d v79|d [892, 898[892 MustHaveRegister 894 ShouldHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v81|d DWORD "[v81|d]" v81|d v80|d [898, 900[898 MustHaveRegister 900 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[v82|d]" v82|d -1 [896, 899[896 MustHaveRegister 898 MustHaveRegister  "NoSpillStore"
  v83|d DWORD "[v83|d]" v83|d -1 [1206, 1222[1222 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[v84|q]" v84|q -1 [1206, 1224[1224 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[v85|d]" v85|d -1 [1386, 1402[1402 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[v86|q]" v86|q -1 [1386, 1404[1404 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[v87|d]" v87|d -1 [1332, 1348[1348 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[v88|q]" v88|q -1 [1332, 1350[1350 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[v89|d]" v89|d -1 [1418, 1434[1434 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[v90|q]" v90|q -1 [1418, 1436[1436 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[558, 560[[764, 765[[864, 866[[944, 946[[1086, 1087[[1090, 1092[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v64|d [0, 38[[154, 155[[556, 558[[764, 765[[850, 865[[1086, 1087[[1090, 1091[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v59|q [0, 36[[554, 558[[764, 765[[848, 865[[1086, 1087[[1090, 1091[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 30[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v55|q [0, 34[[552, 558[[762, 765[[846, 865[[942, 944[[1084, 1087[[1088, 1091[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v45|q [0, 1[[764, 765[[856, 865[[1086, 1087[[1090, 1091[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- v67|d [0, 40[[558, 559[[764, 765[[852, 865[[1086, 1087[[1090, 1091[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- v62|d [0, 1[[558, 559[[764, 765[[854, 865[[1086, 1087[[1090, 1091[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [34, 434[34 MustHaveRegister 44 MustHaveRegister 98 MustHaveRegister 112 MustHaveRegister 144 MustHaveRegister 336 MustHaveRegister 340 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [36, 286[[920, 952[36 MustHaveRegister 42 MustHaveRegister 286 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [38, 116[38 MustHaveRegister 48 ShouldHaveRegister 74 MustHaveRegister 86 MustHaveRegister  "OneSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [40, 152[[1104, 1114[[1238, 1248[[1270, 1290[[1408, 1439[40 MustHaveRegister 48 ShouldHaveRegister 148 ShouldHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [42, 290[[920, 952[42 MustHaveRegister 50 ShouldHaveRegister 290 MustHaveRegister  "OneSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d -1 [46, 162[46 MustHaveRegister 114 ShouldHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d v2|d [48, 292[[920, 952[48 MustHaveRegister 50 MustHaveRegister 62 MustHaveRegister 74 ShouldHaveRegister 292 MustHaveRegister  "OneSpillStore"
  v8|d DWORD "[rax|d]" v8|d -1 [112, 161[112 MustHaveRegister 114 MustHaveRegister 158 ShouldHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rbx|d]" v9|d -1 [144, 146[144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v10|S SINGLE "[xmm0|S]" v10|S -1 [146, 154[146 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r8|d]" v11|d v3|d [152, 156[152 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbx|d]" v12|d -1 [150, 153[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rdi|d]" v13|d v10|S [154, 156[154 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbp|d]" v14|d -1 [154, 155[154 MustHaveRegister  "NoDefinitionFound"
  v15|d DWORD "[r8|d]" v15|d v11|d [156, 160[156 MustHaveRegister 158 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[r8|d]" v16|d v15|d [160, 164[160 MustHaveRegister 162 MustHaveRegister  "OneSpillStore"
  v17|q QWORD "[rax|q]" v17|q rax|q [1092, 1101[1092 MustHaveRegister 1096 MustHaveRegister 1100 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[r10|q]" v18|q -1 [1094, 1095[1094 MustHaveRegister  "NoDefinitionFound"
  v19|q QWORD "[r11|q]" v19|q -1 [1094, 1095[1094 MustHaveRegister  "NoDefinitionFound"
  v20|d DWORD "[r10|d]" v20|d v17|q [1096, 1098[1096 MustHaveRegister 1098 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[r10|q]" v21|q -1 [1100, 1101[1100 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[r11|q]" v22|q -1 [1100, 1101[1100 MustHaveRegister  "NoDefinitionFound"
  v23|q QWORD "[rcx|q]" v23|q -1 [202, 258[202 MustHaveRegister 204 MustHaveRegister 240 MustHaveRegister 242 MustHaveRegister 244 MustHaveRegister 246 MustHaveRegister 248 MustHaveRegister 250 MustHaveRegister 252 MustHaveRegister 254 MustHaveRegister 256 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[r11|q]" v24|q -1 [204, 238[204 MustHaveRegister 206 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q -1 [940, 942[940 MustHaveRegister 942 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q rax|q [946, 951[946 MustHaveRegister 948 MustHaveRegister 950 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rcx|q]" v28|q v23|q [258, 261[258 MustHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rcx|q]" v29|q v28|q [262, 555[288 MustHaveRegister 290 MustHaveRegister 292 MustHaveRegister 294 MustHaveRegister 296 MustHaveRegister 298 MustHaveRegister 354 MustHaveRegister 356 MustHaveRegister 408 MustHaveRegister 416 MustHaveRegister 520 MustHaveRegister  "SpillInDominator"
  v30|d DWORD "[rdx|d]" v30|d v1|q [286, 288[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rbx|q]" v31|q -1 [300, 304[300 MustHaveRegister  "SpillInDominator"
  v32|d DWORD "[r10|d]" v32|d -1 [336, 410[[768, 790[336 MustHaveRegister 338 MustHaveRegister 406 MustHaveRegister 410 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[r11|d]" v33|d -1 [338, 372[[768, 778[338 MustHaveRegister 370 ShouldHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rdi|d]" v34|d -1 [340, 434[340 MustHaveRegister 342 MustHaveRegister 344 MustHaveRegister 346 MustHaveRegister 348 MustHaveRegister 350 MustHaveRegister 352 MustHaveRegister 412 MustHaveRegister  "OneSpillStore"
  v35|d DWORD "[r8|d]" v35|d -1 [342, 516[[768, 790[342 MustHaveRegister 430 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[r9|d]" v36|d -1 [344, 432[[768, 790[344 MustHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[rdx|d]" v37|d -1 [346, 532[[768, 790[346 MustHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rbp|d]" v38|d -1 [348, 545[348 MustHaveRegister 532 ShouldHaveRegister 540 ShouldHaveRegister  "OneSpillStore"
  v39|d DWORD "[r13|d]" v39|d -1 [350, 541[350 MustHaveRegister 540 ShouldHaveRegister  "OneSpillStore"
  v40|d DWORD "[r14|d]" v40|d -1 [352, 382[352 MustHaveRegister  "OneSpillStore"
  v41|d DWORD "[rax|d]" v41|d -1 [354, 522[[768, 790[354 MustHaveRegister 358 ShouldHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rbx|d]" v42|d -1 [356, 582[[768, 790[356 MustHaveRegister 358 MustHaveRegister 544 ShouldHaveRegister 582 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[r11|d]" v43|d -1 [408, 512[408 MustHaveRegister 414 MustHaveRegister 512 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[r10|q]" v44|q v32|d [410, 434[410 MustHaveRegister  "SpillInDominator"
  v45|q QWORD "[r14|q]" v45|q v34|d [412, 434[412 MustHaveRegister  "SpillInDominator"
  v46|q QWORD "[r11|q]" v46|q v43|d [512, 557[512 MustHaveRegister 514 ShouldHaveRegister  "OneSpillStore"
  v47|q QWORD "[r9|q]" v47|q v46|q [514, 530[514 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[r8|q]" v48|q v35|d [516, 557[516 MustHaveRegister 518 ShouldHaveRegister  "OneSpillStore"
  v49|q QWORD "[r14|q]" v49|q v48|q [518, 538[518 MustHaveRegister 538 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[rdi|d]" v50|d -1 [520, 581[520 MustHaveRegister 522 ShouldHaveRegister 544 ShouldHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[rax|d]" v51|d v41|d [522, 557[522 MustHaveRegister 524 ShouldHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[r10|q]" v52|q -1 [524, 526[524 MustHaveRegister 526 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[r10|q]" v53|q v52|q [526, 528[526 MustHaveRegister 528 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q -1 [528, 530[528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[r10|q]" v55|q v54|q [530, 552[530 MustHaveRegister 552 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[rdx|d]" v56|d v37|d [532, 553[532 MustHaveRegister 534 ShouldHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[r9|q]" v57|q -1 [534, 536[534 MustHaveRegister 536 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[r9|q]" v58|q -1 [536, 538[536 MustHaveRegister 538 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[r9|q]" v59|q v58|q [538, 554[538 MustHaveRegister 554 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[r14|d]" v60|d v39|d [540, 543[540 MustHaveRegister 542 MustHaveRegister  "OneSpillStore"
  v61|d DWORD "[r13|d]" v61|d v60|d [542, 551[542 MustHaveRegister 548 ShouldHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[r14|d]" v62|d v42|d [544, 608[[812, 854[[1114, 1124[[1186, 1196[[1290, 1321[544 MustHaveRegister 546 MustHaveRegister 566 MustHaveRegister 854 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[rbp|d]" v63|d v62|d [546, 550[546 MustHaveRegister 548 MustHaveRegister 550 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[rbp|d]" v64|d v63|d [550, 556[550 MustHaveRegister 556 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[rax|d]" v65|d rax|q [560, 608[[1114, 1124[[1186, 1196[[1290, 1321[560 MustHaveRegister 562 ShouldHaveRegister 564 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[r10|d]" v66|d v65|d [562, 678[[812, 860[[1156, 1186[[1196, 1227[562 MustHaveRegister 650 MustHaveRegister 860 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[r11|d]" v67|d v51|d [564, 580[[812, 852[564 MustHaveRegister 566 ShouldHaveRegister 580 MustHaveRegister 852 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rax|q]" v68|q rax|q [866, 869[866 MustHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[r11|d]" v69|d v67|d [580, 678[580 MustHaveRegister 582 MustHaveRegister 594 MustHaveRegister 606 MustHaveRegister 628 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[r11|d]" v70|d -1 [1300, 1316[1316 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[r9|q]" v71|q -1 [1300, 1318[1318 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[r14|q]" v72|q v40|d [632, 636[632 MustHaveRegister 636 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q -1 [630, 633[630 MustHaveRegister 632 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rsi|q]" v74|q -1 [634, 636[634 MustHaveRegister 636 MustHaveRegister  "NoSpillStore"
  v75|d DWORD "[rsi|d]" v75|d v66|d [650, 690[650 MustHaveRegister 652 MustHaveRegister 664 MustHaveRegister 676 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[rbx|q]" v76|q v31|q [692, 695[692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[rbx|q]" v77|q v76|q [696, 746[[790, 812[[1248, 1269[[1354, 1375[708 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[r10|d]" v78|d -1 [708, 744[[790, 812[708 MustHaveRegister 710 MustHaveRegister 732 MustHaveRegister 744 ShouldHaveRegister 800 ShouldHaveRegister  "NoSpillStore"
  v79|d DWORD "[rsi|d]" v79|d -1 [890, 892[890 MustHaveRegister 892 MustHaveRegister  "NoSpillStore"
  v80|d DWORD "[rsi|d]" v80|d v79|d [892, 898[892 MustHaveRegister 894 ShouldHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v81|d DWORD "[rsi|d]" v81|d v80|d [898, 900[898 MustHaveRegister 900 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[rax|d]" v82|d -1 [896, 899[896 MustHaveRegister 898 MustHaveRegister  "NoSpillStore"
  v83|d DWORD "[r8|d]" v83|d -1 [1206, 1222[1222 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[r9|q]" v84|q -1 [1206, 1224[1224 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[r10|d]" v85|d -1 [1386, 1402[1402 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[r11|q]" v86|q -1 [1386, 1404[1404 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[r10|d]" v87|d -1 [1332, 1348[1348 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[r11|q]" v88|q -1 [1332, 1350[1350 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[r10|d]" v89|d -1 [1418, 1434[1434 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[r11|q]" v90|q -1 [1418, 1436[1436 MustHaveRegister  "NoSpillStore"
  v91|q QWORD "[vstack:8|q]" v0|q v0|q [434, 551[ "SpillInDominator"
  v92|q QWORD "[vstack:14|q]" v1|q v1|q [952, 1085[ "OneSpillStore"
  v93|d DWORD "[rcx|d]" v2|d v2|d [116, 153[ "OneSpillStore"
  v94|d DWORD "[vstack:15|d]" v4|d v4|d [952, 1085[ "OneSpillStore"
  v95|d DWORD "[vstack:16|d]" v7|d v7|d [952, 1085[ "OneSpillStore"
  v96|d DWORD "[rbx|d]" v2|d v2|d [153, 294[[920, 952[294 MustHaveRegister  "OneSpillStore"
  v97|d DWORD "[vstack:17|d]" v2|d v2|d [952, 1085[ "OneSpillStore"
  v98|d DWORD "[vstack:13|d]" v16|d v16|d [952, 1085[ "OneSpillStore"
  v99|q QWORD "[vstack:9|q]" v29|q v29|q [555, 596[ "SpillInDominator"
  v100|q QWORD "[vstack:0|q]" v31|q v31|q [746, 763[ "SpillInDominator"
  v101|q QWORD "[vstack:0|q]" v31|q v31|q [304, 746[692 ShouldHaveRegister  "SpillInDominator"
  v102|q QWORD "[vstack:4|q]" v44|q v44|q [434, 557[ "SpillInDominator"
  v103|q QWORD "[vstack:2|q]" v45|q v45|q [863, 870[[1114, 1124[[1146, 1227[[1290, 1321[[1354, 1375[[1376, 1386[ "SpillInDominator"
  v104|d DWORD "[r14|d]" v40|d v40|d [608, 632[[768, 790[632 MustHaveRegister  "OneSpillStore"
  v105|d DWORD "[vstack:1|d]" v40|d v40|d [382, 608[ "OneSpillStore"
  v106|q QWORD "[vstack:8|q]" v0|q v0|q [551, 746[ "SpillInDominator"
  v107|q QWORD "[vstack:4|q]" v44|q v44|q [557, 712[[790, 802[[812, 870[[1114, 1124[[1146, 1227[[1290, 1321[[1354, 1375[[1376, 1386[846 ShouldHaveRegister  "SpillInDominator"
  v108|q QWORD "[vstack:10|q]" v46|q v46|q [557, 608[[812, 850[[1114, 1124[[1186, 1196[[1290, 1300[850 ShouldHaveRegister  "OneSpillStore"
  v109|q QWORD "[vstack:11|q]" v48|q v48|q [557, 608[ "OneSpillStore"
  v110|q QWORD "[rbx|q]" v45|q v45|q [812, 863[856 ShouldHaveRegister  "SpillInDominator"
  v111|q QWORD "[vstack:2|q]" v45|q v45|q [434, 712[[790, 802[ "SpillInDominator"
  v112|d DWORD "[rdi|d]" v34|d v34|d [666, 690[[768, 790[676 MustHaveRegister 690 MustHaveRegister  "OneSpillStore"
  v113|d DWORD "[vstack:3|d]" v34|d v34|d [434, 666[ "OneSpillStore"
  v114|d DWORD "[r13|d]" v51|d v51|d [557, 608[[1114, 1124[[1186, 1196[[1290, 1321[564 ShouldHaveRegister  "NoSpillStore"
  v115|d DWORD "[r10|d]" v56|d v56|d [553, 557[ "NoSpillStore"
  v116|d DWORD "[vstack:5|d]" v39|d v39|d [541, 652[[768, 790[652 ShouldHaveRegister  "OneSpillStore"
  v117|d DWORD "[rax|d]" v60|d v60|d [812, 862[862 MustHaveRegister  "OneSpillStore"
  v118|d DWORD "[vstack:6|d]" v60|d v60|d [543, 608[ "OneSpillStore"
  v119|d DWORD "[vstack:7|d]" v38|d v38|d [545, 651[[768, 790[650 ShouldHaveRegister  "OneSpillStore"
  v120|q QWORD "[vstack:8|q]" v0|q v0|q [763, 902[[920, 952[767 LiveAtLoopEnd  "SpillInDominator"
  v121|d DWORD "[rbp|d]" v56|d v56|d [557, 608[[1114, 1124[[1186, 1196[[1290, 1321[562 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[vstack:9|q]" v29|q v29|q [746, 763[ "SpillInDominator"
  v123|q QWORD "[r10|q]" v0|q v0|q [746, 763[762 ShouldHaveRegister  "SpillInDominator"
  v124|q QWORD "[rcx|q]" v29|q v29|q [596, 746[606 MustHaveRegister 628 MustHaveRegister  "SpillInDominator"
  v125|q QWORD "[r8|q]" v44|q v44|q [1386, 1407[ "SpillInDominator"
  v126|q QWORD "[rbx|q]" v46|q v46|q [1300, 1321[ "OneSpillStore"
  v127|q QWORD "[r8|q]" v48|q v48|q [812, 851[ "OneSpillStore"
  v128|q QWORD "[vstack:9|q]" v29|q v29|q [763, 870[767 LiveAtLoopEnd 848 ShouldHaveRegister  "SpillInDominator"
  v129|q QWORD "[vstack:0|q]" v31|q v31|q [763, 870[767 LiveAtLoopEnd  "SpillInDominator"
  v130|q QWORD "[rcx|q]" v29|q v29|q [870, 902[[1114, 1145[[1146, 1227[[1228, 1238[[1248, 1269[[1290, 1321[[1322, 1353[[1354, 1375[[1376, 1407[890 MustHaveRegister 892 MustHaveRegister  "SpillInDominator"
  v131|q QWORD "[rsi|q]" v0|q v0|q [952, 1083[ "SpillInDominator"
  v132|q QWORD "[rbp|q]" v48|q v48|q [851, 858[858 MustHaveRegister  "OneSpillStore"
  v133|d DWORD "[r10|d]" v60|d v60|d [1114, 1124[[1186, 1196[[1290, 1321[ "OneSpillStore"
  v134|q QWORD "[r8|q]" v48|q v48|q [1114, 1124[[1186, 1196[[1290, 1321[ "OneSpillStore"
  v135|q QWORD "[r14|q]" v45|q v45|q [1386, 1407[ "SpillInDominator"
  v136|q QWORD "[r11|q]" v0|q v0|q [1083, 1085[1084 ShouldHaveRegister  "SpillInDominator"
  v137|d DWORD "[vstack:13|d]" v16|d v16|d [1085, 1088[1088 ShouldHaveRegister  "OneSpillStore"
  v138|d DWORD "[vstack:17|d]" v2|d v2|d [1085, 1114[[1238, 1248[[1270, 1290[[1408, 1418[ "OneSpillStore"
  v139|d DWORD "[vstack:16|d]" v7|d v7|d [1085, 1104[ "OneSpillStore"
  v140|d DWORD "[vstack:15|d]" v4|d v4|d [1085, 1104[ "OneSpillStore"
  v141|q QWORD "[vstack:14|q]" v1|q v1|q [1085, 1114[[1238, 1248[[1270, 1290[[1408, 1418[ "OneSpillStore"
  v142|q QWORD "[vstack:8|q]" v0|q v0|q [1085, 1093[ "SpillInDominator"
  v143|d DWORD "[r11|d]" v69|d v69|d [1156, 1186[[1196, 1227[ "NoSpillStore"
  v144|q QWORD "[rsi|q]" v0|q v0|q [1093, 1145[[1146, 1227[[1228, 1269[[1270, 1321[[1322, 1353[[1354, 1375[[1376, 1407[[1408, 1439[1094 MustHaveRegister 1098 MustHaveRegister 1100 MustHaveRegister  "SpillInDominator"
  v145|q QWORD "[rdx|q]" v1|q v1|q [1418, 1439[ "OneSpillStore"
  v146|d DWORD "[rcx|d]" v2|d v2|d [1418, 1439[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v7|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction v9|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v10|SINGLE = MOVSS input: [v9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr  148  <|@ instruction CMP x: v3|DWORD y: 1 size: DWORD <|@ <|@
      nr  150  <|@ instruction v12|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  152  <|@ instruction v11|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: v93|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction v13|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v10|SINGLE {tmp: v14|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  156  <|@ instruction v15|DWORD = IMUL (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction CMP (x: v15|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction v16|DWORD = CMOVE (falseValue: v15|DWORD, ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v6|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  204  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + 312] instr: 0 <|@ <|@
      nr  242  <|@ instruction MOV x: [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr  244  <|@ instruction MOV x: [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  246  <|@ instruction MOV x: [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  248  <|@ instruction MOV x: [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV x: [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  252  <|@ instruction MOV x: [v23|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  254  <|@ instruction MOV x: [v23|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV x: [v23|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  258  <|@ instruction v28|QWORD[.] = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction MOV (x: [v29|QWORD[.] + 48], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [v29|QWORD[.] + 32], y: v4|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV (x: [v29|QWORD[.] + 28], y: v7|DWORD) size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [v29|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [v29|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction v31|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v33|DWORD = MOV input: [v32|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr  340  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  342  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v35|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr  344  <|@ instruction v36|DWORD = MOVSXB input: [v34|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  346  <|@ instruction v37|DWORD = MOV input: [v34|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  348  <|@ instruction v38|DWORD = MOV input: [v34|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  350  <|@ instruction v39|DWORD = MOV input: [v34|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  352  <|@ instruction v40|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  354  <|@ instruction v41|DWORD = MOV input: [v29|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  356  <|@ instruction v42|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: v42|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction MOV x: [v32|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  408  <|@ instruction v43|DWORD[_] = MOV input: [v29|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  410  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  412  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  416  <|@ instruction CMPCONSTBRANCH x: [v29|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v35|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  432  <|@ instruction TESTBYTEBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  514  <|@ instruction v47|QWORD[*] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction v49|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction v50|DWORD = MOV input: [v29|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  522  <|@ instruction v51|DWORD = ADD (x: v41|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction v52|QWORD = MOVSXD value: v51|DWORD size: QWORD <|@ <|@
      nr  526  <|@ instruction v53|QWORD = SHL value: v52|QWORD size: QWORD <|@ <|@
      nr  528  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr  530  <|@ instruction v55|QWORD[*] = ADD (x: v54|QWORD, y: v47|QWORD[*]) size: QWORD <|@ <|@
      nr  532  <|@ instruction v56|DWORD = ADD (x: v37|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction v57|QWORD = MOVSXD value: v56|DWORD size: QWORD <|@ <|@
      nr  536  <|@ instruction v58|QWORD = LEA address: [v57|QWORD + 16] size: QWORD <|@ <|@
      nr  538  <|@ instruction v59|QWORD[*] = ADD (x: v58|QWORD, y: v49|QWORD[*]) size: QWORD <|@ <|@
      nr  540  <|@ instruction v60|DWORD = ADD (x: v39|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v39|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction v61|DWORD = SUB (x: v60|DWORD, ~y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVE input: v60|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction v62|DWORD = ADD (x: v42|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVE input: v38|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  546  <|@ instruction v63|DWORD = SUB (x: v62|DWORD, ~y: v51|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction CMP (x: v63|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction v64|DWORD = CMOVE (falseValue: v63|DWORD, ~trueValue: v61|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  552  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVE input: v56|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  554  <|@ instruction rdx|QWORD = MOVE input: v59|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction rcx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = STACKMOVE (input: v102|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = MOVE input: v51|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE input: v115|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  558  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  560  <|@ instruction v65|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  562  <|@ instruction v66|DWORD = ADD (x: v65|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction v67|DWORD = ADD (x: v51|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr  566  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v67|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction v69|DWORD = SUB (x: v67|DWORD, ~y: v50|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v42|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: v69|DWORD, y: [v29|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v69|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction v73|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  632  <|@ instruction v72|QWORD = UNCOMPRESSPOINTER (input: v40|DWORD, ~baseRegister: v73|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  634  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: v74|QWORD, y: v72|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction v75|DWORD = SUB (x: v66|DWORD, ~y: v38|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction TESTBRANCH (x: v75|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: v75|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 24], y: v75|DWORD) size: DWORD <|@ <|@
      nr  692  <|@ instruction v76|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [v76|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  696  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v78|DWORD = MOV input: [v77|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = STACKMOVE (input: v122|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = STACKMOVE (input: v100|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction rsi|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rcx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  852  <|@ instruction r8|DWORD = MOVE input: v67|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction r9|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction rdi|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction out:0|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction out:8|DWORD = MOVE input: v66|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction out:16|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE input: v110|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr  866  <|@ instruction v68|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [v68|QWORD[.]] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction v79|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  892  <|@ instruction v80|DWORD = SUB (x: v79|DWORD, ~y: [v29|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  894  <|@ instruction CMP x: v80|DWORD y: 1 size: DWORD <|@ <|@
      nr  896  <|@ instruction v82|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  898  <|@ instruction v81|DWORD = CMOVE (falseValue: v80|DWORD, ~trueValue: v82|DWORD) condition: < <|@ <|@
      nr  900  <|@ instruction CMPCONSTBRANCH x: v81|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  942  <|@ instruction rsi|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr  946  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = STACKMOVE (input: v97|DWORD, ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = STACKMOVE (input: v95|DWORD, ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = STACKMOVE (input: v94|DWORD, ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = STACKMOVE (input: v92|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = STACKMOVE (input: v98|DWORD, ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1086  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v16|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr 1088  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr 1090  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr 1092  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v142|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1094  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr 1096  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr 1098  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr 1100  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v17|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction JUMP ~outgoingValues: [int[-138771|0xfffffffffffde1ed], long[3220|0xc94]] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[4500|0x1194]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [int[-147987|0xfffffffffffdbded], long[10900|0x2a94]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction JUMP ~outgoingValues: [int[-156179|0xfffffffffffd9ded], long[4500|0x1194]] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [int[-155155|0xfffffffffffda1ed], long[3860|0xf14]] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [int[-154131|0xfffffffffffda5ed], long[3220|0xc94]] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [int[-152083|0xfffffffffffdaded], long[3860|0xf14]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [int[-76083|0xfffffffffffed6cd], long[17300|0x4394]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1206  <|@ instruction [v83|DWORD, v84|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v83|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v84|QWORD) size: QWORD <|@ <|@
      nr 1226  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v29|QWORD[.] v69|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v29|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v29|QWORD[.] v69|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v45|QWORD[.] v66|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction JUMP ~outgoingValues: [int[-160531|0xfffffffffffd8ced], long[8340|0x2094]] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction JUMP ~outgoingValues: [int[-136723|0xfffffffffffde9ed], long[1300|0x514]] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1266  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr 1268  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v77|QWORD[.] 
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction JUMP ~outgoingValues: [int[-140819|0xfffffffffffdd9ed], long[5140|0x1414]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [int[-139795|0xfffffffffffddded], long[3860|0xf14]] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction JUMP ~outgoingValues: [int[-151059|0xfffffffffffdb1ed], long[3220|0xc94]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1300  <|@ instruction [v70|DWORD, v71|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v70|DWORD) size: DWORD <|@ <|@
      nr 1318  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v71|QWORD) size: QWORD <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v65|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] v46|QWORD[.] v51|DWORD v62|DWORD v48|QWORD[.] v56|DWORD v60|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction JUMP ~outgoingValues: [int[-145939|0xfffffffffffdc5ed], long[5780|0x1694]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1332  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr 1350  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr 1352  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1374  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [int[-150035|0xfffffffffffdb5ed], long[11540|0x2d14]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1386  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr 1404  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr 1406  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction JUMP ~outgoingValues: [int[-137747|0xfffffffffffde5ed], long[1940|0x794]] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1418  <|@ instruction [v89|DWORD, v90|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v89|DWORD) size: DWORD <|@ <|@
      nr 1436  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v90|QWORD) size: QWORD <|@ <|@
      nr 1438  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[558, 560[[764, 765[[864, 866[[944, 946[[1086, 1087[[1090, 1092[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v64|d [0, 38[[154, 155[[556, 558[[764, 765[[850, 865[[1086, 1087[[1090, 1091[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v59|q [0, 36[[554, 558[[764, 765[[848, 865[[1086, 1087[[1090, 1091[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 30[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v55|q [0, 34[[552, 558[[762, 765[[846, 865[[942, 944[[1084, 1087[[1088, 1091[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v45|q [0, 1[[764, 765[[856, 865[[1086, 1087[[1090, 1091[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- v67|d [0, 40[[558, 559[[764, 765[[852, 865[[1086, 1087[[1090, 1091[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- v62|d [0, 1[[558, 559[[764, 765[[854, 865[[1086, 1087[[1090, 1091[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [34, 434[34 MustHaveRegister 44 MustHaveRegister 98 MustHaveRegister 112 MustHaveRegister 144 MustHaveRegister 336 MustHaveRegister 340 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [36, 286[[920, 952[36 MustHaveRegister 42 MustHaveRegister 286 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [38, 116[38 MustHaveRegister 48 ShouldHaveRegister 74 MustHaveRegister 86 MustHaveRegister  "OneSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [40, 152[[1104, 1114[[1238, 1248[[1270, 1290[[1408, 1439[40 MustHaveRegister 48 ShouldHaveRegister 148 ShouldHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [42, 290[[920, 952[42 MustHaveRegister 50 ShouldHaveRegister 290 MustHaveRegister  "OneSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d -1 [46, 162[46 MustHaveRegister 114 ShouldHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d v2|d [48, 292[[920, 952[48 MustHaveRegister 50 MustHaveRegister 62 MustHaveRegister 74 ShouldHaveRegister 292 MustHaveRegister  "OneSpillStore"
  v8|d DWORD "[rax|d]" v8|d -1 [112, 161[112 MustHaveRegister 114 MustHaveRegister 158 ShouldHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rbx|d]" v9|d -1 [144, 146[144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v10|S SINGLE "[xmm0|S]" v10|S -1 [146, 154[146 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r8|d]" v11|d v3|d [152, 156[152 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbx|d]" v12|d -1 [150, 153[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rdi|d]" v13|d v10|S [154, 156[154 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbp|d]" v14|d -1 [154, 155[154 MustHaveRegister  "NoDefinitionFound"
  v15|d DWORD "[r8|d]" v15|d v11|d [156, 160[156 MustHaveRegister 158 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[r8|d]" v16|d v15|d [160, 164[160 MustHaveRegister 162 MustHaveRegister  "OneSpillStore"
  v17|q QWORD "[rax|q]" v17|q rax|q [1092, 1101[1092 MustHaveRegister 1096 MustHaveRegister 1100 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[r10|q]" v18|q -1 [1094, 1095[1094 MustHaveRegister  "NoDefinitionFound"
  v19|q QWORD "[r11|q]" v19|q -1 [1094, 1095[1094 MustHaveRegister  "NoDefinitionFound"
  v20|d DWORD "[r10|d]" v20|d v17|q [1096, 1098[1096 MustHaveRegister 1098 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[r10|q]" v21|q -1 [1100, 1101[1100 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[r11|q]" v22|q -1 [1100, 1101[1100 MustHaveRegister  "NoDefinitionFound"
  v23|q QWORD "[rcx|q]" v23|q -1 [202, 258[202 MustHaveRegister 204 MustHaveRegister 240 MustHaveRegister 242 MustHaveRegister 244 MustHaveRegister 246 MustHaveRegister 248 MustHaveRegister 250 MustHaveRegister 252 MustHaveRegister 254 MustHaveRegister 256 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[r11|q]" v24|q -1 [204, 238[204 MustHaveRegister 206 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q -1 [940, 942[940 MustHaveRegister 942 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q rax|q [946, 951[946 MustHaveRegister 948 MustHaveRegister 950 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rcx|q]" v28|q v23|q [258, 261[258 MustHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rcx|q]" v29|q v28|q [262, 555[288 MustHaveRegister 290 MustHaveRegister 292 MustHaveRegister 294 MustHaveRegister 296 MustHaveRegister 298 MustHaveRegister 354 MustHaveRegister 356 MustHaveRegister 408 MustHaveRegister 416 MustHaveRegister 520 MustHaveRegister  "StoreAtDefinition"
  v30|d DWORD "[rdx|d]" v30|d v1|q [286, 288[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rbx|q]" v31|q -1 [300, 304[300 MustHaveRegister  "StoreAtDefinition"
  v32|d DWORD "[r10|d]" v32|d -1 [336, 410[[768, 790[336 MustHaveRegister 338 MustHaveRegister 406 MustHaveRegister 410 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[r11|d]" v33|d -1 [338, 372[[768, 778[338 MustHaveRegister 370 ShouldHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rdi|d]" v34|d -1 [340, 434[340 MustHaveRegister 342 MustHaveRegister 344 MustHaveRegister 346 MustHaveRegister 348 MustHaveRegister 350 MustHaveRegister 352 MustHaveRegister 412 MustHaveRegister  "OneSpillStore"
  v35|d DWORD "[r8|d]" v35|d -1 [342, 516[[768, 790[342 MustHaveRegister 430 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[r9|d]" v36|d -1 [344, 432[[768, 790[344 MustHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[rdx|d]" v37|d -1 [346, 532[[768, 790[346 MustHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rbp|d]" v38|d -1 [348, 545[348 MustHaveRegister 532 ShouldHaveRegister 540 ShouldHaveRegister  "OneSpillStore"
  v39|d DWORD "[r13|d]" v39|d -1 [350, 541[350 MustHaveRegister 540 ShouldHaveRegister  "OneSpillStore"
  v40|d DWORD "[r14|d]" v40|d -1 [352, 382[352 MustHaveRegister  "OneSpillStore"
  v41|d DWORD "[rax|d]" v41|d -1 [354, 522[[768, 790[354 MustHaveRegister 358 ShouldHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rbx|d]" v42|d -1 [356, 582[[768, 790[356 MustHaveRegister 358 MustHaveRegister 544 ShouldHaveRegister 582 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[r11|d]" v43|d -1 [408, 512[408 MustHaveRegister 414 MustHaveRegister 512 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[r10|q]" v44|q v32|d [410, 434[410 MustHaveRegister  "StoreAtDefinition"
  v45|q QWORD "[r14|q]" v45|q v34|d [412, 434[412 MustHaveRegister  "StoreAtDefinition"
  v46|q QWORD "[r11|q]" v46|q v43|d [512, 557[512 MustHaveRegister 514 ShouldHaveRegister  "OneSpillStore"
  v47|q QWORD "[r9|q]" v47|q v46|q [514, 530[514 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[r8|q]" v48|q v35|d [516, 557[516 MustHaveRegister 518 ShouldHaveRegister  "OneSpillStore"
  v49|q QWORD "[r14|q]" v49|q v48|q [518, 538[518 MustHaveRegister 538 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[rdi|d]" v50|d -1 [520, 581[520 MustHaveRegister 522 ShouldHaveRegister 544 ShouldHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[rax|d]" v51|d v41|d [522, 557[522 MustHaveRegister 524 ShouldHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[r10|q]" v52|q -1 [524, 526[524 MustHaveRegister 526 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[r10|q]" v53|q v52|q [526, 528[526 MustHaveRegister 528 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q -1 [528, 530[528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[r10|q]" v55|q v54|q [530, 552[530 MustHaveRegister 552 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[rdx|d]" v56|d v37|d [532, 553[532 MustHaveRegister 534 ShouldHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[r9|q]" v57|q -1 [534, 536[534 MustHaveRegister 536 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[r9|q]" v58|q -1 [536, 538[536 MustHaveRegister 538 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[r9|q]" v59|q v58|q [538, 554[538 MustHaveRegister 554 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[r14|d]" v60|d v39|d [540, 543[540 MustHaveRegister 542 MustHaveRegister  "OneSpillStore"
  v61|d DWORD "[r13|d]" v61|d v60|d [542, 551[542 MustHaveRegister 548 ShouldHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[r14|d]" v62|d v42|d [544, 608[[812, 854[[1114, 1124[[1186, 1196[[1290, 1321[544 MustHaveRegister 546 MustHaveRegister 566 MustHaveRegister 854 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[rbp|d]" v63|d v62|d [546, 550[546 MustHaveRegister 548 MustHaveRegister 550 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[rbp|d]" v64|d v63|d [550, 556[550 MustHaveRegister 556 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[rax|d]" v65|d rax|q [560, 608[[1114, 1124[[1186, 1196[[1290, 1321[560 MustHaveRegister 562 ShouldHaveRegister 564 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[r10|d]" v66|d v65|d [562, 678[[812, 860[[1156, 1186[[1196, 1227[562 MustHaveRegister 650 MustHaveRegister 860 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[r11|d]" v67|d v51|d [564, 580[[812, 852[564 MustHaveRegister 566 ShouldHaveRegister 580 MustHaveRegister 852 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rax|q]" v68|q rax|q [866, 869[866 MustHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[r11|d]" v69|d v67|d [580, 678[580 MustHaveRegister 582 MustHaveRegister 594 MustHaveRegister 606 MustHaveRegister 628 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[r11|d]" v70|d -1 [1300, 1316[1316 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[r9|q]" v71|q -1 [1300, 1318[1318 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[r14|q]" v72|q v40|d [632, 636[632 MustHaveRegister 636 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q -1 [630, 633[630 MustHaveRegister 632 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rsi|q]" v74|q -1 [634, 636[634 MustHaveRegister 636 MustHaveRegister  "NoSpillStore"
  v75|d DWORD "[rsi|d]" v75|d v66|d [650, 690[650 MustHaveRegister 652 MustHaveRegister 664 MustHaveRegister 676 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[rbx|q]" v76|q v31|q [692, 695[692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[rbx|q]" v77|q v76|q [696, 746[[790, 812[[1248, 1269[[1354, 1375[708 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[r10|d]" v78|d -1 [708, 744[[790, 812[708 MustHaveRegister 710 MustHaveRegister 732 MustHaveRegister 744 ShouldHaveRegister 800 ShouldHaveRegister  "NoSpillStore"
  v79|d DWORD "[rsi|d]" v79|d -1 [890, 892[890 MustHaveRegister 892 MustHaveRegister  "NoSpillStore"
  v80|d DWORD "[rsi|d]" v80|d v79|d [892, 898[892 MustHaveRegister 894 ShouldHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v81|d DWORD "[rsi|d]" v81|d v80|d [898, 900[898 MustHaveRegister 900 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[rax|d]" v82|d -1 [896, 899[896 MustHaveRegister 898 MustHaveRegister  "NoSpillStore"
  v83|d DWORD "[r8|d]" v83|d -1 [1206, 1222[1222 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[r9|q]" v84|q -1 [1206, 1224[1224 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[r10|d]" v85|d -1 [1386, 1402[1402 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[r11|q]" v86|q -1 [1386, 1404[1404 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[r10|d]" v87|d -1 [1332, 1348[1348 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[r11|q]" v88|q -1 [1332, 1350[1350 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[r10|d]" v89|d -1 [1418, 1434[1434 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[r11|q]" v90|q -1 [1418, 1436[1436 MustHaveRegister  "NoSpillStore"
  v91|q QWORD "[vstack:8|q]" v0|q v0|q [434, 551[ "StoreAtDefinition"
  v92|q QWORD "[vstack:14|q]" v1|q v1|q [952, 1085[ "OneSpillStore"
  v93|d DWORD "[rcx|d]" v2|d v2|d [116, 153[ "OneSpillStore"
  v94|d DWORD "[vstack:15|d]" v4|d v4|d [952, 1085[ "OneSpillStore"
  v95|d DWORD "[vstack:16|d]" v7|d v7|d [952, 1085[ "OneSpillStore"
  v96|d DWORD "[rbx|d]" v2|d v2|d [153, 294[[920, 952[294 MustHaveRegister  "OneSpillStore"
  v97|d DWORD "[vstack:17|d]" v2|d v2|d [952, 1085[ "OneSpillStore"
  v98|d DWORD "[vstack:13|d]" v16|d v16|d [952, 1085[ "OneSpillStore"
  v99|q QWORD "[vstack:9|q]" v29|q v29|q [555, 596[ "StoreAtDefinition"
  v100|q QWORD "[vstack:0|q]" v31|q v31|q [746, 763[ "StoreAtDefinition"
  v101|q QWORD "[vstack:0|q]" v31|q v31|q [304, 746[692 ShouldHaveRegister  "StoreAtDefinition"
  v102|q QWORD "[vstack:4|q]" v44|q v44|q [434, 557[ "StoreAtDefinition"
  v103|q QWORD "[vstack:2|q]" v45|q v45|q [863, 870[[1114, 1124[[1146, 1227[[1290, 1321[[1354, 1375[[1376, 1386[ "StoreAtDefinition"
  v104|d DWORD "[r14|d]" v40|d v40|d [608, 632[[768, 790[632 MustHaveRegister  "OneSpillStore"
  v105|d DWORD "[vstack:1|d]" v40|d v40|d [382, 608[ "OneSpillStore"
  v106|q QWORD "[vstack:8|q]" v0|q v0|q [551, 746[ "StoreAtDefinition"
  v107|q QWORD "[vstack:4|q]" v44|q v44|q [557, 712[[790, 802[[812, 870[[1114, 1124[[1146, 1227[[1290, 1321[[1354, 1375[[1376, 1386[846 ShouldHaveRegister  "StoreAtDefinition"
  v108|q QWORD "[vstack:10|q]" v46|q v46|q [557, 608[[812, 850[[1114, 1124[[1186, 1196[[1290, 1300[850 ShouldHaveRegister  "OneSpillStore"
  v109|q QWORD "[vstack:11|q]" v48|q v48|q [557, 608[ "OneSpillStore"
  v110|q QWORD "[rbx|q]" v45|q v45|q [812, 863[856 ShouldHaveRegister  "StoreAtDefinition"
  v111|q QWORD "[vstack:2|q]" v45|q v45|q [434, 712[[790, 802[ "StoreAtDefinition"
  v112|d DWORD "[rdi|d]" v34|d v34|d [666, 690[[768, 790[676 MustHaveRegister 690 MustHaveRegister  "OneSpillStore"
  v113|d DWORD "[vstack:3|d]" v34|d v34|d [434, 666[ "OneSpillStore"
  v114|d DWORD "[r13|d]" v51|d v51|d [557, 608[[1114, 1124[[1186, 1196[[1290, 1321[564 ShouldHaveRegister  "NoSpillStore"
  v115|d DWORD "[r10|d]" v56|d v56|d [553, 557[ "NoSpillStore"
  v116|d DWORD "[vstack:5|d]" v39|d v39|d [541, 652[[768, 790[652 ShouldHaveRegister  "OneSpillStore"
  v117|d DWORD "[rax|d]" v60|d v60|d [812, 862[862 MustHaveRegister  "OneSpillStore"
  v118|d DWORD "[vstack:6|d]" v60|d v60|d [543, 608[ "OneSpillStore"
  v119|d DWORD "[vstack:7|d]" v38|d v38|d [545, 651[[768, 790[650 ShouldHaveRegister  "OneSpillStore"
  v120|q QWORD "[vstack:8|q]" v0|q v0|q [763, 902[[920, 952[767 LiveAtLoopEnd  "StoreAtDefinition"
  v121|d DWORD "[rbp|d]" v56|d v56|d [557, 608[[1114, 1124[[1186, 1196[[1290, 1321[562 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[vstack:9|q]" v29|q v29|q [746, 763[ "StoreAtDefinition"
  v123|q QWORD "[r10|q]" v0|q v0|q [746, 763[762 ShouldHaveRegister  "StoreAtDefinition"
  v124|q QWORD "[rcx|q]" v29|q v29|q [596, 746[606 MustHaveRegister 628 MustHaveRegister  "StoreAtDefinition"
  v125|q QWORD "[r8|q]" v44|q v44|q [1386, 1407[ "StoreAtDefinition"
  v126|q QWORD "[rbx|q]" v46|q v46|q [1300, 1321[ "OneSpillStore"
  v127|q QWORD "[r8|q]" v48|q v48|q [812, 851[ "OneSpillStore"
  v128|q QWORD "[vstack:9|q]" v29|q v29|q [763, 870[767 LiveAtLoopEnd 848 ShouldHaveRegister  "StoreAtDefinition"
  v129|q QWORD "[vstack:0|q]" v31|q v31|q [763, 870[767 LiveAtLoopEnd  "StoreAtDefinition"
  v130|q QWORD "[rcx|q]" v29|q v29|q [870, 902[[1114, 1145[[1146, 1227[[1228, 1238[[1248, 1269[[1290, 1321[[1322, 1353[[1354, 1375[[1376, 1407[890 MustHaveRegister 892 MustHaveRegister  "StoreAtDefinition"
  v131|q QWORD "[rsi|q]" v0|q v0|q [952, 1083[ "StoreAtDefinition"
  v132|q QWORD "[rbp|q]" v48|q v48|q [851, 858[858 MustHaveRegister  "OneSpillStore"
  v133|d DWORD "[r10|d]" v60|d v60|d [1114, 1124[[1186, 1196[[1290, 1321[ "OneSpillStore"
  v134|q QWORD "[r8|q]" v48|q v48|q [1114, 1124[[1186, 1196[[1290, 1321[ "OneSpillStore"
  v135|q QWORD "[r14|q]" v45|q v45|q [1386, 1407[ "StoreAtDefinition"
  v136|q QWORD "[r11|q]" v0|q v0|q [1083, 1085[1084 ShouldHaveRegister  "StoreAtDefinition"
  v137|d DWORD "[vstack:13|d]" v16|d v16|d [1085, 1088[1088 ShouldHaveRegister  "OneSpillStore"
  v138|d DWORD "[vstack:17|d]" v2|d v2|d [1085, 1114[[1238, 1248[[1270, 1290[[1408, 1418[ "OneSpillStore"
  v139|d DWORD "[vstack:16|d]" v7|d v7|d [1085, 1104[ "OneSpillStore"
  v140|d DWORD "[vstack:15|d]" v4|d v4|d [1085, 1104[ "OneSpillStore"
  v141|q QWORD "[vstack:14|q]" v1|q v1|q [1085, 1114[[1238, 1248[[1270, 1290[[1408, 1418[ "OneSpillStore"
  v142|q QWORD "[vstack:8|q]" v0|q v0|q [1085, 1093[ "StoreAtDefinition"
  v143|d DWORD "[r11|d]" v69|d v69|d [1156, 1186[[1196, 1227[ "NoSpillStore"
  v144|q QWORD "[rsi|q]" v0|q v0|q [1093, 1145[[1146, 1227[[1228, 1269[[1270, 1321[[1322, 1353[[1354, 1375[[1376, 1407[[1408, 1439[1094 MustHaveRegister 1098 MustHaveRegister 1100 MustHaveRegister  "StoreAtDefinition"
  v145|q QWORD "[rdx|q]" v1|q v1|q [1418, 1439[ "OneSpillStore"
  v146|d DWORD "[rcx|d]" v2|d v2|d [1418, 1439[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v7|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction v9|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v10|SINGLE = MOVSS input: [v9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr  148  <|@ instruction CMP x: v3|DWORD y: 1 size: DWORD <|@ <|@
      nr  150  <|@ instruction v12|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  152  <|@ instruction v11|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: v93|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction v13|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v10|SINGLE {tmp: v14|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  156  <|@ instruction v15|DWORD = IMUL (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction CMP (x: v15|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction v16|DWORD = CMOVE (falseValue: v15|DWORD, ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v6|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  204  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + 312] instr: 0 <|@ <|@
      nr  242  <|@ instruction MOV x: [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr  244  <|@ instruction MOV x: [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  246  <|@ instruction MOV x: [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  248  <|@ instruction MOV x: [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV x: [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  252  <|@ instruction MOV x: [v23|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  254  <|@ instruction MOV x: [v23|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV x: [v23|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  258  <|@ instruction v28|QWORD[.] = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [v28|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction MOV (x: [v29|QWORD[.] + 48], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [v29|QWORD[.] + 32], y: v4|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV (x: [v29|QWORD[.] + 28], y: v7|DWORD) size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [v29|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [v29|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction v31|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v33|DWORD = MOV input: [v32|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr  340  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  342  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v35|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr  344  <|@ instruction v36|DWORD = MOVSXB input: [v34|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  346  <|@ instruction v37|DWORD = MOV input: [v34|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  348  <|@ instruction v38|DWORD = MOV input: [v34|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  350  <|@ instruction v39|DWORD = MOV input: [v34|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  352  <|@ instruction v40|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  354  <|@ instruction v41|DWORD = MOV input: [v29|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  356  <|@ instruction v42|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: v42|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction MOV x: [v32|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  408  <|@ instruction v43|DWORD[_] = MOV input: [v29|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  410  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  412  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  416  <|@ instruction CMPCONSTBRANCH x: [v29|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v35|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  432  <|@ instruction TESTBYTEBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  514  <|@ instruction v47|QWORD[*] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction v49|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction v50|DWORD = MOV input: [v29|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  522  <|@ instruction v51|DWORD = ADD (x: v41|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction v52|QWORD = MOVSXD value: v51|DWORD size: QWORD <|@ <|@
      nr  526  <|@ instruction v53|QWORD = SHL value: v52|QWORD size: QWORD <|@ <|@
      nr  528  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr  530  <|@ instruction v55|QWORD[*] = ADD (x: v54|QWORD, y: v47|QWORD[*]) size: QWORD <|@ <|@
      nr  532  <|@ instruction v56|DWORD = ADD (x: v37|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction v57|QWORD = MOVSXD value: v56|DWORD size: QWORD <|@ <|@
      nr  536  <|@ instruction v58|QWORD = LEA address: [v57|QWORD + 16] size: QWORD <|@ <|@
      nr  538  <|@ instruction v59|QWORD[*] = ADD (x: v58|QWORD, y: v49|QWORD[*]) size: QWORD <|@ <|@
      nr  540  <|@ instruction v60|DWORD = ADD (x: v39|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v39|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction v61|DWORD = SUB (x: v60|DWORD, ~y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVE input: v60|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction v62|DWORD = ADD (x: v42|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVE input: v38|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  546  <|@ instruction v63|DWORD = SUB (x: v62|DWORD, ~y: v51|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction CMP (x: v63|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction v64|DWORD = CMOVE (falseValue: v63|DWORD, ~trueValue: v61|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  552  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVE input: v56|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  554  <|@ instruction rdx|QWORD = MOVE input: v59|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction rcx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = STACKMOVE (input: v102|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = MOVE input: v51|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE input: v115|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  558  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  560  <|@ instruction v65|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  562  <|@ instruction v66|DWORD = ADD (x: v65|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction v67|DWORD = ADD (x: v51|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr  566  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v67|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction v69|DWORD = SUB (x: v67|DWORD, ~y: v50|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v42|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: v69|DWORD, y: [v29|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v69|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction v73|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  632  <|@ instruction v72|QWORD = UNCOMPRESSPOINTER (input: v40|DWORD, ~baseRegister: v73|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  634  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: v74|QWORD, y: v72|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction v75|DWORD = SUB (x: v66|DWORD, ~y: v38|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction TESTBRANCH (x: v75|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: v75|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 24], y: v75|DWORD) size: DWORD <|@ <|@
      nr  692  <|@ instruction v76|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [v76|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  696  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v78|DWORD = MOV input: [v77|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = STACKMOVE (input: v122|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = STACKMOVE (input: v100|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction rsi|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rcx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  852  <|@ instruction r8|DWORD = MOVE input: v67|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction r9|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction rdi|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction out:0|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction out:8|DWORD = MOVE input: v66|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction out:16|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE input: v110|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr  866  <|@ instruction v68|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [v68|QWORD[.]] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction v79|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  892  <|@ instruction v80|DWORD = SUB (x: v79|DWORD, ~y: [v29|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  894  <|@ instruction CMP x: v80|DWORD y: 1 size: DWORD <|@ <|@
      nr  896  <|@ instruction v82|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  898  <|@ instruction v81|DWORD = CMOVE (falseValue: v80|DWORD, ~trueValue: v82|DWORD) condition: < <|@ <|@
      nr  900  <|@ instruction CMPCONSTBRANCH x: v81|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  942  <|@ instruction rsi|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr  946  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = STACKMOVE (input: v97|DWORD, ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = STACKMOVE (input: v95|DWORD, ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = STACKMOVE (input: v94|DWORD, ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = STACKMOVE (input: v92|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = STACKMOVE (input: v98|DWORD, ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1086  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v16|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr 1088  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr 1090  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr 1092  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v142|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1094  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr 1096  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr 1098  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr 1100  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v17|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction JUMP ~outgoingValues: [int[-138771|0xfffffffffffde1ed], long[3220|0xc94]] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction JUMP ~outgoingValues: [int[-153107|0xfffffffffffda9ed], long[4500|0x1194]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [int[-147987|0xfffffffffffdbded], long[10900|0x2a94]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction JUMP ~outgoingValues: [int[-156179|0xfffffffffffd9ded], long[4500|0x1194]] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [int[-155155|0xfffffffffffda1ed], long[3860|0xf14]] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [int[-154131|0xfffffffffffda5ed], long[3220|0xc94]] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [int[-152083|0xfffffffffffdaded], long[3860|0xf14]] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [int[-76083|0xfffffffffffed6cd], long[17300|0x4394]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1206  <|@ instruction [v83|DWORD, v84|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v83|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v84|QWORD) size: QWORD <|@ <|@
      nr 1226  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v29|QWORD[.] v69|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v29|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v29|QWORD[.] v69|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v45|QWORD[.] v66|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction JUMP ~outgoingValues: [int[-160531|0xfffffffffffd8ced], long[8340|0x2094]] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction JUMP ~outgoingValues: [int[-136723|0xfffffffffffde9ed], long[1300|0x514]] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1266  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr 1268  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v77|QWORD[.] 
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction JUMP ~outgoingValues: [int[-140819|0xfffffffffffdd9ed], long[5140|0x1414]] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [int[-139795|0xfffffffffffddded], long[3860|0xf14]] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction JUMP ~outgoingValues: [int[-151059|0xfffffffffffdb1ed], long[3220|0xc94]] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1300  <|@ instruction [v70|DWORD, v71|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v70|DWORD) size: DWORD <|@ <|@
      nr 1318  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v71|QWORD) size: QWORD <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v65|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] v46|QWORD[.] v51|DWORD v62|DWORD v48|QWORD[.] v56|DWORD v60|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction JUMP ~outgoingValues: [int[-145939|0xfffffffffffdc5ed], long[5780|0x1694]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1332  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr 1350  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr 1352  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1374  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [int[-150035|0xfffffffffffdb5ed], long[11540|0x2d14]] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1386  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr 1404  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr 1406  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction JUMP ~outgoingValues: [int[-137747|0xfffffffffffde5ed], long[1940|0x794]] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1418  <|@ instruction [v89|DWORD, v90|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v89|DWORD) size: DWORD <|@ <|@
      nr 1436  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v90|QWORD) size: QWORD <|@ <|@
      nr 1438  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[558, 560[[764, 765[[864, 866[[944, 946[[1086, 1087[[1090, 1092[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v64|d [0, 38[[154, 155[[556, 558[[764, 765[[850, 865[[1086, 1087[[1090, 1091[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v59|q [0, 36[[554, 558[[764, 765[[848, 865[[1086, 1087[[1090, 1091[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 30[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v55|q [0, 34[[552, 558[[762, 765[[846, 865[[942, 944[[1084, 1087[[1088, 1091[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v45|q [0, 1[[764, 765[[856, 865[[1086, 1087[[1090, 1091[ "NoSpillStore"
  r8|- fixed "[r8|-]" r8|- v67|d [0, 40[[558, 559[[764, 765[[852, 865[[1086, 1087[[1090, 1091[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- v62|d [0, 1[[558, 559[[764, 765[[854, 865[[1086, 1087[[1090, 1091[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[558, 559[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[764, 765[[864, 865[[1086, 1087[[1090, 1091[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [34, 434[34 MustHaveRegister 44 MustHaveRegister 98 MustHaveRegister 112 MustHaveRegister 144 MustHaveRegister 336 MustHaveRegister 340 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [36, 286[[920, 952[36 MustHaveRegister 42 MustHaveRegister 286 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [38, 116[38 MustHaveRegister 48 ShouldHaveRegister 74 MustHaveRegister 86 MustHaveRegister  "OneSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [40, 152[[1104, 1114[[1238, 1248[[1270, 1290[[1408, 1439[40 MustHaveRegister 48 ShouldHaveRegister 148 ShouldHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [42, 290[[920, 952[42 MustHaveRegister 50 ShouldHaveRegister 290 MustHaveRegister  "OneSpillStore"
  v5|d DWORD "[r11|d]" v5|d -1 [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d -1 [46, 162[46 MustHaveRegister 114 ShouldHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r9|d]" v7|d v2|d [48, 292[[920, 952[48 MustHaveRegister 50 MustHaveRegister 62 MustHaveRegister 74 ShouldHaveRegister 292 MustHaveRegister  "OneSpillStore"
  v8|d DWORD "[rax|d]" v8|d -1 [112, 161[112 MustHaveRegister 114 MustHaveRegister 158 ShouldHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rbx|d]" v9|d -1 [144, 146[144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v10|S SINGLE "[xmm0|S]" v10|S -1 [146, 154[146 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[r8|d]" v11|d v3|d [152, 156[152 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbx|d]" v12|d -1 [150, 153[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rdi|d]" v13|d v10|S [154, 156[154 MustHaveRegister 156 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbp|d]" v14|d -1 [154, 155[154 MustHaveRegister  "NoDefinitionFound"
  v15|d DWORD "[r8|d]" v15|d v11|d [156, 160[156 MustHaveRegister 158 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[r8|d]" v16|d v15|d [160, 164[160 MustHaveRegister 162 MustHaveRegister  "OneSpillStore"
  v17|q QWORD "[rax|q]" v17|q rax|q [1092, 1101[1092 MustHaveRegister 1096 MustHaveRegister 1100 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[r10|q]" v18|q -1 [1094, 1095[1094 MustHaveRegister  "NoDefinitionFound"
  v19|q QWORD "[r11|q]" v19|q -1 [1094, 1095[1094 MustHaveRegister  "NoDefinitionFound"
  v20|d DWORD "[r10|d]" v20|d v17|q [1096, 1098[1096 MustHaveRegister 1098 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[r10|q]" v21|q -1 [1100, 1101[1100 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[r11|q]" v22|q -1 [1100, 1101[1100 MustHaveRegister  "NoDefinitionFound"
  v23|q QWORD "[rcx|q]" v23|q -1 [202, 258[202 MustHaveRegister 204 MustHaveRegister 240 MustHaveRegister 242 MustHaveRegister 244 MustHaveRegister 246 MustHaveRegister 248 MustHaveRegister 250 MustHaveRegister 252 MustHaveRegister 254 MustHaveRegister 256 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[r11|q]" v24|q -1 [204, 238[204 MustHaveRegister 206 MustHaveRegister 238 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q -1 [940, 942[940 MustHaveRegister 942 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q rax|q [946, 951[946 MustHaveRegister 948 MustHaveRegister 950 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rcx|q]" v28|q v23|q [258, 261[258 MustHaveRegister 260 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rcx|q]" v29|q v28|q [262, 555[288 MustHaveRegister 290 MustHaveRegister 292 MustHaveRegister 294 MustHaveRegister 296 MustHaveRegister 298 MustHaveRegister 354 MustHaveRegister 356 MustHaveRegister 408 MustHaveRegister 416 MustHaveRegister 520 MustHaveRegister  "StoreAtDefinition"
  v30|d DWORD "[rdx|d]" v30|d v1|q [286, 288[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rbx|q]" v31|q -1 [300, 304[300 MustHaveRegister  "StoreAtDefinition"
  v32|d DWORD "[r10|d]" v32|d -1 [336, 410[[768, 790[336 MustHaveRegister 338 MustHaveRegister 406 MustHaveRegister 410 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[r11|d]" v33|d -1 [338, 372[[768, 778[338 MustHaveRegister 370 ShouldHaveRegister 778 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rdi|d]" v34|d -1 [340, 434[340 MustHaveRegister 342 MustHaveRegister 344 MustHaveRegister 346 MustHaveRegister 348 MustHaveRegister 350 MustHaveRegister 352 MustHaveRegister 412 MustHaveRegister  "OneSpillStore"
  v35|d DWORD "[r8|d]" v35|d -1 [342, 516[[768, 790[342 MustHaveRegister 430 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[r9|d]" v36|d -1 [344, 432[[768, 790[344 MustHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[rdx|d]" v37|d -1 [346, 532[[768, 790[346 MustHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rbp|d]" v38|d -1 [348, 545[348 MustHaveRegister 532 ShouldHaveRegister 540 ShouldHaveRegister  "OneSpillStore"
  v39|d DWORD "[r13|d]" v39|d -1 [350, 541[350 MustHaveRegister 540 ShouldHaveRegister  "OneSpillStore"
  v40|d DWORD "[r14|d]" v40|d -1 [352, 382[352 MustHaveRegister  "OneSpillStore"
  v41|d DWORD "[rax|d]" v41|d -1 [354, 522[[768, 790[354 MustHaveRegister 358 ShouldHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rbx|d]" v42|d -1 [356, 582[[768, 790[356 MustHaveRegister 358 MustHaveRegister 544 ShouldHaveRegister 582 ShouldHaveRegister  "NoSpillStore"
  v43|d DWORD "[r11|d]" v43|d -1 [408, 512[408 MustHaveRegister 414 MustHaveRegister 512 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[r10|q]" v44|q v32|d [410, 434[410 MustHaveRegister  "StoreAtDefinition"
  v45|q QWORD "[r14|q]" v45|q v34|d [412, 434[412 MustHaveRegister  "StoreAtDefinition"
  v46|q QWORD "[r11|q]" v46|q v43|d [512, 557[512 MustHaveRegister 514 ShouldHaveRegister  "OneSpillStore"
  v47|q QWORD "[r9|q]" v47|q v46|q [514, 530[514 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[r8|q]" v48|q v35|d [516, 557[516 MustHaveRegister 518 ShouldHaveRegister  "OneSpillStore"
  v49|q QWORD "[r14|q]" v49|q v48|q [518, 538[518 MustHaveRegister 538 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[rdi|d]" v50|d -1 [520, 581[520 MustHaveRegister 522 ShouldHaveRegister 544 ShouldHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v51|d DWORD "[rax|d]" v51|d v41|d [522, 557[522 MustHaveRegister 524 ShouldHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[r10|q]" v52|q -1 [524, 526[524 MustHaveRegister 526 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[r10|q]" v53|q v52|q [526, 528[526 MustHaveRegister 528 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q -1 [528, 530[528 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[r10|q]" v55|q v54|q [530, 552[530 MustHaveRegister 552 ShouldHaveRegister  "NoSpillStore"
  v56|d DWORD "[rdx|d]" v56|d v37|d [532, 553[532 MustHaveRegister 534 ShouldHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[r9|q]" v57|q -1 [534, 536[534 MustHaveRegister 536 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[r9|q]" v58|q -1 [536, 538[536 MustHaveRegister 538 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[r9|q]" v59|q v58|q [538, 554[538 MustHaveRegister 554 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[r14|d]" v60|d v39|d [540, 543[540 MustHaveRegister 542 MustHaveRegister  "OneSpillStore"
  v61|d DWORD "[r13|d]" v61|d v60|d [542, 551[542 MustHaveRegister 548 ShouldHaveRegister 550 MustHaveRegister  "NoSpillStore"
  v62|d DWORD "[r14|d]" v62|d v42|d [544, 608[[812, 854[[1114, 1124[[1186, 1196[[1290, 1321[544 MustHaveRegister 546 MustHaveRegister 566 MustHaveRegister 854 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[rbp|d]" v63|d v62|d [546, 550[546 MustHaveRegister 548 MustHaveRegister 550 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[rbp|d]" v64|d v63|d [550, 556[550 MustHaveRegister 556 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[rax|d]" v65|d rax|q [560, 608[[1114, 1124[[1186, 1196[[1290, 1321[560 MustHaveRegister 562 ShouldHaveRegister 564 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[r10|d]" v66|d v65|d [562, 678[[812, 860[[1156, 1186[[1196, 1227[562 MustHaveRegister 650 MustHaveRegister 860 MustHaveRegister  "NoSpillStore"
  v67|d DWORD "[r11|d]" v67|d v51|d [564, 580[[812, 852[564 MustHaveRegister 566 ShouldHaveRegister 580 MustHaveRegister 852 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rax|q]" v68|q rax|q [866, 869[866 MustHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v69|d DWORD "[r11|d]" v69|d v67|d [580, 678[580 MustHaveRegister 582 MustHaveRegister 594 MustHaveRegister 606 MustHaveRegister 628 MustHaveRegister  "NoSpillStore"
  v70|d DWORD "[r11|d]" v70|d -1 [1300, 1316[1316 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[r9|q]" v71|q -1 [1300, 1318[1318 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[r14|q]" v72|q v40|d [632, 636[632 MustHaveRegister 636 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q -1 [630, 633[630 MustHaveRegister 632 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rsi|q]" v74|q -1 [634, 636[634 MustHaveRegister 636 MustHaveRegister  "NoSpillStore"
  v75|d DWORD "[rsi|d]" v75|d v66|d [650, 690[650 MustHaveRegister 652 MustHaveRegister 664 MustHaveRegister 676 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[rbx|q]" v76|q v31|q [692, 695[692 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[rbx|q]" v77|q v76|q [696, 746[[790, 812[[1248, 1269[[1354, 1375[708 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[r10|d]" v78|d -1 [708, 744[[790, 812[708 MustHaveRegister 710 MustHaveRegister 732 MustHaveRegister 744 ShouldHaveRegister 800 ShouldHaveRegister  "NoSpillStore"
  v79|d DWORD "[rsi|d]" v79|d -1 [890, 892[890 MustHaveRegister 892 MustHaveRegister  "NoSpillStore"
  v80|d DWORD "[rsi|d]" v80|d v79|d [892, 898[892 MustHaveRegister 894 ShouldHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v81|d DWORD "[rsi|d]" v81|d v80|d [898, 900[898 MustHaveRegister 900 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[rax|d]" v82|d -1 [896, 899[896 MustHaveRegister 898 MustHaveRegister  "NoSpillStore"
  v83|d DWORD "[r8|d]" v83|d -1 [1206, 1222[1222 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[r9|q]" v84|q -1 [1206, 1224[1224 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[r10|d]" v85|d -1 [1386, 1402[1402 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[r11|q]" v86|q -1 [1386, 1404[1404 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[r10|d]" v87|d -1 [1332, 1348[1348 MustHaveRegister  "NoSpillStore"
  v88|q QWORD "[r11|q]" v88|q -1 [1332, 1350[1350 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[r10|d]" v89|d -1 [1418, 1434[1434 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[r11|q]" v90|q -1 [1418, 1436[1436 MustHaveRegister  "NoSpillStore"
  v91|q QWORD "[vstack:8|q]" v0|q v0|q [434, 551[ "StoreAtDefinition"
  v92|q QWORD "[vstack:14|q]" v1|q v1|q [952, 1085[ "OneSpillStore"
  v93|d DWORD "[rcx|d]" v2|d v2|d [116, 153[ "OneSpillStore"
  v94|d DWORD "[vstack:15|d]" v4|d v4|d [952, 1085[ "OneSpillStore"
  v95|d DWORD "[vstack:16|d]" v7|d v7|d [952, 1085[ "OneSpillStore"
  v96|d DWORD "[rbx|d]" v2|d v2|d [153, 294[[920, 952[294 MustHaveRegister  "OneSpillStore"
  v97|d DWORD "[vstack:17|d]" v2|d v2|d [952, 1085[ "OneSpillStore"
  v98|d DWORD "[vstack:13|d]" v16|d v16|d [952, 1085[ "OneSpillStore"
  v99|q QWORD "[vstack:9|q]" v29|q v29|q [555, 596[ "StoreAtDefinition"
  v100|q QWORD "[vstack:0|q]" v31|q v31|q [746, 763[ "StoreAtDefinition"
  v101|q QWORD "[vstack:0|q]" v31|q v31|q [304, 746[692 ShouldHaveRegister  "StoreAtDefinition"
  v102|q QWORD "[vstack:4|q]" v44|q v44|q [434, 557[ "StoreAtDefinition"
  v103|q QWORD "[vstack:2|q]" v45|q v45|q [863, 870[[1114, 1124[[1146, 1227[[1290, 1321[[1354, 1375[[1376, 1386[ "StoreAtDefinition"
  v104|d DWORD "[r14|d]" v40|d v40|d [608, 632[[768, 790[632 MustHaveRegister  "OneSpillStore"
  v105|d DWORD "[vstack:1|d]" v40|d v40|d [382, 608[ "OneSpillStore"
  v106|q QWORD "[vstack:8|q]" v0|q v0|q [551, 746[ "StoreAtDefinition"
  v107|q QWORD "[vstack:4|q]" v44|q v44|q [557, 712[[790, 802[[812, 870[[1114, 1124[[1146, 1227[[1290, 1321[[1354, 1375[[1376, 1386[846 ShouldHaveRegister  "StoreAtDefinition"
  v108|q QWORD "[vstack:10|q]" v46|q v46|q [557, 608[[812, 850[[1114, 1124[[1186, 1196[[1290, 1300[850 ShouldHaveRegister  "OneSpillStore"
  v109|q QWORD "[vstack:11|q]" v48|q v48|q [557, 608[ "OneSpillStore"
  v110|q QWORD "[rbx|q]" v45|q v45|q [812, 863[856 ShouldHaveRegister  "StoreAtDefinition"
  v111|q QWORD "[vstack:2|q]" v45|q v45|q [434, 712[[790, 802[ "StoreAtDefinition"
  v112|d DWORD "[rdi|d]" v34|d v34|d [666, 690[[768, 790[676 MustHaveRegister 690 MustHaveRegister  "OneSpillStore"
  v113|d DWORD "[vstack:3|d]" v34|d v34|d [434, 666[ "OneSpillStore"
  v114|d DWORD "[r13|d]" v51|d v51|d [557, 608[[1114, 1124[[1186, 1196[[1290, 1321[564 ShouldHaveRegister  "NoSpillStore"
  v115|d DWORD "[r10|d]" v56|d v56|d [553, 557[ "NoSpillStore"
  v116|d DWORD "[vstack:5|d]" v39|d v39|d [541, 652[[768, 790[652 ShouldHaveRegister  "OneSpillStore"
  v117|d DWORD "[rax|d]" v60|d v60|d [812, 862[862 MustHaveRegister  "OneSpillStore"
  v118|d DWORD "[vstack:6|d]" v60|d v60|d [543, 608[ "OneSpillStore"
  v119|d DWORD "[vstack:7|d]" v38|d v38|d [545, 651[[768, 790[650 ShouldHaveRegister  "OneSpillStore"
  v120|q QWORD "[vstack:8|q]" v0|q v0|q [763, 902[[920, 952[767 LiveAtLoopEnd  "StoreAtDefinition"
  v121|d DWORD "[rbp|d]" v56|d v56|d [557, 608[[1114, 1124[[1186, 1196[[1290, 1321[562 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[vstack:9|q]" v29|q v29|q [746, 763[ "StoreAtDefinition"
  v123|q QWORD "[r10|q]" v0|q v0|q [746, 763[762 ShouldHaveRegister  "StoreAtDefinition"
  v124|q QWORD "[rcx|q]" v29|q v29|q [596, 746[606 MustHaveRegister 628 MustHaveRegister  "StoreAtDefinition"
  v125|q QWORD "[r8|q]" v44|q v44|q [1386, 1407[ "StoreAtDefinition"
  v126|q QWORD "[rbx|q]" v46|q v46|q [1300, 1321[ "OneSpillStore"
  v127|q QWORD "[r8|q]" v48|q v48|q [812, 851[ "OneSpillStore"
  v128|q QWORD "[vstack:9|q]" v29|q v29|q [763, 870[767 LiveAtLoopEnd 848 ShouldHaveRegister  "StoreAtDefinition"
  v129|q QWORD "[vstack:0|q]" v31|q v31|q [763, 870[767 LiveAtLoopEnd  "StoreAtDefinition"
  v130|q QWORD "[rcx|q]" v29|q v29|q [870, 902[[1114, 1145[[1146, 1227[[1228, 1238[[1248, 1269[[1290, 1321[[1322, 1353[[1354, 1375[[1376, 1407[890 MustHaveRegister 892 MustHaveRegister  "StoreAtDefinition"
  v131|q QWORD "[rsi|q]" v0|q v0|q [952, 1083[ "StoreAtDefinition"
  v132|q QWORD "[rbp|q]" v48|q v48|q [851, 858[858 MustHaveRegister  "OneSpillStore"
  v133|d DWORD "[r10|d]" v60|d v60|d [1114, 1124[[1186, 1196[[1290, 1321[ "OneSpillStore"
  v134|q QWORD "[r8|q]" v48|q v48|q [1114, 1124[[1186, 1196[[1290, 1321[ "OneSpillStore"
  v135|q QWORD "[r14|q]" v45|q v45|q [1386, 1407[ "StoreAtDefinition"
  v136|q QWORD "[r11|q]" v0|q v0|q [1083, 1085[1084 ShouldHaveRegister  "StoreAtDefinition"
  v137|d DWORD "[vstack:13|d]" v16|d v16|d [1085, 1088[1088 ShouldHaveRegister  "OneSpillStore"
  v138|d DWORD "[vstack:17|d]" v2|d v2|d [1085, 1114[[1238, 1248[[1270, 1290[[1408, 1418[ "OneSpillStore"
  v139|d DWORD "[vstack:16|d]" v7|d v7|d [1085, 1104[ "OneSpillStore"
  v140|d DWORD "[vstack:15|d]" v4|d v4|d [1085, 1104[ "OneSpillStore"
  v141|q QWORD "[vstack:14|q]" v1|q v1|q [1085, 1114[[1238, 1248[[1270, 1290[[1408, 1418[ "OneSpillStore"
  v142|q QWORD "[vstack:8|q]" v0|q v0|q [1085, 1093[ "StoreAtDefinition"
  v143|d DWORD "[r11|d]" v69|d v69|d [1156, 1186[[1196, 1227[ "NoSpillStore"
  v144|q QWORD "[rsi|q]" v0|q v0|q [1093, 1145[[1146, 1227[[1228, 1269[[1270, 1321[[1322, 1353[[1354, 1375[[1376, 1407[[1408, 1439[1094 MustHaveRegister 1098 MustHaveRegister 1100 MustHaveRegister  "StoreAtDefinition"
  v145|q QWORD "[rdx|q]" v1|q v1|q [1418, 1439[ "OneSpillStore"
  v146|d DWORD "[rcx|d]" v2|d v2|d [1418, 1439[ "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v7|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction v9|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v10|SINGLE = MOVSS input: [v9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr  148  <|@ instruction CMP x: v3|DWORD y: 1 size: DWORD <|@ <|@
      nr  150  <|@ instruction v12|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  152  <|@ instruction v11|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: v93|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction v13|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v10|SINGLE {tmp: v14|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  156  <|@ instruction v15|DWORD = IMUL (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction CMP (x: v15|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction v16|DWORD = CMOVE (falseValue: v15|DWORD, ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v6|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  204  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + 312] instr: 0 <|@ <|@
      nr  242  <|@ instruction MOV x: [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr  244  <|@ instruction MOV x: [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  246  <|@ instruction MOV x: [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  248  <|@ instruction MOV x: [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV x: [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  252  <|@ instruction MOV x: [v23|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  254  <|@ instruction MOV x: [v23|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV x: [v23|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  258  <|@ instruction v28|QWORD[.] = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [v29|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction MOV (x: [v29|QWORD[.] + 48], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [v29|QWORD[.] + 32], y: v4|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV (x: [v29|QWORD[.] + 28], y: v7|DWORD) size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [v29|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [v29|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction v31|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v33|DWORD = MOV input: [v32|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr  340  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  342  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v35|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr  344  <|@ instruction v36|DWORD = MOVSXB input: [v34|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  346  <|@ instruction v37|DWORD = MOV input: [v34|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  348  <|@ instruction v38|DWORD = MOV input: [v34|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  350  <|@ instruction v39|DWORD = MOV input: [v34|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  352  <|@ instruction v40|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  354  <|@ instruction v41|DWORD = MOV input: [v29|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  356  <|@ instruction v42|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: v42|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: v40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction MOV x: [v32|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  408  <|@ instruction v43|DWORD[_] = MOV input: [v29|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  410  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  412  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  416  <|@ instruction CMPCONSTBRANCH x: [v29|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v35|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  432  <|@ instruction TESTBYTEBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[_] = MOVE input: v34|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  514  <|@ instruction v47|QWORD[*] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction v49|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction v50|DWORD = MOV input: [v29|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  522  <|@ instruction v51|DWORD = ADD (x: v41|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction v52|QWORD = MOVSXD value: v51|DWORD size: QWORD <|@ <|@
      nr  526  <|@ instruction v53|QWORD = SHL value: v52|QWORD size: QWORD <|@ <|@
      nr  528  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr  530  <|@ instruction v55|QWORD[*] = ADD (x: v54|QWORD, y: v47|QWORD[*]) size: QWORD <|@ <|@
      nr  532  <|@ instruction v56|DWORD = ADD (x: v37|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction v57|QWORD = MOVSXD value: v56|DWORD size: QWORD <|@ <|@
      nr  536  <|@ instruction v58|QWORD = LEA address: [v57|QWORD + 16] size: QWORD <|@ <|@
      nr  538  <|@ instruction v59|QWORD[*] = ADD (x: v58|QWORD, y: v49|QWORD[*]) size: QWORD <|@ <|@
      nr  540  <|@ instruction v60|DWORD = ADD (x: v39|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v39|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction v61|DWORD = SUB (x: v60|DWORD, ~y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVE input: v60|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction v62|DWORD = ADD (x: v42|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVE input: v38|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  546  <|@ instruction v63|DWORD = SUB (x: v62|DWORD, ~y: v51|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction CMP (x: v63|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction v64|DWORD = CMOVE (falseValue: v63|DWORD, ~trueValue: v61|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  552  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVE input: v56|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  554  <|@ instruction rdx|QWORD = MOVE input: v59|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ instruction rcx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = STACKMOVE (input: v102|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = MOVE input: v51|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE input: v115|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  558  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  560  <|@ instruction v65|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  562  <|@ instruction v66|DWORD = ADD (x: v65|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction v67|DWORD = ADD (x: v51|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr  566  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v67|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction v69|DWORD = SUB (x: v67|DWORD, ~y: v50|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v42|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: v69|DWORD, y: [v29|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVE input: v105|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v69|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction v73|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  632  <|@ instruction v72|QWORD = UNCOMPRESSPOINTER (input: v40|DWORD, ~baseRegister: v73|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  634  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: v74|QWORD, y: v72|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction v75|DWORD = SUB (x: v66|DWORD, ~y: v38|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction TESTBRANCH (x: v75|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v112|DWORD[_] = MOVE input: v113|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: v75|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 24], y: v75|DWORD) size: DWORD <|@ <|@
      nr  692  <|@ instruction v76|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  696  <|@ instruction [v77|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v78|DWORD = MOV input: [v77|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = STACKMOVE (input: v122|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = STACKMOVE (input: v100|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v39|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVE input: v38|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: v104|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: v116|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: v119|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  810  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v118|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE input: v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction rsi|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rcx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  852  <|@ instruction r8|DWORD = MOVE input: v67|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction r9|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction rdi|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction out:0|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction out:8|DWORD = MOVE input: v66|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction out:16|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE input: v110|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr  866  <|@ instruction v68|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction v79|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  892  <|@ instruction v80|DWORD = SUB (x: v79|DWORD, ~y: [v29|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  894  <|@ instruction CMP x: v80|DWORD y: 1 size: DWORD <|@ <|@
      nr  896  <|@ instruction v82|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  898  <|@ instruction v81|DWORD = CMOVE (falseValue: v80|DWORD, ~trueValue: v82|DWORD) condition: < <|@ <|@
      nr  900  <|@ instruction CMPCONSTBRANCH x: v81|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  942  <|@ instruction rsi|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr  946  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE input: v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = STACKMOVE (input: v97|DWORD, ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = STACKMOVE (input: v95|DWORD, ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = STACKMOVE (input: v94|DWORD, ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = STACKMOVE (input: v92|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = STACKMOVE (input: v98|DWORD, ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1086  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v16|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr 1088  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr 1090  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr 1092  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v142|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1094  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr 1096  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr 1098  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr 1100  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v17|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: v139|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v140|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: int[-138771|0xfffffffffffde1ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = MOVE input: v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1112  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v118|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v108|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1122  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOVE input: long[10900|0x2a94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: int[-147987|0xfffffffffffdbded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v107|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOVE input: int[-156179|0xfffffffffffd9ded] // MoveResolver resolve mapping <|@ <|@
      nr 1164  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOVE input: int[-155155|0xfffffffffffda1ed] // MoveResolver resolve mapping <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] // MoveResolver resolve mapping <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v118|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v108|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOVE input: long[17300|0x4394] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOVE input: int[-76083|0xfffffffffffed6cd] // MoveResolver resolve mapping <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1206  <|@ instruction [v83|DWORD, v84|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v83|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v84|QWORD) size: QWORD <|@ <|@
      nr 1226  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v29|QWORD[.] v69|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v29|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v29|QWORD[.] v69|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v45|QWORD[.] v66|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: int[-160531|0xfffffffffffd8ced] // MoveResolver resolve mapping <|@ <|@
      nr 1236  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: int[-136723|0xfffffffffffde9ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = MOVE input: v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1246  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1266  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr 1268  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v77|QWORD[.] 
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: int[-140819|0xfffffffffffdd9ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = MOVE input: v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1278  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: int[-139795|0xfffffffffffddded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = MOVE input: v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v118|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: int[-151059|0xfffffffffffdb1ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v108|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1298  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1300  <|@ instruction [v70|DWORD, v71|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v70|DWORD) size: DWORD <|@ <|@
      nr 1318  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v71|QWORD) size: QWORD <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v65|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] v46|QWORD[.] v51|DWORD v62|DWORD v48|QWORD[.] v56|DWORD v60|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed] // MoveResolver resolve mapping <|@ <|@
      nr 1330  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1332  <|@ instruction [v87|DWORD, v88|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr 1350  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr 1352  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1374  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOVE input: long[11540|0x2d14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: int[-150035|0xfffffffffffdb5ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v107|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1386  <|@ instruction [v85|DWORD, v86|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr 1404  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr 1406  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: int[-137747|0xfffffffffffde5ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = MOVE input: v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1416  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1418  <|@ instruction [v89|DWORD, v90|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v89|DWORD) size: DWORD <|@ <|@
      nr 1436  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v90|QWORD) size: QWORD <|@ <|@
      nr 1438  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   36  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction v7|DWORD = ADD (x: v2|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: v7|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v7|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH x: [v0|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction v8|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v6|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction v9|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction v10|SINGLE = MOVSS input: [v9|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr  148  <|@ instruction CMP x: v3|DWORD y: 1 size: DWORD <|@ <|@
      nr  150  <|@ instruction v12|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  152  <|@ instruction v11|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v12|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: v93|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction v13|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: v10|SINGLE {tmp: v14|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  156  <|@ instruction v15|DWORD = IMUL (x: v11|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction CMP (x: v15|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction v16|DWORD = CMOVE (falseValue: v15|DWORD, ~trueValue: v8|DWORD) condition: > <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v6|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v23|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  204  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + 312] instr: 0 <|@ <|@
      nr  242  <|@ instruction MOV x: [v23|QWORD] y: 1 size: QWORD <|@ <|@
      nr  244  <|@ instruction MOV x: [v23|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  246  <|@ instruction MOV x: [v23|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  248  <|@ instruction MOV x: [v23|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV x: [v23|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  252  <|@ instruction MOV x: [v23|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  254  <|@ instruction MOV x: [v23|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV x: [v23|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  258  <|@ instruction v28|QWORD[.] = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction v30|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction MOV (x: [v29|QWORD[.] + 48], y: v30|DWORD[_]) size: DWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [v29|QWORD[.] + 32], y: v4|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV (x: [v29|QWORD[.] + 28], y: v7|DWORD) size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v2|DWORD) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [v29|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [v29|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction v31|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction v32|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v33|DWORD = MOV input: [v32|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr  340  <|@ instruction v34|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  342  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v35|DWORD[_] = MOV input: [v34|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr  344  <|@ instruction v36|DWORD = MOVSXB input: [v34|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  346  <|@ instruction v37|DWORD = MOV input: [v34|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  348  <|@ instruction v38|DWORD = MOV input: [v34|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  350  <|@ instruction v39|DWORD = MOV input: [v34|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  352  <|@ instruction v40|DWORD = MOV input: [v34|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  354  <|@ instruction v41|DWORD = MOV input: [v29|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  356  <|@ instruction v42|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: v42|DWORD, y: v41|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: v40|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction MOV x: [v32|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  408  <|@ instruction v43|DWORD[_] = MOV input: [v29|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  410  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  412  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v43|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  416  <|@ instruction CMPCONSTBRANCH x: [v29|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [v35|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  432  <|@ instruction TESTBYTEBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[_] = MOVE input: v34|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  514  <|@ instruction v47|QWORD[*] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction v49|QWORD[*] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction v50|DWORD = MOV input: [v29|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  522  <|@ instruction v51|DWORD = ADD (x: v41|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction v52|QWORD = MOVSXD value: v51|DWORD size: QWORD <|@ <|@
      nr  526  <|@ instruction v53|QWORD = SHL value: v52|QWORD size: QWORD <|@ <|@
      nr  528  <|@ instruction v54|QWORD = LEA address: [v53|QWORD + 16] size: QWORD <|@ <|@
      nr  530  <|@ instruction v55|QWORD[*] = ADD (x: v54|QWORD, y: v47|QWORD[*]) size: QWORD <|@ <|@
      nr  532  <|@ instruction v56|DWORD = ADD (x: v37|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction v57|QWORD = MOVSXD value: v56|DWORD size: QWORD <|@ <|@
      nr  536  <|@ instruction v58|QWORD = LEA address: [v57|QWORD + 16] size: QWORD <|@ <|@
      nr  538  <|@ instruction v59|QWORD[*] = ADD (x: v58|QWORD, y: v49|QWORD[*]) size: QWORD <|@ <|@
      nr  540  <|@ instruction v60|DWORD = ADD (x: v39|DWORD, y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v39|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction v61|DWORD = SUB (x: v60|DWORD, ~y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVE input: v60|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction v62|DWORD = ADD (x: v42|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVE input: v38|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  546  <|@ instruction v63|DWORD = SUB (x: v62|DWORD, ~y: v51|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction CMP (x: v63|DWORD, y: v61|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction v64|DWORD = CMOVE (falseValue: v63|DWORD, ~trueValue: v61|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  552  <|@ instruction rsi|QWORD = MOVE input: v55|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVE input: v56|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  554  <|@ instruction rdx|QWORD = MOVE input: v59|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  556  <|@ instruction rcx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = MOVE input: v51|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE input: v115|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  558  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  560  <|@ instruction v65|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  562  <|@ instruction v66|DWORD = ADD (x: v65|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction v67|DWORD = ADD (x: v51|DWORD, y: v65|DWORD) size: DWORD <|@ <|@
      nr  566  <|@ instruction CMPBRANCH (x: v62|DWORD, y: v67|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction v69|DWORD = SUB (x: v67|DWORD, ~y: v50|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v69|DWORD, y: v42|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: v69|DWORD, y: v69|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: v69|DWORD, y: [v29|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVE input: v105|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction MOV (x: [v29|QWORD[.] + 24], y: v69|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction v73|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  632  <|@ instruction v72|QWORD = UNCOMPRESSPOINTER (input: v40|DWORD, ~baseRegister: v73|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  634  <|@ instruction v74|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: v74|QWORD, y: v72|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction v75|DWORD = SUB (x: v66|DWORD, ~y: v38|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction CMPBRANCH (x: v75|DWORD, y: v39|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction TESTBRANCH (x: v75|DWORD, y: v75|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v112|DWORD[_] = MOVE input: v113|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: v75|DWORD, y: [v34|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV (x: [v34|DWORD[_] * 8 + 24], y: v75|DWORD) size: DWORD <|@ <|@
      nr  692  <|@ instruction v76|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction v78|DWORD = MOV input: [v77|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: v78|DWORD, y: v78|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: v39|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVE input: v38|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: v33|DWORD, y: v33|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: v104|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE input: v116|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE input: v119|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: v78|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  810  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v118|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE input: v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction rsi|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rcx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v127|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  852  <|@ instruction r8|DWORD = MOVE input: v67|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction r9|DWORD = MOVE input: v62|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction rdi|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction out:0|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction out:8|DWORD = MOVE input: v66|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction out:16|DWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr  866  <|@ instruction v68|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction v79|DWORD = MOV input: [v29|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  892  <|@ instruction v80|DWORD = SUB (x: v79|DWORD, ~y: [v29|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  894  <|@ instruction CMP x: v80|DWORD y: 1 size: DWORD <|@ <|@
      nr  896  <|@ instruction v82|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  898  <|@ instruction v81|DWORD = CMOVE (falseValue: v80|DWORD, ~trueValue: v82|DWORD) condition: < <|@ <|@
      nr  900  <|@ instruction CMPCONSTBRANCH x: v81|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  942  <|@ instruction rsi|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr  946  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE input: v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = STACKMOVE (input: v97|DWORD, ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = STACKMOVE (input: v95|DWORD, ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = STACKMOVE (input: v94|DWORD, ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = STACKMOVE (input: v92|QWORD[.], ~backupSlot: vstack:12|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = STACKMOVE (input: v98|DWORD, ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1086  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: v0|QWORD[.] - - - v16|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr 1088  <|@ instruction rsi|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr 1090  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: v0|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: v0|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=v2|DWORD,limit=v7|DWORD,capacity=v4|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=v1|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] v2|DWORD v7|DWORD v4|DWORD Object[null] int[0|0x0] int[0|0x0] v1|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr 1092  <|@ instruction v17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v142|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1094  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 36], ~expectedObject: -) {temp: v18|QWORD, temp2: v19|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr 1096  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v17|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr 1098  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr 1100  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v17|QWORD[.]) {temp: v21|QWORD, temp2: v22|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: v139|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v140|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: int[-138771|0xfffffffffffde1ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = MOVE input: v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1112  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v118|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v108|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1122  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOVE input: long[10900|0x2a94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: int[-147987|0xfffffffffffdbded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v107|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOVE input: int[-156179|0xfffffffffffd9ded] // MoveResolver resolve mapping <|@ <|@
      nr 1164  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOVE input: int[-155155|0xfffffffffffda1ed] // MoveResolver resolve mapping <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] // MoveResolver resolve mapping <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v118|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v108|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOVE input: long[17300|0x4394] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOVE input: int[-76083|0xfffffffffffed6cd] // MoveResolver resolve mapping <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v83|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v84|QWORD) size: QWORD <|@ <|@
      nr 1226  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: v29|QWORD[.] v69|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: v29|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: v29|QWORD[.] v69|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - v45|QWORD[.] v66|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: int[-160531|0xfffffffffffd8ced] // MoveResolver resolve mapping <|@ <|@
      nr 1236  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: int[-136723|0xfffffffffffde9ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = MOVE input: v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1246  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1266  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr 1268  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: v77|QWORD[.] 
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: int[-140819|0xfffffffffffdd9ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = MOVE input: v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1278  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: int[-139795|0xfffffffffffddded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = MOVE input: v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v118|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v106|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: int[-151059|0xfffffffffffdb1ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v108|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1298  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v70|DWORD) size: DWORD <|@ <|@
      nr 1318  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v71|QWORD) size: QWORD <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: v65|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] v46|QWORD[.] v51|DWORD v62|DWORD v48|QWORD[.] v56|DWORD v60|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed] // MoveResolver resolve mapping <|@ <|@
      nr 1330  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v87|DWORD) size: DWORD <|@ <|@
      nr 1350  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v88|QWORD) size: QWORD <|@ <|@
      nr 1352  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1374  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: v77|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = MOVE input: long[11540|0x2d14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: int[-150035|0xfffffffffffdb5ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v107|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v85|DWORD) size: DWORD <|@ <|@
      nr 1404  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v86|QWORD) size: QWORD <|@ <|@
      nr 1406  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: v44|QWORD[.] v29|QWORD[.] v45|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: v0|QWORD[.] v29|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v90|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVE input: int[-137747|0xfffffffffffde5ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE input: v138|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = MOVE input: v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1416  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v89|DWORD) size: DWORD <|@ <|@
      nr 1436  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v90|QWORD) size: QWORD <|@ <|@
      nr 1438  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r9|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rbx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr  148  <|@ instruction CMP x: r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  150  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  152  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rbx|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction rdi|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rbp|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  156  <|@ instruction r8|DWORD = IMUL (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  204  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  242  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  244  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  246  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  248  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  252  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  254  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  258  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction MOV (x: [rcx|QWORD[.] + 48], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV (x: [rcx|QWORD[.] + 28], y: r9|DWORD) size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [rcx|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [rcx|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr  340  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  342  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr  344  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  346  <|@ instruction rdx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  348  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  350  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  352  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  354  <|@ instruction rax|DWORD = MOV input: [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  356  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  408  <|@ instruction r11|DWORD[_] = MOV input: [rcx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  410  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  412  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  416  <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  432  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  514  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  522  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  526  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  528  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  530  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  532  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction r9|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  536  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  538  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  540  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  546  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  552  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  554  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:11|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  558  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  562  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction r11|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  566  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  632  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  634  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: vstack:7|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: vstack:5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD[_] = MOVE input: vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  692  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] rcx|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: vstack:8|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: vstack:8|QWORD[.] vstack:9|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  810  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  852  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] vstack:9|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: vstack:8|QWORD[.] vstack:9|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  892  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rcx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  894  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  896  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  898  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr  900  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  944  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: vstack:8|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: vstack:8|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:16|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: vstack:8|QWORD[.] - - - vstack:13|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: vstack:8|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=vstack:17|DWORD,limit=vstack:16|DWORD,capacity=vstack:15|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=vstack:14|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=vstack:17|DWORD,limit=vstack:16|DWORD,capacity=vstack:15|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=vstack:14|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] vstack:17|DWORD vstack:16|DWORD vstack:15|DWORD Object[null] int[0|0x0] int[0|0x0] vstack:14|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr 1088  <|@ instruction rsi|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr 1090  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: vstack:8|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: vstack:8|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=vstack:17|DWORD,limit=vstack:16|DWORD,capacity=vstack:15|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=vstack:14|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=vstack:17|DWORD,limit=vstack:16|DWORD,capacity=vstack:15|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=vstack:14|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] vstack:17|DWORD vstack:16|DWORD vstack:15|DWORD Object[null] int[0|0x0] int[0|0x0] vstack:14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1094  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr 1096  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr 1098  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1100  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-138771|0xfffffffffffde1ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1112  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1122  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[10900|0x2a94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-147987|0xfffffffffffdbded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-156179|0xfffffffffffd9ded] // MoveResolver resolve mapping <|@ <|@
      nr 1164  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-155155|0xfffffffffffda1ed] // MoveResolver resolve mapping <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] // MoveResolver resolve mapping <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[17300|0x4394] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-76083|0xfffffffffffed6cd] // MoveResolver resolve mapping <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1226  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: rcx|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: rcx|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: rcx|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - vstack:2|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] rcx|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-160531|0xfffffffffffd8ced] // MoveResolver resolve mapping <|@ <|@
      nr 1236  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-136723|0xfffffffffffde9ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1246  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1266  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr 1268  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-140819|0xfffffffffffdd9ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1278  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-139795|0xfffffffffffddded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-151059|0xfffffffffffdb1ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1298  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1318  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: vstack:4|QWORD[.] rcx|QWORD[.] vstack:2|QWORD[.] rbx|QWORD[.] r13|DWORD r14|DWORD r8|QWORD[.] rbp|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] rcx|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed] // MoveResolver resolve mapping <|@ <|@
      nr 1330  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1350  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1352  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1374  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] rcx|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[11540|0x2d14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-150035|0xfffffffffffdb5ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1404  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1406  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r8|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-137747|0xfffffffffffde5ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1416  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1436  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1438  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   44  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   48  <|@ instruction r9|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rbx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr  148  <|@ instruction CMP x: r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  150  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  152  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rbx|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction rdi|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rbp|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  156  <|@ instruction r8|DWORD = IMUL (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  158  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  162  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  204  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  242  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  244  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  246  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  248  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  252  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  254  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  258  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  288  <|@ instruction MOV (x: [rcx|QWORD[.] + 48], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction MOV (x: [rcx|QWORD[.] + 28], y: r9|DWORD) size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [rcx|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [rcx|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr  340  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  342  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr  344  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  346  <|@ instruction rdx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  348  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  350  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  352  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  354  <|@ instruction rax|DWORD = MOV input: [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  356  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  358  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  408  <|@ instruction r11|DWORD[_] = MOV input: [rcx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  410  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  412  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  416  <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  432  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  514  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  522  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  524  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  526  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  528  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  530  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  532  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction r9|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  536  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  538  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  540  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  542  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  546  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  548  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  552  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  554  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:11|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  558  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  562  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  564  <|@ instruction r11|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  566  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r14|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr  630  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  632  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  634  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr  636  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: vstack:7|DWORD) size: DWORD <|@ <|@
      nr  652  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: vstack:5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD[_] = MOVE input: vstack:3|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  692  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] rcx|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: vstack:8|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr  710  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: vstack:8|QWORD[.] vstack:9|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  766  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: r14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r13|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  788  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  810  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  852  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  864  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] vstack:9|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: vstack:8|QWORD[.] vstack:9|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  868  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  892  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rcx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr  894  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  896  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  898  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr  900  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  944  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: vstack:8|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: vstack:8|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:13|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:16|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: vstack:8|QWORD[.] - - - vstack:13|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: vstack:8|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=vstack:17|DWORD,limit=vstack:16|DWORD,capacity=vstack:15|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=vstack:14|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=vstack:17|DWORD,limit=vstack:16|DWORD,capacity=vstack:15|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=vstack:14|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] vstack:17|DWORD vstack:16|DWORD vstack:15|DWORD Object[null] int[0|0x0] int[0|0x0] vstack:14|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr 1088  <|@ instruction rsi|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr 1090  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: vstack:8|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: vstack:8|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=vstack:17|DWORD,limit=vstack:16|DWORD,capacity=vstack:15|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=vstack:14|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=vstack:17|DWORD,limit=vstack:16|DWORD,capacity=vstack:15|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=vstack:14|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] vstack:17|DWORD vstack:16|DWORD vstack:15|DWORD Object[null] int[0|0x0] int[0|0x0] vstack:14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1094  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr 1096  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr 1098  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr 1100  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-138771|0xfffffffffffde1ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1112  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1122  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[10900|0x2a94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-147987|0xfffffffffffdbded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-156179|0xfffffffffffd9ded] // MoveResolver resolve mapping <|@ <|@
      nr 1164  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-155155|0xfffffffffffda1ed] // MoveResolver resolve mapping <|@ <|@
      nr 1174  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] // MoveResolver resolve mapping <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1194  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[17300|0x4394] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-76083|0xfffffffffffed6cd] // MoveResolver resolve mapping <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1224  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1226  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: rcx|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: rcx|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: rcx|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - vstack:2|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] rcx|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-160531|0xfffffffffffd8ced] // MoveResolver resolve mapping <|@ <|@
      nr 1236  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-136723|0xfffffffffffde9ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1246  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1266  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr 1268  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-140819|0xfffffffffffdd9ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1278  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-139795|0xfffffffffffddded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-151059|0xfffffffffffdb1ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1298  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1318  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: vstack:4|QWORD[.] rcx|QWORD[.] vstack:2|QWORD[.] rbx|QWORD[.] r13|DWORD r14|DWORD r8|QWORD[.] rbp|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] rcx|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed] // MoveResolver resolve mapping <|@ <|@
      nr 1330  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1350  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1352  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1372  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1374  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] rcx|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[11540|0x2d14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-150035|0xfffffffffffdb5ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1404  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1406  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r8|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-137747|0xfffffffffffde5ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1416  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1436  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1438  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction vstack:8|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction r9|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rbx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr  230  <|@ instruction CMP x: r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rbx|DWORD) condition: < <|@ <|@
      nr  236  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rdi|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rbp|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  240  <|@ instruction r8|DWORD = IMUL (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  462  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  532  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  536  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  542  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  546  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  554  <|@ instruction vstack:9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction MOV (x: [rcx|QWORD[.] + 48], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rcx|QWORD[.] + 28], y: r9|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction MOV x: [rcx|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  590  <|@ instruction MOV x: [rcx|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  594  <|@ instruction vstack:0|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr  634  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  636  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  644  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  646  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOV input: [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  650  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  652  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction vstack:1|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  740  <|@ instruction r11|DWORD[_] = MOV input: [rcx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  742  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  744  <|@ instruction vstack:4|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction vstack:2|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  752  <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  768  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction vstack:3|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  856  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  860  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  868  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction r9|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  874  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  876  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  878  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  880  <|@ instruction vstack:5|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction vstack:6|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  886  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction vstack:7|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  892  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  896  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction vstack:11|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction vstack:10|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction r13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rbp|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  914  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction r14|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1148  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr 1152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: vstack:7|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: vstack:5|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction rdi|DWORD[_] = MOVE input: vstack:3|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1258  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] rcx|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: vstack:8|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr 1276  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction r10|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1356  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: vstack:8|QWORD[.] vstack:9|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr 1358  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1360  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1362  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction vstack:5|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction vstack:7|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction vstack:1|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction r13|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction rbp|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1310  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rax|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] vstack:9|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: vstack:8|QWORD[.] vstack:9|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr  982  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1386  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rcx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1388  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1390  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1392  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr 1394  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: vstack:8|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: vstack:8|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction vstack:13|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction vstack:16|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction vstack:15|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction vstack:17|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction vstack:14|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: vstack:8|QWORD[.] - - - vstack:13|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: vstack:8|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=vstack:17|DWORD,limit=vstack:16|DWORD,capacity=vstack:15|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=vstack:14|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=vstack:17|DWORD,limit=vstack:16|DWORD,capacity=vstack:15|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=vstack:14|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] vstack:17|DWORD vstack:16|DWORD vstack:15|DWORD Object[null] int[0|0x0] int[0|0x0] vstack:14|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr  396  <|@ instruction rsi|DWORD = MOVE input: vstack:13|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: vstack:8|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: vstack:8|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=vstack:17|DWORD,limit=vstack:16|DWORD,capacity=vstack:15|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=vstack:14|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=vstack:17|DWORD,limit=vstack:16|DWORD,capacity=vstack:15|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=vstack:14|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] vstack:17|DWORD vstack:16|DWORD vstack:15|DWORD Object[null] int[0|0x0] int[0|0x0] vstack:14|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  404  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  406  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  408  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVE input: vstack:16|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r10|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rbx|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction vstack:17|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction vstack:14|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  128  <|@ instruction r10|DWORD = MOVE input: int[-138771|0xfffffffffffde1ed] <|@ <|@
      nr  130  <|@ instruction rcx|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1094  <|@ instruction r11|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1096  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr 1416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr 1418  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[10900|0x2a94] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-147987|0xfffffffffffdbded] <|@ <|@
      nr 1556  <|@ instruction r14|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1240  <|@ instruction r8|DWORD = MOVE input: int[-156179|0xfffffffffffd9ded] <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = MOVE input: int[-155155|0xfffffffffffda1ed] <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction r10|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1058  <|@ instruction r11|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr 1060  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction r9|QWORD = MOVE input: long[17300|0x4394] <|@ <|@
      nr 1500  <|@ instruction r8|DWORD = MOVE input: int[-76083|0xfffffffffffed6cd] <|@ <|@
      nr 1502  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1522  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: rcx|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: rcx|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: rcx|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - vstack:2|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] rcx|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr 1598  <|@ instruction r10|DWORD = MOVE input: int[-160531|0xfffffffffffd8ced] <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction vstack:17|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction vstack:14|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOVE input: int[-136723|0xfffffffffffde9ed] <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr 1460  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction vstack:17|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction vstack:14|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1652  <|@ instruction r10|DWORD = MOVE input: int[-140819|0xfffffffffffdd9ed] <|@ <|@
      nr 1654  <|@ instruction rcx|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD <|@ <|@
      nr 1656  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1658  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction vstack:17|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction vstack:14|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-139795|0xfffffffffffddded] <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction r8|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1022  <|@ instruction r11|DWORD = MOVE input: int[-151059|0xfffffffffffdb1ed] <|@ <|@
      nr 1024  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: vstack:4|QWORD[.] rcx|QWORD[.] vstack:2|QWORD[.] rbx|QWORD[.] r13|DWORD r14|DWORD r8|QWORD[.] rbp|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] rcx|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1612  <|@ instruction r10|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed] <|@ <|@
      nr 1614  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1636  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1466  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1484  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: vstack:4|QWORD[.] rcx|QWORD[.] vstack:2|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction r11|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr 1536  <|@ instruction r10|DWORD = MOVE input: int[-150035|0xfffffffffffdb5ed] // MoveResolver resolve mapping <|@ <|@
      nr 1538  <|@ instruction r14|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1540  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1542  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r8|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction vstack:17|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction vstack:14|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVE input: int[-137747|0xfffffffffffde5ed] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1678  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1680  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [594, 1363[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[vstack:1|d]" vstack:1|d -1 [674, 1124[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [748, 1556[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[vstack:3|d]" vstack:3|d -1 [772, 1216[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [744, 1558[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [680, 1168[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[vstack:6|d]" vstack:6|d -1 [884, 1080[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[vstack:7|d]" vstack:7|d -1 [682, 1166[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[vstack:8|q]" vstack:8|q -1 [34, 1588[ "NOT_SUPPORTED"
  vstack:9|q QWORD "[vstack:9|q]" vstack:9|q -1 [554, 1586[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[vstack:10|q]" vstack:10|q -1 [906, 1096[ "NOT_SUPPORTED"
  vstack:11|q QWORD "[vstack:11|q]" vstack:11|q -1 [904, 1082[ "NOT_SUPPORTED"
  vstack:13|d DWORD "[vstack:13|d]" vstack:13|d -1 [250, 396[ "NOT_SUPPORTED"
  vstack:14|q QWORD "[vstack:14|q]" vstack:14|q -1 [50, 1656[ "NOT_SUPPORTED"
  vstack:15|d DWORD "[vstack:15|d]" vstack:15|d -1 [254, 412[ "NOT_SUPPORTED"
  vstack:16|d DWORD "[vstack:16|d]" vstack:16|d -1 [252, 410[ "NOT_SUPPORTED"
  vstack:17|d DWORD "[vstack:17|d]" vstack:17|d -1 [48, 1654[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:80|q]" vstack:0|q -1 [594, 1363[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[stack:40|d]" vstack:1|d -1 [674, 1124[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:96|q]" vstack:2|q -1 [748, 1556[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[stack:100|d]" vstack:3|d -1 [772, 1216[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:88|q]" vstack:4|q -1 [744, 1558[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:36|d]" vstack:5|d -1 [680, 1168[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[stack:44|d]" vstack:6|d -1 [884, 1080[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[stack:32|d]" vstack:7|d -1 [682, 1166[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[stack:56|q]" vstack:8|q -1 [34, 1588[ "NOT_SUPPORTED"
  vstack:9|q QWORD "[stack:72|q]" vstack:9|q -1 [554, 1586[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[stack:120|q]" vstack:10|q -1 [906, 1096[ "NOT_SUPPORTED"
  vstack:11|q QWORD "[stack:112|q]" vstack:11|q -1 [904, 1082[ "NOT_SUPPORTED"
  vstack:13|d DWORD "[stack:32|d]" vstack:13|d -1 [250, 396[ "NOT_SUPPORTED"
  vstack:14|q QWORD "[stack:64|q]" vstack:14|q -1 [50, 1656[ "NOT_SUPPORTED"
  vstack:15|d DWORD "[stack:40|d]" vstack:15|d -1 [254, 412[ "NOT_SUPPORTED"
  vstack:16|d DWORD "[stack:36|d]" vstack:16|d -1 [252, 410[ "NOT_SUPPORTED"
  vstack:17|d DWORD "[stack:28|d]" vstack:17|d -1 [48, 1654[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction r9|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rbx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr  230  <|@ instruction CMP x: r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rbx|DWORD) condition: < <|@ <|@
      nr  236  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rdi|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rbp|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  240  <|@ instruction r8|DWORD = IMUL (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  462  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  532  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  536  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  542  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  546  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  554  <|@ instruction stack:72|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction MOV (x: [rcx|QWORD[.] + 48], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rcx|QWORD[.] + 28], y: r9|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction MOV x: [rcx|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  590  <|@ instruction MOV x: [rcx|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  594  <|@ instruction stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr  634  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  636  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  644  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  646  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOV input: [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  650  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  652  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  740  <|@ instruction r11|DWORD[_] = MOV input: [rcx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  742  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  744  <|@ instruction stack:88|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction stack:96|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  752  <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  768  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:100|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  856  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  860  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  868  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction r9|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  874  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  876  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  878  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  880  <|@ instruction stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction stack:44|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  886  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  892  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  896  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction stack:112|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction stack:120|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction r13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rbp|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  914  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1148  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr 1152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:32|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: stack:36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction rdi|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1258  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:56|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr 1276  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1356  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: stack:56|QWORD[.] stack:72|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr 1358  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1360  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1362  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction r13|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction rbp|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1310  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rbx|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rcx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:56|QWORD[.] stack:72|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr  982  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1386  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rcx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1388  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1390  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1392  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr 1394  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:56|QWORD[.] - - - stack:32|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] stack:28|DWORD stack:36|DWORD stack:40|DWORD Object[null] int[0|0x0] int[0|0x0] stack:64|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr  396  <|@ instruction rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:56|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] stack:28|DWORD stack:36|DWORD stack:40|DWORD Object[null] int[0|0x0] int[0|0x0] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  404  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  406  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  408  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  128  <|@ instruction r10|DWORD = MOVE input: int[-138771|0xfffffffffffde1ed] <|@ <|@
      nr  130  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1094  <|@ instruction r11|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1096  <|@ instruction rbx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr 1416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr 1418  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[10900|0x2a94] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-147987|0xfffffffffffdbded] <|@ <|@
      nr 1556  <|@ instruction r14|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r8|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1240  <|@ instruction r8|DWORD = MOVE input: int[-156179|0xfffffffffffd9ded] <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = MOVE input: int[-155155|0xfffffffffffda1ed] <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1058  <|@ instruction r11|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr 1060  <|@ instruction rbx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction r9|QWORD = MOVE input: long[17300|0x4394] <|@ <|@
      nr 1500  <|@ instruction r8|DWORD = MOVE input: int[-76083|0xfffffffffffed6cd] <|@ <|@
      nr 1502  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1522  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: rcx|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: rcx|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: rcx|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - stack:96|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr 1598  <|@ instruction r10|DWORD = MOVE input: int[-160531|0xfffffffffffd8ced] <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOVE input: int[-136723|0xfffffffffffde9ed] <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr 1460  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1652  <|@ instruction r10|DWORD = MOVE input: int[-140819|0xfffffffffffdd9ed] <|@ <|@
      nr 1654  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1656  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1658  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-139795|0xfffffffffffddded] <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1022  <|@ instruction r11|DWORD = MOVE input: int[-151059|0xfffffffffffdb1ed] <|@ <|@
      nr 1024  <|@ instruction rbx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] rbx|QWORD[.] r13|DWORD r14|DWORD r8|QWORD[.] rbp|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1612  <|@ instruction r10|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed] <|@ <|@
      nr 1614  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1636  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1466  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1484  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction r11|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr 1536  <|@ instruction r10|DWORD = MOVE input: int[-150035|0xfffffffffffdb5ed] // MoveResolver resolve mapping <|@ <|@
      nr 1538  <|@ instruction r14|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1540  <|@ instruction r8|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1542  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r8|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVE input: int[-137747|0xfffffffffffde5ed] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1678  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1680  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction r9|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rbx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr  230  <|@ instruction CMP x: r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rbx|DWORD) condition: < <|@ <|@
      nr  236  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rdi|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rbp|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  240  <|@ instruction r8|DWORD = IMUL (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  462  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  532  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  536  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  542  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  546  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  554  <|@ instruction stack:72|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction MOV (x: [rcx|QWORD[.] + 48], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rcx|QWORD[.] + 28], y: r9|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction MOV x: [rcx|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  590  <|@ instruction MOV x: [rcx|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  594  <|@ instruction stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr  634  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  636  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  644  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  646  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOV input: [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  650  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  652  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  740  <|@ instruction r11|DWORD[_] = MOV input: [rcx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  742  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  744  <|@ instruction stack:88|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction stack:96|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  752  <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  768  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:100|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  856  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  860  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  868  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction r9|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  874  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  876  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  878  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  880  <|@ instruction stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction stack:44|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  886  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  892  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  896  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction stack:112|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction stack:120|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction r13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rbp|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  914  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1148  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr 1152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:32|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: stack:36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction rdi|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1258  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:56|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr 1276  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1356  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: stack:56|QWORD[.] stack:72|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr 1358  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1360  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1362  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction r13|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction rbp|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1310  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rbx|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rcx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:56|QWORD[.] stack:72|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr  982  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1386  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rcx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1388  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1390  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1392  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr 1394  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:56|QWORD[.] - - - stack:32|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] stack:28|DWORD stack:36|DWORD stack:40|DWORD Object[null] int[0|0x0] int[0|0x0] stack:64|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr  396  <|@ instruction rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:56|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] stack:28|DWORD stack:36|DWORD stack:40|DWORD Object[null] int[0|0x0] int[0|0x0] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  404  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  406  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  408  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  128  <|@ instruction r10|DWORD = MOVE input: int[-138771|0xfffffffffffde1ed] <|@ <|@
      nr  130  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1094  <|@ instruction r11|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1096  <|@ instruction rbx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr 1416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr 1418  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[10900|0x2a94] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-147987|0xfffffffffffdbded] <|@ <|@
      nr 1556  <|@ instruction r14|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r8|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1240  <|@ instruction r8|DWORD = MOVE input: int[-156179|0xfffffffffffd9ded] <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = MOVE input: int[-155155|0xfffffffffffda1ed] <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1058  <|@ instruction r11|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr 1060  <|@ instruction rbx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction r9|QWORD = MOVE input: long[17300|0x4394] <|@ <|@
      nr 1500  <|@ instruction r8|DWORD = MOVE input: int[-76083|0xfffffffffffed6cd] <|@ <|@
      nr 1502  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1522  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: rcx|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: rcx|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: rcx|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - stack:96|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr 1598  <|@ instruction r10|DWORD = MOVE input: int[-160531|0xfffffffffffd8ced] <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOVE input: int[-136723|0xfffffffffffde9ed] <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr 1460  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1652  <|@ instruction r10|DWORD = MOVE input: int[-140819|0xfffffffffffdd9ed] <|@ <|@
      nr 1654  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1656  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1658  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-139795|0xfffffffffffddded] <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1022  <|@ instruction r11|DWORD = MOVE input: int[-151059|0xfffffffffffdb1ed] <|@ <|@
      nr 1024  <|@ instruction rbx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] rbx|QWORD[.] r13|DWORD r14|DWORD r8|QWORD[.] rbp|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1612  <|@ instruction r10|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed] <|@ <|@
      nr 1614  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1636  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1466  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1484  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction r11|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr 1536  <|@ instruction r10|DWORD = MOVE input: int[-150035|0xfffffffffffdb5ed] // MoveResolver resolve mapping <|@ <|@
      nr 1538  <|@ instruction r14|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1540  <|@ instruction r8|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1542  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r8|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVE input: int[-137747|0xfffffffffffde5ed] <|@ <|@
      nr   96  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1678  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1680  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction r9|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rbx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr  230  <|@ instruction CMP x: r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rbx|DWORD) condition: < <|@ <|@
      nr  236  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rdi|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rbp|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  240  <|@ instruction r8|DWORD = IMUL (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  462  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  532  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  536  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  542  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  546  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  554  <|@ instruction stack:72|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction MOV (x: [rcx|QWORD[.] + 48], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rcx|QWORD[.] + 28], y: r9|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction MOV x: [rcx|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  590  <|@ instruction MOV x: [rcx|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  594  <|@ instruction stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr  634  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  636  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  644  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  646  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOV input: [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  650  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  652  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  740  <|@ instruction r11|DWORD[_] = MOV input: [rcx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  742  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  744  <|@ instruction stack:88|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction stack:96|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  752  <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  768  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:100|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  856  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  860  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  868  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction r9|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  874  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  876  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  878  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  880  <|@ instruction stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction stack:44|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  886  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  892  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  896  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction stack:112|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction stack:120|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction r13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rbp|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  914  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1148  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr 1152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:32|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: stack:36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction rdi|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1258  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:56|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr 1276  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1356  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: stack:56|QWORD[.] stack:72|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr 1358  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1360  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1362  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  704  <|@ instruction r13|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ instruction rbp|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1310  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rbx|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rcx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:56|QWORD[.] stack:72|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr  982  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1386  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rcx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1388  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1390  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1392  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr 1394  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:56|QWORD[.] - - - stack:32|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] stack:28|DWORD stack:36|DWORD stack:40|DWORD Object[null] int[0|0x0] int[0|0x0] stack:64|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr  396  <|@ instruction rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:56|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] stack:28|DWORD stack:36|DWORD stack:40|DWORD Object[null] int[0|0x0] int[0|0x0] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  404  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  406  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  408  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  128  <|@ instruction r10|DWORD = MOVE input: int[-138771|0xfffffffffffde1ed] <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1094  <|@ instruction r11|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr 1416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr 1418  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[10900|0x2a94] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-147987|0xfffffffffffdbded] <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1240  <|@ instruction r8|DWORD = MOVE input: int[-156179|0xfffffffffffd9ded] <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = MOVE input: int[-155155|0xfffffffffffda1ed] <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1058  <|@ instruction r11|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction r9|QWORD = MOVE input: long[17300|0x4394] <|@ <|@
      nr 1500  <|@ instruction r8|DWORD = MOVE input: int[-76083|0xfffffffffffed6cd] <|@ <|@
      nr 1502  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1522  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: rcx|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: rcx|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: rcx|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - stack:96|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr 1598  <|@ instruction r10|DWORD = MOVE input: int[-160531|0xfffffffffffd8ced] <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOVE input: int[-136723|0xfffffffffffde9ed] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr 1460  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1652  <|@ instruction r10|DWORD = MOVE input: int[-140819|0xfffffffffffdd9ed] <|@ <|@
      nr 1658  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-139795|0xfffffffffffddded] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1022  <|@ instruction r11|DWORD = MOVE input: int[-151059|0xfffffffffffdb1ed] <|@ <|@
      nr 1026  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1024  <|@ instruction rbx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] rbx|QWORD[.] r13|DWORD r14|DWORD r8|QWORD[.] rbp|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1612  <|@ instruction r10|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed] <|@ <|@
      nr 1614  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1636  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1466  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1484  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction r11|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr 1536  <|@ instruction r10|DWORD = MOVE input: int[-150035|0xfffffffffffdb5ed] // MoveResolver resolve mapping <|@ <|@
      nr 1542  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1556  <|@ instruction r14|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r8|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r8|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVE input: int[-137747|0xfffffffffffde5ed] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1678  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1680  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction r9|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rbx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr  230  <|@ instruction CMP x: r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rbx|DWORD) condition: < <|@ <|@
      nr  236  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rdi|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rbp|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  240  <|@ instruction r8|DWORD = IMUL (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  462  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  532  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  536  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  542  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  546  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  554  <|@ instruction stack:72|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction MOV (x: [rcx|QWORD[.] + 48], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rcx|QWORD[.] + 28], y: r9|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction MOV x: [rcx|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  590  <|@ instruction MOV x: [rcx|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  594  <|@ instruction stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr  634  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  636  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  644  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  646  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOV input: [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  650  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  652  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  740  <|@ instruction r11|DWORD[_] = MOV input: [rcx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  742  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  744  <|@ instruction stack:88|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction stack:96|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  752  <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  768  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:100|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  856  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  860  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  868  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction r9|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  874  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  876  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  878  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  880  <|@ instruction stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction stack:44|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  886  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  892  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  896  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction stack:112|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction stack:120|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction r13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rbp|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  914  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1148  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr 1152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:32|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: stack:36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction rdi|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1258  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:56|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr 1276  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1356  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: stack:56|QWORD[.] stack:72|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr 1358  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1360  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1362  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1310  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rbx|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rcx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:56|QWORD[.] stack:72|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr  982  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1386  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rcx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1388  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1390  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1392  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr 1394  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:56|QWORD[.] - - - stack:32|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] stack:28|DWORD stack:36|DWORD stack:40|DWORD Object[null] int[0|0x0] int[0|0x0] stack:64|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr  396  <|@ instruction rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:56|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] stack:28|DWORD stack:36|DWORD stack:40|DWORD Object[null] int[0|0x0] int[0|0x0] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  404  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  406  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  408  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  128  <|@ instruction r10|DWORD = MOVE input: int[-138771|0xfffffffffffde1ed] <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1094  <|@ instruction r11|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr 1416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr 1418  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[10900|0x2a94] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-147987|0xfffffffffffdbded] <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1240  <|@ instruction r8|DWORD = MOVE input: int[-156179|0xfffffffffffd9ded] <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = MOVE input: int[-155155|0xfffffffffffda1ed] <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1058  <|@ instruction r11|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction r9|QWORD = MOVE input: long[17300|0x4394] <|@ <|@
      nr 1500  <|@ instruction r8|DWORD = MOVE input: int[-76083|0xfffffffffffed6cd] <|@ <|@
      nr 1502  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1522  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: rcx|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: rcx|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: rcx|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - stack:96|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr 1598  <|@ instruction r10|DWORD = MOVE input: int[-160531|0xfffffffffffd8ced] <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOVE input: int[-136723|0xfffffffffffde9ed] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr 1460  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1652  <|@ instruction r10|DWORD = MOVE input: int[-140819|0xfffffffffffdd9ed] <|@ <|@
      nr 1658  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-139795|0xfffffffffffddded] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1022  <|@ instruction r11|DWORD = MOVE input: int[-151059|0xfffffffffffdb1ed] <|@ <|@
      nr 1026  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1024  <|@ instruction rbx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] rbx|QWORD[.] r13|DWORD r14|DWORD r8|QWORD[.] rbp|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1612  <|@ instruction r10|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed] <|@ <|@
      nr 1614  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1636  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1466  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1484  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction r11|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr 1536  <|@ instruction r10|DWORD = MOVE input: int[-150035|0xfffffffffffdb5ed] // MoveResolver resolve mapping <|@ <|@
      nr 1542  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1556  <|@ instruction r14|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r8|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r8|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVE input: int[-137747|0xfffffffffffde5ed] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1678  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1680  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction r9|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rbx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr  230  <|@ instruction CMP x: r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rbx|DWORD) condition: < <|@ <|@
      nr  236  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rdi|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rbp|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  240  <|@ instruction r8|DWORD = IMUL (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  462  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  532  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  536  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  542  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  546  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  554  <|@ instruction stack:72|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction MOV (x: [rcx|QWORD[.] + 48], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rcx|QWORD[.] + 28], y: r9|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction MOV x: [rcx|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  590  <|@ instruction MOV x: [rcx|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  594  <|@ instruction stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr  634  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  636  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  644  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  646  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOV input: [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  650  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  652  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  740  <|@ instruction r11|DWORD[_] = MOV input: [rcx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  742  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  744  <|@ instruction stack:88|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction stack:96|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  752  <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  768  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:100|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  856  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  860  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  868  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction r9|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  874  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  876  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  878  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  880  <|@ instruction stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction stack:44|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  886  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  892  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  896  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction stack:112|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction stack:120|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction r13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rbp|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  914  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1148  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr 1152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:32|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: stack:36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction rdi|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1258  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:56|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr 1276  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1356  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: stack:56|QWORD[.] stack:72|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr 1358  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1360  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1362  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1310  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rbx|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rcx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:56|QWORD[.] stack:72|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr  982  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1386  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rcx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1388  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1390  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1392  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr 1394  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:56|QWORD[.] - - - stack:32|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] stack:28|DWORD stack:36|DWORD stack:40|DWORD Object[null] int[0|0x0] int[0|0x0] stack:64|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr  396  <|@ instruction rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:56|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] stack:28|DWORD stack:36|DWORD stack:40|DWORD Object[null] int[0|0x0] int[0|0x0] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  404  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  406  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  408  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  128  <|@ instruction r10|DWORD = MOVE input: int[-138771|0xfffffffffffde1ed] <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1094  <|@ instruction r11|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr 1416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr 1418  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[10900|0x2a94] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-147987|0xfffffffffffdbded] <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1240  <|@ instruction r8|DWORD = MOVE input: int[-156179|0xfffffffffffd9ded] <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = MOVE input: int[-155155|0xfffffffffffda1ed] <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1058  <|@ instruction r11|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction r9|QWORD = MOVE input: long[17300|0x4394] <|@ <|@
      nr 1500  <|@ instruction r8|DWORD = MOVE input: int[-76083|0xfffffffffffed6cd] <|@ <|@
      nr 1502  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1522  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: rcx|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: rcx|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: rcx|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - stack:96|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr 1598  <|@ instruction r10|DWORD = MOVE input: int[-160531|0xfffffffffffd8ced] <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOVE input: int[-136723|0xfffffffffffde9ed] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr 1460  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1652  <|@ instruction r10|DWORD = MOVE input: int[-140819|0xfffffffffffdd9ed] <|@ <|@
      nr 1658  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-139795|0xfffffffffffddded] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1022  <|@ instruction r11|DWORD = MOVE input: int[-151059|0xfffffffffffdb1ed] <|@ <|@
      nr 1026  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1024  <|@ instruction rbx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] rbx|QWORD[.] r13|DWORD r14|DWORD r8|QWORD[.] rbp|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1612  <|@ instruction r10|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed] <|@ <|@
      nr 1614  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1636  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1466  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1484  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction r11|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr 1536  <|@ instruction r10|DWORD = MOVE input: int[-150035|0xfffffffffffdb5ed] // MoveResolver resolve mapping <|@ <|@
      nr 1542  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1556  <|@ instruction r14|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r8|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r8|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVE input: int[-137747|0xfffffffffffde5ed] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1678  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1680  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction r9|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rbx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr  230  <|@ instruction CMP x: r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rbx|DWORD) condition: < <|@ <|@
      nr  236  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rdi|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rbp|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  240  <|@ instruction r8|DWORD = IMUL (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  462  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  532  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  536  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  542  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  546  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  554  <|@ instruction stack:72|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction MOV (x: [rcx|QWORD[.] + 48], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rcx|QWORD[.] + 28], y: r9|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction MOV x: [rcx|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  590  <|@ instruction MOV x: [rcx|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  594  <|@ instruction stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr  634  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  636  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  644  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  646  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOV input: [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  650  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  652  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  740  <|@ instruction r11|DWORD[_] = MOV input: [rcx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  742  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  744  <|@ instruction stack:88|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction stack:96|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  752  <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  768  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:100|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  856  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  860  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  868  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction r9|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  874  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  876  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  878  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  880  <|@ instruction stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction stack:44|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  886  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  892  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  896  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction stack:112|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction stack:120|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction r13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rbp|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  914  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1148  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr 1152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:32|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: stack:36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction rdi|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1258  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:56|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr 1276  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1356  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: stack:56|QWORD[.] stack:72|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr 1358  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1360  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1362  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1310  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rbx|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rcx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:56|QWORD[.] stack:72|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr  982  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1386  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rcx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1388  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1390  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1392  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr 1394  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:56|QWORD[.] - - - stack:32|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] stack:28|DWORD stack:36|DWORD stack:40|DWORD Object[null] int[0|0x0] int[0|0x0] stack:64|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr  396  <|@ instruction rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:56|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] stack:28|DWORD stack:36|DWORD stack:40|DWORD Object[null] int[0|0x0] int[0|0x0] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  404  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  406  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  408  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  128  <|@ instruction r10|DWORD = MOVE input: int[-138771|0xfffffffffffde1ed] <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1094  <|@ instruction r11|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr 1416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr 1418  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[10900|0x2a94] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-147987|0xfffffffffffdbded] <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1240  <|@ instruction r8|DWORD = MOVE input: int[-156179|0xfffffffffffd9ded] <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = MOVE input: int[-155155|0xfffffffffffda1ed] <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1058  <|@ instruction r11|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction r9|QWORD = MOVE input: long[17300|0x4394] <|@ <|@
      nr 1500  <|@ instruction r8|DWORD = MOVE input: int[-76083|0xfffffffffffed6cd] <|@ <|@
      nr 1502  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1522  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: rcx|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: rcx|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: rcx|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - stack:96|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr 1598  <|@ instruction r10|DWORD = MOVE input: int[-160531|0xfffffffffffd8ced] <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOVE input: int[-136723|0xfffffffffffde9ed] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr 1460  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1652  <|@ instruction r10|DWORD = MOVE input: int[-140819|0xfffffffffffdd9ed] <|@ <|@
      nr 1658  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-139795|0xfffffffffffddded] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1022  <|@ instruction r11|DWORD = MOVE input: int[-151059|0xfffffffffffdb1ed] <|@ <|@
      nr 1026  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1024  <|@ instruction rbx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] rbx|QWORD[.] r13|DWORD r14|DWORD r8|QWORD[.] rbp|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1612  <|@ instruction r10|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed] <|@ <|@
      nr 1614  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1636  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1466  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1484  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction r11|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr 1536  <|@ instruction r10|DWORD = MOVE input: int[-150035|0xfffffffffffdb5ed] // MoveResolver resolve mapping <|@ <|@
      nr 1542  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1556  <|@ instruction r14|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r8|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r8|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVE input: int[-137747|0xfffffffffffde5ed] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1678  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1680  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction r9|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rbx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr  230  <|@ instruction CMP x: r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rbx|DWORD) condition: < <|@ <|@
      nr  236  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rdi|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rbp|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  240  <|@ instruction r8|DWORD = IMUL (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  462  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  532  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  536  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  542  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  546  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  554  <|@ instruction stack:72|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction MOV (x: [rcx|QWORD[.] + 48], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rcx|QWORD[.] + 28], y: r9|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction MOV x: [rcx|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  590  <|@ instruction MOV x: [rcx|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  594  <|@ instruction stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  740  <|@ instruction r11|DWORD[_] = MOV input: [rcx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  742  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  744  <|@ instruction stack:88|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction stack:96|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  752  <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  768  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:100|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  856  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  860  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  868  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction r9|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  874  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  876  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  878  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  880  <|@ instruction stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction stack:44|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  886  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  892  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  896  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction stack:112|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction stack:120|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction r13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rbp|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  914  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1148  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr 1152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:32|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: stack:36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction rdi|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1258  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:56|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr 1276  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1356  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: stack:56|QWORD[.] stack:72|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr 1358  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1360  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1362  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr  634  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  636  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  644  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  646  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOV input: [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  650  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  652  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1310  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rbx|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rcx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:56|QWORD[.] stack:72|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr  982  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1386  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rcx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1388  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1390  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1392  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr 1394  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:56|QWORD[.] - - - stack:32|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] stack:28|DWORD stack:36|DWORD stack:40|DWORD Object[null] int[0|0x0] int[0|0x0] stack:64|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr  396  <|@ instruction rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:56|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] stack:28|DWORD stack:36|DWORD stack:40|DWORD Object[null] int[0|0x0] int[0|0x0] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  404  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  406  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  408  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOVE input: int[-136723|0xfffffffffffde9ed] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1678  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1680  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1058  <|@ instruction r11|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1024  <|@ instruction rbx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] rbx|QWORD[.] r13|DWORD r14|DWORD r8|QWORD[.] rbp|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1466  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1484  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1240  <|@ instruction r8|DWORD = MOVE input: int[-156179|0xfffffffffffd9ded] <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1522  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: rcx|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: rcx|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: rcx|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - stack:96|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = MOVE input: int[-155155|0xfffffffffffda1ed] <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction r9|QWORD = MOVE input: long[17300|0x4394] <|@ <|@
      nr 1500  <|@ instruction r8|DWORD = MOVE input: int[-76083|0xfffffffffffed6cd] <|@ <|@
      nr 1502  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1022  <|@ instruction r11|DWORD = MOVE input: int[-151059|0xfffffffffffdb1ed] <|@ <|@
      nr 1026  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1094  <|@ instruction r11|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr 1598  <|@ instruction r10|DWORD = MOVE input: int[-160531|0xfffffffffffd8ced] <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1636  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction r11|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr 1536  <|@ instruction r10|DWORD = MOVE input: int[-150035|0xfffffffffffdb5ed] // MoveResolver resolve mapping <|@ <|@
      nr 1542  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1556  <|@ instruction r14|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r8|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r8|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr 1416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr 1418  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1652  <|@ instruction r10|DWORD = MOVE input: int[-140819|0xfffffffffffdd9ed] <|@ <|@
      nr 1658  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1612  <|@ instruction r10|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed] <|@ <|@
      nr 1614  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  128  <|@ instruction r10|DWORD = MOVE input: int[-138771|0xfffffffffffde1ed] <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-139795|0xfffffffffffddded] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr 1460  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[10900|0x2a94] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-147987|0xfffffffffffdbded] <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVE input: int[-137747|0xfffffffffffde5ed] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction r9|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rbx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr  230  <|@ instruction CMP x: r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rbx|DWORD) condition: < <|@ <|@
      nr  236  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rdi|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rbp|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  240  <|@ instruction r8|DWORD = IMUL (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  462  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  532  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  536  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  542  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  546  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  554  <|@ instruction stack:72|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction MOV (x: [rcx|QWORD[.] + 48], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rcx|QWORD[.] + 28], y: r9|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction MOV x: [rcx|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  590  <|@ instruction MOV x: [rcx|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  594  <|@ instruction stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  740  <|@ instruction r11|DWORD[_] = MOV input: [rcx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  742  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  744  <|@ instruction stack:88|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction stack:96|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  752  <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  768  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:100|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  856  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  860  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  868  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction r9|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  874  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  876  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  878  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  880  <|@ instruction stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction stack:44|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  886  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  892  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  896  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction stack:112|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction stack:120|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction r13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rbp|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  914  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1148  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr 1152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:32|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: stack:36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction rdi|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1258  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:56|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr 1276  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1356  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: stack:56|QWORD[.] stack:72|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr 1358  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1360  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1362  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr  634  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  636  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  644  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  646  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOV input: [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  650  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  652  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1310  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rbx|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rcx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:56|QWORD[.] stack:72|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr  982  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1386  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rcx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1388  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1390  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1392  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr 1394  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:56|QWORD[.] - - - stack:32|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] stack:28|DWORD stack:36|DWORD stack:40|DWORD Object[null] int[0|0x0] int[0|0x0] stack:64|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr  396  <|@ instruction rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:56|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] stack:28|DWORD stack:36|DWORD stack:40|DWORD Object[null] int[0|0x0] int[0|0x0] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  404  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  406  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  408  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOVE input: int[-136723|0xfffffffffffde9ed] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1678  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1680  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1058  <|@ instruction r11|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1024  <|@ instruction rbx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] rbx|QWORD[.] r13|DWORD r14|DWORD r8|QWORD[.] rbp|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1466  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1484  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1240  <|@ instruction r8|DWORD = MOVE input: int[-156179|0xfffffffffffd9ded] <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1522  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: rcx|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: rcx|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: rcx|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - stack:96|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = MOVE input: int[-155155|0xfffffffffffda1ed] <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction r9|QWORD = MOVE input: long[17300|0x4394] <|@ <|@
      nr 1500  <|@ instruction r8|DWORD = MOVE input: int[-76083|0xfffffffffffed6cd] <|@ <|@
      nr 1502  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1022  <|@ instruction r11|DWORD = MOVE input: int[-151059|0xfffffffffffdb1ed] <|@ <|@
      nr 1026  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1094  <|@ instruction r11|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr 1598  <|@ instruction r10|DWORD = MOVE input: int[-160531|0xfffffffffffd8ced] <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1636  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction r11|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr 1536  <|@ instruction r10|DWORD = MOVE input: int[-150035|0xfffffffffffdb5ed] // MoveResolver resolve mapping <|@ <|@
      nr 1542  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1556  <|@ instruction r14|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r8|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r8|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr 1416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr 1418  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1652  <|@ instruction r10|DWORD = MOVE input: int[-140819|0xfffffffffffdd9ed] <|@ <|@
      nr 1658  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1612  <|@ instruction r10|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed] <|@ <|@
      nr 1614  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  128  <|@ instruction r10|DWORD = MOVE input: int[-138771|0xfffffffffffde1ed] <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-139795|0xfffffffffffddded] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr 1460  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[10900|0x2a94] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-147987|0xfffffffffffdbded] <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVE input: int[-137747|0xfffffffffffde5ed] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction r9|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  228  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rbx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr  230  <|@ instruction CMP x: r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rbx|DWORD) condition: < <|@ <|@
      nr  236  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rdi|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rbp|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  240  <|@ instruction r8|DWORD = IMUL (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  462  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  532  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  536  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  542  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  546  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  554  <|@ instruction stack:72|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction MOV (x: [rcx|QWORD[.] + 48], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rcx|QWORD[.] + 28], y: r9|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction MOV x: [rcx|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  590  <|@ instruction MOV x: [rcx|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  594  <|@ instruction stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  740  <|@ instruction r11|DWORD[_] = MOV input: [rcx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  742  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  744  <|@ instruction stack:88|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction stack:96|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  752  <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  768  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:100|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  856  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  860  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  868  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction r9|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  874  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  876  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  878  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  880  <|@ instruction stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction stack:44|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  886  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  892  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  896  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction stack:112|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction stack:120|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction r13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rbp|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  914  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1148  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr 1152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:32|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: stack:36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction rdi|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1258  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:56|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr 1276  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1356  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: stack:56|QWORD[.] stack:72|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr 1358  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1360  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1362  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  632  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr  634  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  636  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  644  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  646  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOV input: [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  650  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  652  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1310  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rbx|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rcx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:56|QWORD[.] stack:72|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr  982  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1386  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rcx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1388  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1390  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1392  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr 1394  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr  490  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:56|QWORD[.] - - - stack:32|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] stack:28|DWORD stack:36|DWORD stack:40|DWORD Object[null] int[0|0x0] int[0|0x0] stack:64|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr  396  <|@ instruction rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:56|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] stack:28|DWORD stack:36|DWORD stack:40|DWORD Object[null] int[0|0x0] int[0|0x0] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  404  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  406  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  408  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOVE input: int[-136723|0xfffffffffffde9ed] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1678  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1680  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1058  <|@ instruction r11|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1024  <|@ instruction rbx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] rbx|QWORD[.] r13|DWORD r14|DWORD r8|QWORD[.] rbp|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1466  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1484  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1240  <|@ instruction r8|DWORD = MOVE input: int[-156179|0xfffffffffffd9ded] <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1522  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: rcx|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: rcx|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: rcx|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - stack:96|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = MOVE input: int[-155155|0xfffffffffffda1ed] <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction r9|QWORD = MOVE input: long[17300|0x4394] <|@ <|@
      nr 1500  <|@ instruction r8|DWORD = MOVE input: int[-76083|0xfffffffffffed6cd] <|@ <|@
      nr 1502  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1022  <|@ instruction r11|DWORD = MOVE input: int[-151059|0xfffffffffffdb1ed] <|@ <|@
      nr 1026  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1094  <|@ instruction r11|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr 1598  <|@ instruction r10|DWORD = MOVE input: int[-160531|0xfffffffffffd8ced] <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1636  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction r11|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr 1536  <|@ instruction r10|DWORD = MOVE input: int[-150035|0xfffffffffffdb5ed] // MoveResolver resolve mapping <|@ <|@
      nr 1542  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1556  <|@ instruction r14|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r8|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r8|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr 1416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr 1418  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1652  <|@ instruction r10|DWORD = MOVE input: int[-140819|0xfffffffffffdd9ed] <|@ <|@
      nr 1658  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1612  <|@ instruction r10|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed] <|@ <|@
      nr 1614  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  128  <|@ instruction r10|DWORD = MOVE input: int[-138771|0xfffffffffffde1ed] <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-139795|0xfffffffffffddded] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr 1460  <|@ st <@st|@live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[10900|0x2a94] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-147987|0xfffffffffffdbded] <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVE input: int[-137747|0xfffffffffffde5ed] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:88]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:88]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction r9|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  228  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:88]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rbx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr  230  <|@ instruction CMP x: r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rbx|DWORD) condition: < <|@ <|@
      nr  236  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rdi|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rbp|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  240  <|@ instruction r8|DWORD = IMUL (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  462  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  532  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  536  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  542  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  546  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  554  <|@ instruction stack:72|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction MOV (x: [rcx|QWORD[.] + 48], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rcx|QWORD[.] + 28], y: r9|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction MOV x: [rcx|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  590  <|@ instruction MOV x: [rcx|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  594  <|@ instruction stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  740  <|@ instruction r11|DWORD[_] = MOV input: [rcx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  742  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  744  <|@ instruction stack:88|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction stack:96|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ st <@st|@reference-map: [rcx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, r14:0, stack:48, stack:56, stack:64, stack:72, stack:88]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  752  <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ st <@st|@reference-map: [rcx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, r14:0, stack:48, stack:56, stack:64, stack:72, stack:88]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  768  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:100|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  856  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  860  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  868  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction r9|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  874  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  876  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  878  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  880  <|@ instruction stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction stack:44|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  886  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  892  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  896  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction stack:112|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction stack:120|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction r13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rbp|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  914  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1148  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr 1152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:32|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: stack:36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction rdi|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1258  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ st <@st|@reference-map: [rcx:0, rbx:0, stack:48, stack:56, stack:64, stack:72, stack:88]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:56|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr 1276  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1356  <|@ st <@st|@reference-map: [stack:64, stack:72, stack:88]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: stack:56|QWORD[.] stack:72|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr 1358  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1360  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1362  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  632  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r10:0, stack:64, stack:72, stack:88]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr  634  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  636  <|@ st <@st|@reference-map: [rcx:0, rsi:0, rdi:0, r10:0, stack:64, stack:72, stack:88]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  644  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  646  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOV input: [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  650  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  652  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1310  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rbx|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rcx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ st <@st|@reference-map: [stack:48, stack:56, stack:64, stack:72, stack:88]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:56|QWORD[.] stack:72|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr  982  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1386  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rcx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1388  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1390  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1392  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr 1394  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  488  <|@ st <@st|@reference-map: [rdx:0, stack:88]
live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr  490  <|@ st <@st|@reference-map: [rax:0, rdx:0, stack:88]
live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:56|QWORD[.] - - - stack:32|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] stack:28|DWORD stack:36|DWORD stack:40|DWORD Object[null] int[0|0x0] int[0|0x0] stack:64|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr  396  <|@ instruction rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:56|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] stack:28|DWORD stack:36|DWORD stack:40|DWORD Object[null] int[0|0x0] int[0|0x0] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  404  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  406  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  408  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOVE input: int[-136723|0xfffffffffffde9ed] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1678  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1680  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1058  <|@ instruction r11|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1024  <|@ instruction rbx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@reference-map: [rcx:0, rbx:0, rsi:0, r8:0, stack:48, stack:56]
live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] rbx|QWORD[.] r13|DWORD r14|DWORD r8|QWORD[.] rbp|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1466  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1484  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@reference-map: [rcx:0, rbx:0, rsi:0, stack:48, stack:56]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1240  <|@ instruction r8|DWORD = MOVE input: int[-156179|0xfffffffffffd9ded] <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1522  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1524  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:48, stack:56]
live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: rcx|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: rcx|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: rcx|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - stack:96|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = MOVE input: int[-155155|0xfffffffffffda1ed] <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction r9|QWORD = MOVE input: long[17300|0x4394] <|@ <|@
      nr 1500  <|@ instruction r8|DWORD = MOVE input: int[-76083|0xfffffffffffed6cd] <|@ <|@
      nr 1502  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1022  <|@ instruction r11|DWORD = MOVE input: int[-151059|0xfffffffffffdb1ed] <|@ <|@
      nr 1026  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1094  <|@ instruction r11|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr 1598  <|@ instruction r10|DWORD = MOVE input: int[-160531|0xfffffffffffd8ced] <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1636  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction r11|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr 1536  <|@ instruction r10|DWORD = MOVE input: int[-150035|0xfffffffffffdb5ed] // MoveResolver resolve mapping <|@ <|@
      nr 1542  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1556  <|@ instruction r14|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r8|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r8:0, r14:0]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r8|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr 1416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr 1418  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1652  <|@ instruction r10|DWORD = MOVE input: int[-140819|0xfffffffffffdd9ed] <|@ <|@
      nr 1658  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1612  <|@ instruction r10|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed] <|@ <|@
      nr 1614  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  128  <|@ instruction r10|DWORD = MOVE input: int[-138771|0xfffffffffffde1ed] <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-139795|0xfffffffffffddded] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr 1460  <|@ st <@st|@reference-map: [rcx:0, rbx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[10900|0x2a94] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-147987|0xfffffffffffdbded] <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVE input: int[-137747|0xfffffffffffde5ed] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:88]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:88]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction r9|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" "B62" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4605890073597687290
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  228  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:88]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction xmm0|SINGLE = MOVSS input: [rbx|DWORD[_] * 8 + 16] size: SS state [bci:0] <|@ <|@
      nr  230  <|@ instruction CMP x: r8|DWORD y: 1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  234  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rbx|DWORD) condition: < <|@ <|@
      nr  236  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rdi|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rbp|DWORD, rcxTmp: rcx|ILLEGAL} <|@ <|@
      nr  240  <|@ instruction r8|DWORD = IMUL (x: r8|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  242  <|@ instruction CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  244  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4605888373516557399
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" "B11" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  462  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  464  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  530  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  532  <|@ instruction MOV x: [rcx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  534  <|@ instruction MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed} <|@ <|@
      nr  536  <|@ instruction MOV x: [rcx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  538  <|@ instruction MOV x: [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  540  <|@ instruction MOV x: [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  542  <|@ instruction MOV x: [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  546  <|@ instruction MOV x: [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  550  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  554  <|@ instruction stack:72|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction MOV (x: [rcx|QWORD[.] + 48], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: r10|DWORD) size: DWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [rcx|QWORD[.] + 28], y: r9|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction MOV x: [rcx|QWORD[.] + 16] y: 16 size: QWORD <|@ <|@
      nr  590  <|@ instruction MOV x: [rcx|QWORD[.] + 12] y: -1 size: DWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470] <|@ <|@
      nr  594  <|@ instruction stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607181957567736262
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B20" 
    successors "B24" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD <|@ <|@
      nr  740  <|@ instruction r11|DWORD[_] = MOV input: [rcx|QWORD[.] + 48] size: DWORD <|@ <|@
      nr  742  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  744  <|@ instruction stack:88|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction stack:96|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ st <@st|@reference-map: [rcx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, r14:0, stack:48, stack:56, stack:64, stack:72, stack:88]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  752  <|@ instruction CMPCONSTBRANCH x: [rcx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B56" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ st <@st|@reference-map: [rcx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, r14:0, stack:48, stack:56, stack:64, stack:72, stack:88]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r10|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38, 11] <|@ <|@
      nr  768  <|@ instruction TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:100|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  852  <|@ instruction r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  856  <|@ instruction r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD[.] + 40] size: DWORD <|@ <|@
      nr  860  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD = SHL value: r10|QWORD size: QWORD <|@ <|@
      nr  866  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  868  <|@ instruction r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction r9|QWORD = MOVSXD value: rdx|DWORD size: QWORD <|@ <|@
      nr  874  <|@ instruction r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  876  <|@ instruction r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD <|@ <|@
      nr  878  <|@ instruction r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  880  <|@ instruction stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction r13|DWORD = SUB (x: r14|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  884  <|@ instruction stack:44|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  886  <|@ instruction r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  888  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  892  <|@ instruction CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: > <|@ <|@
      nr  896  <|@ instruction rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD <|@ <|@
      nr  902  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction stack:112|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction stack:120|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction r13|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  910  <|@ instruction rbp|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL <|@ <|@
      nr  914  <|@ instruction r10|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  916  <|@ instruction r11|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rcx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1148  <|@ instruction r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1150  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>} <|@ <|@
      nr 1152  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:32|DWORD) size: DWORD <|@ <|@
      nr 1168  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: stack:36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction rdi|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418819801568
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1258  <|@ instruction rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B26" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ st <@st|@reference-map: [rcx:0, rbx:0, stack:48, stack:56, stack:64, stack:72, stack:88]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:56|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11] <|@ <|@
      nr 1276  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182418815069550
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" "B43" 
    successors "B49" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr 1312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4531004733973030643
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1356  <|@ st <@st|@reference-map: [stack:64, stack:72, stack:88]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131]
locals: stack:56|QWORD[.] stack:72|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11] <|@ <|@
      nr 1358  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1360  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1362  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B48" 
    successors "B19" "B60" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4607182456085696010
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  632  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r10:0, stack:64, stack:72, stack:88]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11] <|@ <|@
      nr  634  <|@ instruction rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr  636  <|@ st <@st|@reference-map: [rcx:0, rsi:0, rdi:0, r10:0, stack:64, stack:72, stack:88]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11] <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD <|@ <|@
      nr  640  <|@ instruction rdx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD <|@ <|@
      nr  642  <|@ instruction rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD <|@ <|@
      nr  644  <|@ instruction r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD <|@ <|@
      nr  646  <|@ instruction r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  648  <|@ instruction rax|DWORD = MOV input: [rcx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  650  <|@ instruction rbx|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  652  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B59" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  682  <|@ instruction stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4543903431572823789
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  708  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B53" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002761058724632
    begin_IR
      LIR
      nr 1300  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1310  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B42" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4531002140823638208
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction rbx|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ instruction rcx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD <|@ <|@
      nr  972  <|@ instruction rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  974  <|@ instruction out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  978  <|@ instruction out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ st <@st|@reference-map: [stack:48, stack:56, stack:64, stack:72, stack:88]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] stack:72|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: stack:56|QWORD[.] stack:72|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11] <|@ <|@
      nr  982  <|@ instruction rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction rsi|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 1386  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rcx|QWORD[.] + 24]) size: DWORD <|@ <|@
      nr 1388  <|@ instruction CMP x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1390  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1392  <|@ instruction rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr 1394  <|@ instruction CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4594337401099855896
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>} <|@ <|@
      nr  488  <|@ st <@st|@reference-map: [rdx:0, stack:88]
live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11] <|@ <|@
      nr  490  <|@ st <@st|@reference-map: [rax:0, rdx:0, stack:88]
live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58]
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] rbx|DWORD r9|DWORD r10|DWORD Object[null] int[0|0x0] int[0|0x0] rdx|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:58, 18, 11] <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4551095556324864068
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  254  <|@ instruction stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  258  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46]
locals: stack:56|QWORD[.] - - - stack:32|DWORD 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] stack:28|DWORD stack:36|DWORD stack:40|DWORD Object[null] int[0|0x0] int[0|0x0] stack:64|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11] <|@ <|@
      nr  396  <|@ instruction rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ st <@st|@reference-map: [stack:80, stack:88]
live-base-pointers: []
sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52]
stack: stack:56|QWORD[.] 
locals: - - - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18]
locals: stack:56|QWORD[.] vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]} Ljava/nio/HeapCharBuffer; int[-1|0xffffffffffffffff] long[16|0x10] stack:28|DWORD stack:36|DWORD stack:40|DWORD Object[null] int[0|0x0] int[0|0x0] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11] <|@ <|@
      nr  400  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  404  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3 <|@ <|@
      nr  406  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  408  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee <|@ <|@
      nr  410  <|@ instruction r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   50  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOVE input: int[-136723|0xfffffffffffde9ed] <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B5" "B7" "B62" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1678  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1680  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1042  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1058  <|@ instruction r11|DWORD = MOVE input: int[-152083|0xfffffffffffdaded] <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" "B32" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1024  <|@ instruction rbx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1118  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1120  <|@ st <@st|@reference-map: [rcx:0, rbx:0, rsi:0, r8:0, stack:48, stack:56]
live-base-pointers: []
java.lang.System$2.encodeASCII(System.java:2506) [bci: 10]
stack: rax|DWORD 
locals: - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] rbx|QWORD[.] r13|DWORD r14|DWORD r8|QWORD[.] rbp|DWORD r10|DWORD - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:10, 78, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1464  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1466  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD <|@ <|@
      nr 1484  <|@ instruction MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD <|@ <|@
      nr 1486  <|@ st <@st|@reference-map: [rcx:0, rbx:0, rsi:0, stack:48, stack:56]
live-base-pointers: []
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20]
stack: rbx|QWORD[.] 
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:20, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1240  <|@ instruction r8|DWORD = MOVE input: int[-156179|0xfffffffffffd9ded] <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B36" "B54" "B38" "B40" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr 1522  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1524  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:48, stack:56]
live-base-pointers: []
java.nio.Buffer.position(Buffer.java:330) [bci: 50]
locals: rcx|QWORD[.] r11|DWORD 
java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2]
locals: rcx|QWORD[.] - 
java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2]
locals: rcx|QWORD[.] r11|DWORD 
sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7]
locals: - - stack:96|QWORD[.] r10|DWORD 
sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130]
locals: - - - - - - - - - - 
sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17]
locals: - - - 
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57]
locals: stack:88|QWORD[.] rcx|QWORD[.] stack:96|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1200  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction r9|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1210  <|@ instruction r8|DWORD = MOVE input: int[-155155|0xfffffffffffda1ed] <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1182  <|@ instruction r8|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed] <|@ <|@
      nr 1184  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B55" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1490  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction r9|QWORD = MOVE input: long[17300|0x4394] <|@ <|@
      nr 1500  <|@ instruction r8|DWORD = MOVE input: int[-76083|0xfffffffffffed6cd] <|@ <|@
      nr 1502  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1008  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction r9|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1022  <|@ instruction r11|DWORD = MOVE input: int[-151059|0xfffffffffffdb1ed] <|@ <|@
      nr 1026  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1082  <|@ instruction r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1084  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction r9|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1094  <|@ instruction r11|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed] <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1586  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1588  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction r11|QWORD = MOVE input: long[8340|0x2094] <|@ <|@
      nr 1598  <|@ instruction r10|DWORD = MOVE input: int[-160531|0xfffffffffffd8ced] <|@ <|@
      nr 1600  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B59" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1634  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1636  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction r11|QWORD = MOVE input: long[11540|0x2d14] <|@ <|@
      nr 1536  <|@ instruction r10|DWORD = MOVE input: int[-150035|0xfffffffffffdb5ed] // MoveResolver resolve mapping <|@ <|@
      nr 1542  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1556  <|@ instruction r14|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r8|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r8:0, r14:0]
live-base-pointers: []
java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54]
locals: r8|QWORD[.] rcx|QWORD[.] r14|QWORD[.] int[0|0x0] - - - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:54, 38, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD <|@ <|@
      nr 1416  <|@ instruction MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD <|@ <|@
      nr 1418  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49]
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:49, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1642  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1652  <|@ instruction r10|DWORD = MOVE input: int[-140819|0xfffffffffffdd9ed] <|@ <|@
      nr 1658  <|@ instruction JUMP ~outgoingValues: [] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B61" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction r11|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr 1612  <|@ instruction r10|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed] <|@ <|@
      nr 1614  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  128  <|@ instruction r10|DWORD = MOVE input: int[-138771|0xfffffffffffde1ed] <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr  162  <|@ instruction r10|DWORD = MOVE input: int[-139795|0xfffffffffffddded] <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD <|@ <|@
      nr 1458  <|@ instruction MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD <|@ <|@
      nr 1460  <|@ st <@st|@reference-map: [rcx:0, rbx:0, rsi:0]
live-base-pointers: []
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41]
stack: rbx|QWORD[.] 
locals: rsi|QWORD[.] rcx|QWORD[.] - 
sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11]
locals: - - - - - 
>@ <|@ instruction DEOPT info [bci:41, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[10900|0x2a94] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-147987|0xfffffffffffdbded] <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr   94  <|@ instruction r10|DWORD = MOVE input: int[-137747|0xfffffffffffde5ed] <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: iload_2       
     2: iload_3       
     3: invokestatic  #67         // java.nio.CharBuffer.wrap:(char[], int, int)java.nio.CharBuffer
     6: astore        4
     8: aload_0       
     9: aload         4
    11: invokevirtual #23         // implWrite:(java.nio.CharBuffer)void
    14: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4881ec88000000669041817f20000000000f85f409000090909090909090909090909090904889ac24800000004889742458448b520c448b5e24468b1cdd20000000448bc94503c8453bca0f8fbf060000909090904585c90f8c8f09000090909090413bc90f8f020900009090909085c90f8c1409000090909090807e1b000f85b508000090909090908b4614413bc30f8e02050000909090909090909090909090908b5e20c5fa1004dd100000004183f801bb00000000440f4cc38bd9bd0000807fc5f97ec723fdc1ff17b9950000002bcff7c1e0ffffff7523c5f97ec781e7ffff7f0081cf00008000c5f97ec585ed7d02f7dfd3ff83c701d1ffeb33c5fa2cf881ff000000807527c5f97ec581e5ffffff7f33ff81fd0000807f7f13c5f97ec585edbf00000080bdffffff7f0f49fd440fafc7443bc0440f4fc0453bc30f8f8c0400009090909090909090909090498b8fb80100004c8d59384d3b9fc80100000f873a04000090909090909090909090909090904d899fb80100000f18813801000048c70101000000c74108addeaddec7410c0000000048c741100000000048c741180000000048c741200000000048c741280000000048c741300000000048894c2448909090909090909090909048c1ea03895130448951204489491c89591848c7411010000000c7410cffffffff48bbaddeaddeaddeadde48895c2440e93d0200006666660f1f840000000000666666900f1f4000909090904183fb010f857c0200009090904489742468909090909090909090909042c704d51400000001000000448b593049c1e2034c89542438448bf749c1e6034c89742430428504dd0000000080792c000f85670700009090909090428504c5000000004584c90f8548060000897c242c909090909090909090909090909090909090909090909090909090909090909090909090909049c1e3034d8bcb49c1e0034d8bf08b792803c74c63d049d1e24d8d52104d03d103d54c63ca4d8d49104d03ce458bf54403f544896c246c458bee442bea4489742464448bf34403f7896c2470418bee2be8413bed410f4fed498bf2448bd2498bd18bcd4c894424204c895c2418448be8418beae800000000448bd04403d5458bdd4403d8453bf30f8fad0100009090909090442bdf443bdb0f8ff7040000909090904585db0f8cef030000488b4c244890909090443b590c0f8c00050000448b7424689090909090909090904489591848be0000002b787f00004e8d343648beaddeaddeaddeadde493bf60f858d0400009090909090418bf22b7424703b74246c0f8f600400009090909085f60f8c3d0400008b7c242c909090903b34fd0c0000000f8cf103000090909090908934fd18000000488b5c24409090909090448b530c4585d20f85d4000000909090909090904585d20f8442010000909090904183fa010f858f0500004c8b54245890909090909090498bf2666690e8000000000f1f840000000000488b4c2448488b742458909090909090909090909090909090448b5620468b1cd5140000008b7e24448b04fd30000000440fbe0cfd2c0000008b14fd180000008b2cfd28000000448b2cfd1c000000448b34fd080000008b41188b591c3bd80f8f7bfdffffe9b504000044896c246c896c2470909090904585db0f85da0300009090904489742468488b4c2448488b742458e95ffdffff909090904183fa010f85b8020000909090488b4c2448e914ffffff8b4424644c8b442420488b5c243090909090909090909090909090909090488b742438488b542448488b4c2418498be8458bc3458bce488bfb48892c24448954240889442410666690e8000000000f1f840000000000488bd8488b4c2448e99cfeffff9090909090909090908b711c2b711883fe01b8000000000f4cf083fe010f849a03000090909090909090488bac24800000004881c488000000493ba7500400000f878a040000c5f877c38bd9909090e9a6fbffff90909090909090909048beaddeaddeaddeaddee8000000000f1f8400000000008500488bc8488b742458e9f0fbffff448944247044894c246c4489542468895c2474488954245090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090904c8bde666690e8000000000f1f8400000000008b742470666690e8000000000f1f840000000000488b74245841807f40000f842e000000448b5e2449c1e3034d85db0f841d0000004d8b57284983fa000f84b20300004983ea084d8957284d0357384d891a4c8bd049c1ea03448956244c8bd64c33d049c1ea160f844e0000004885c00f84450000004c8bd649c1ea0949bb00e0368d787f00004d03d341803a02742bf08304240041803a00742041c602004d8b5f484d85db0f84580300004983eb084d895f484d035f584d8913448b4c246c448b5424688b5c2474488b542450e938faffff894c2474488954245090909049c7c31405000041baede9fdff90909090909090458997840400004d899f90040000e8000000000f1f840000000000448b5424644c8b442420488b4c2448488b74245890909049c7c1140f000041bbedadfdff488b5c24189090909090909045899f840400004d898f90040000e8000000000f1f840000000000488b4c2448488b7424589090909090909041c78784040000ed90fdff49c7879004000014230000e8000000000f1f840000000000488b74245890909049c7c19411000041b8ed9dfdff90909090909090458987840400004d898f90040000e8000000000f1f840000000000488b74245890909049c7c1140f000041b8eda1fdffebc7488b74245890909049c7c1940c000041b8eda5fdffebb0488b74245890909049c7c19443000041b8cdd6feffeb99448b5424644c8b442420488b4c2448488b74245890909049c7c1940c000041bbedb1fdffe900ffffff448b5424644c8b442420488b74245890909049c7c19411000041bbeda9fdffe9dcfeffff488b4c2448488b74245890909049c7c39420000041baed8cfdff90909090909090458997840400004d899f90040000e8000000000f1f84000000000090909049c7c3142d000041baedb5fdff4c8b7424304c8b44243890909090909090458997840400004d899f90040000e8000000000f1f840000000000488b7424589090909090909041c78784040000ed94fdff49c78790040000941b0000e8000000000f1f840000000000894c2474488954245090909049c7c31414000041baedd9fdffe9d1fdffff90909049c7c39416000041baedc5fdffe940ffffff894c2474488954245090909049c7c3940c000041baede1fdffe99efdffff894c2474488954245090909049c7c3140f000041baedddfdffe980fdffff488b7424589090909090909041c78784040000ed99fdff49c7879004000014190000e8000000000f1f84000000000090909049c7c3942a000041baedbdfdffe9f2feffff894c2474488954245090909049c7c39407000041baede5fdffe91efdffff4889ac2480000000e800000000e9faf5fffff4488d0d62fbffff49898f68040000e9a8f5fffff44c891c24e800000000e94ffcfffff44c891424e800000000e9a9fcfffff441c78784040000f588feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f57bfeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f53cfeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f545feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f569feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f55dfeff49c7879004000000000000e8000000000f1f84000000000041c787840400008ff4fcff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 48 FRAME_COMPLETE  <||@
  Comment 48 ENTRY_BARRIER_PATCH  <||@
  Comment 62 block B0 null  <||@
  Comment 62 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 62 2 NOP  <||@
  Comment 63 4 NOP  <||@
  Comment 64 6 NOP  <||@
  Comment 65 8 NOP  <||@
  Comment 66 10 NOP  <||@
  Comment 67 12 NOP  <||@
  Comment 68 14 NOP  <||@
  Comment 69 16 NOP  <||@
  Comment 70 18 NOP  <||@
  Comment 71 20 NOP  <||@
  Comment 72 22 NOP  <||@
  Comment 73 24 NOP  <||@
  Comment 74 26 NOP  <||@
  Comment 75 28 NOP  <||@
  Comment 76 30 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 84 32 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD  <||@
  Comment 84 34 stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 89 36 r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 89 [rdx:0, rsi:0, stack:88]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-   <||@
  Comment 89 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 93 38 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 97 40 r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0]  <||@
  Comment 97 [rdx:0, rsi:0, stack:88]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-   <||@
  Comment 97 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 105 42 r9|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 111 44 CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 120 block B2 null  <||@
  Comment 120 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 120 70 NOP  <||@
  Comment 121 72 NOP  <||@
  Comment 122 74 NOP  <||@
  Comment 123 76 NOP  <||@
  Comment 124 78 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 133 block B4 null  <||@
  Comment 133 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 133 104 NOP  <||@
  Comment 134 106 NOP  <||@
  Comment 135 108 NOP  <||@
  Comment 136 110 NOP  <||@
  Comment 137 112 CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 146 block B6 null  <||@
  Comment 146 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 146 138 NOP  <||@
  Comment 147 140 NOP  <||@
  Comment 148 142 NOP  <||@
  Comment 149 144 NOP  <||@
  Comment 150 146 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 158 block B8 null  <||@
  Comment 158 170 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 158 172 NOP  <||@
  Comment 159 174 NOP  <||@
  Comment 160 176 NOP  <||@
  Comment 161 178 NOP  <||@
  Comment 162 180 CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null  <||@
  Comment 172 block B9 null  <||@
  Comment 172 182 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 172 184 NOP  <||@
  Comment 173 186 NOP  <||@
  Comment 174 188 NOP  <||@
  Comment 175 190 NOP  <||@
  Comment 176 192 NOP  <||@
  Comment 177 194 rax|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 180 196 CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD  <||@
  Comment 189 block B10 null  <||@
  Comment 189 198 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 189 200 NOP  <||@
  Comment 190 202 NOP  <||@
  Comment 191 204 NOP  <||@
  Comment 192 206 NOP  <||@
  Comment 193 208 NOP  <||@
  Comment 194 210 NOP  <||@
  Comment 195 212 NOP  <||@
  Comment 196 214 NOP  <||@
  Comment 197 216 NOP  <||@
  Comment 198 218 NOP  <||@
  Comment 199 220 NOP  <||@
  Comment 200 222 NOP  <||@
  Comment 201 224 NOP  <||@
  Comment 202 226 rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 205 228 xmm0|SINGLE = MOVSS input: [rbx|DWORD[_] * 8 + 16] size: SS state [bci:0]  <||@
  Comment 205 [rdx:0, rsi:0, stack:88]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-   <||@
  Comment 205 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 214 230 CMP x: r8|DWORD y: 1 size: DWORD  <||@
  Comment 218 232 rbx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 223 234 r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rbx|DWORD) condition: <  <||@
  Comment 227 236 rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 229 238 rdi|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rbp|DWORD, rcxTmp: rcx|ILLEGAL}  <||@
  Comment 344 240 r8|DWORD = IMUL (x: r8|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 348 242 CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 351 244 r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rax|DWORD) condition: >  <||@
  Comment 355 246 CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD  <||@
  Comment 364 block B12 null  <||@
  Comment 364 420 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 364 422 NOP  <||@
  Comment 365 424 NOP  <||@
  Comment 366 426 NOP  <||@
  Comment 367 428 JUMP ~outgoingValues: [] destination: B12 -> B14  <||@
  Comment 367 block B14 null  <||@
  Comment 367 442 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 367 444 NOP  <||@
  Comment 368 446 NOP  <||@
  Comment 369 448 NOP  <||@
  Comment 370 450 NOP  <||@
  Comment 371 452 NOP  <||@
  Comment 372 454 NOP  <||@
  Comment 373 456 NOP  <||@
  Comment 374 458 NOP  <||@
  Comment 375 460 rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 382 462 r11|QWORD = LEA address: [rcx|QWORD + 56] size: QWORD  <||@
  Comment 386 464 CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD  <||@
  Comment 399 block B16 null  <||@
  Comment 399 498 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 399 500 NOP  <||@
  Comment 400 502 NOP  <||@
  Comment 401 504 NOP  <||@
  Comment 402 506 NOP  <||@
  Comment 403 508 NOP  <||@
  Comment 404 510 NOP  <||@
  Comment 405 512 NOP  <||@
  Comment 406 514 NOP  <||@
  Comment 407 516 NOP  <||@
  Comment 408 518 NOP  <||@
  Comment 409 520 NOP  <||@
  Comment 410 522 NOP  <||@
  Comment 411 524 NOP  <||@
  Comment 412 526 NOP  <||@
  Comment 413 528 MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD  <||@
  Comment 420 530 AMD64PREFETCH ~address: [rcx|QWORD + 312] instr: 0  <||@
  Comment 427 532 MOV x: [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 434 534 MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}  <||@
  Comment 434 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}}  <||@
  Comment 441 536 MOV x: [rcx|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 448 538 MOV x: [rcx|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 456 540 MOV x: [rcx|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 464 542 MOV x: [rcx|QWORD + 32] y: 0 size: QWORD  <||@
  Comment 472 544 MOV x: [rcx|QWORD + 40] y: 0 size: QWORD  <||@
  Comment 480 546 MOV x: [rcx|QWORD + 48] y: 0 size: QWORD  <||@
  Comment 488 548 rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 488 550 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 488 block B17 null  <||@
  Comment 488 552 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 488 554 stack:72|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 493 556 NOP  <||@
  Comment 494 558 NOP  <||@
  Comment 495 560 NOP  <||@
  Comment 496 562 NOP  <||@
  Comment 497 564 NOP  <||@
  Comment 498 566 NOP  <||@
  Comment 499 568 NOP  <||@
  Comment 500 570 NOP  <||@
  Comment 501 572 NOP  <||@
  Comment 502 574 NOP  <||@
  Comment 503 576 NOP  <||@
  Comment 504 578 rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3  <||@
  Comment 508 580 MOV (x: [rcx|QWORD[.] + 48], y: rdx|DWORD[_]) size: DWORD  <||@
  Comment 511 582 MOV (x: [rcx|QWORD[.] + 32], y: r10|DWORD) size: DWORD  <||@
  Comment 515 584 MOV (x: [rcx|QWORD[.] + 28], y: r9|DWORD) size: DWORD  <||@
  Comment 519 586 MOV (x: [rcx|QWORD[.] + 24], y: rbx|DWORD) size: DWORD  <||@
  Comment 522 588 MOV x: [rcx|QWORD[.] + 16] y: 16 size: QWORD  <||@
  Comment 530 590 MOV x: [rcx|QWORD[.] + 12] y: -1 size: DWORD  <||@
  Comment 537 592 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470]  <||@
  Comment 537 {Object[CoderResult@167784470]}  <||@
  Comment 547 594 stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 552 596 JUMP ~outgoingValues: [] destination: B17 -> B18  <||@
  Comment 557 block B19 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 557 654 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 576 656 NOP  <||@
  Comment 577 658 NOP  <||@
  Comment 578 660 NOP  <||@
  Comment 579 662 NOP  <||@
  Comment 580 664 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null  <||@
  Comment 590 block B20 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 590 666 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 590 668 NOP  <||@
  Comment 591 670 NOP  <||@
  Comment 592 672 NOP  <||@
  Comment 593 674 stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 598 676 JUMP ~outgoingValues: [] destination: B20 -> B23  <||@
  Comment 598 block B23 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 598 714 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 598 716 NOP  <||@
  Comment 599 718 NOP  <||@
  Comment 600 720 NOP  <||@
  Comment 601 722 NOP  <||@
  Comment 602 724 NOP  <||@
  Comment 603 726 NOP  <||@
  Comment 604 728 NOP  <||@
  Comment 605 730 NOP  <||@
  Comment 606 732 NOP  <||@
  Comment 607 734 NOP  <||@
  Comment 608 736 NOP  <||@
  Comment 609 738 MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD  <||@
  Comment 621 740 r11|DWORD[_] = MOV input: [rcx|QWORD[.] + 48] size: DWORD  <||@
  Comment 625 742 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3  <||@
  Comment 629 744 stack:88|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 634 746 r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3  <||@
  Comment 641 748 stack:96|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD  <||@
  Comment 646 750 NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38, 11]  <||@
  Comment 646 [rcx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, r14:0, stack:48, stack:56, stack:64, stack:72, stack:88]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54, duringCall: false, rethrow: false]
              |0             |1             |2             |3           |4  |5  |6 
     locals:  |r10|QWORD[.]  |rcx|QWORD[.]  |r14|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 646 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 654 752 CMPCONSTBRANCH x: [rcx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null  <||@
  Comment 664 block B24 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 664 754 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 664 756 NOP  <||@
  Comment 665 758 NOP  <||@
  Comment 666 760 NOP  <||@
  Comment 667 762 NOP  <||@
  Comment 668 764 NOP  <||@
  Comment 669 766 NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38, 11]  <||@
  Comment 669 [rcx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, r14:0, stack:48, stack:56, stack:64, stack:72, stack:88]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54, duringCall: false, rethrow: false]
              |0             |1             |2             |3           |4  |5  |6 
     locals:  |r10|QWORD[.]  |rcx|QWORD[.]  |r14|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 669 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 677 768 TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56  <||@
  Comment 686 block B25 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 686 770 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 686 772 stack:100|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD  <||@
  Comment 690 774 NOP  <||@
  Comment 691 776 NOP  <||@
  Comment 692 778 NOP  <||@
  Comment 693 780 NOP  <||@
  Comment 694 782 NOP  <||@
  Comment 695 784 NOP  <||@
  Comment 696 786 NOP  <||@
  Comment 697 788 NOP  <||@
  Comment 698 790 NOP  <||@
  Comment 699 792 NOP  <||@
  Comment 700 794 NOP  <||@
  Comment 701 796 NOP  <||@
  Comment 702 798 NOP  <||@
  Comment 703 800 NOP  <||@
  Comment 704 802 NOP  <||@
  Comment 705 804 NOP  <||@
  Comment 706 806 NOP  <||@
  Comment 707 808 NOP  <||@
  Comment 708 810 NOP  <||@
  Comment 709 812 NOP  <||@
  Comment 710 814 NOP  <||@
  Comment 711 816 NOP  <||@
  Comment 712 818 NOP  <||@
  Comment 713 820 NOP  <||@
  Comment 714 822 NOP  <||@
  Comment 715 824 NOP  <||@
  Comment 716 826 NOP  <||@
  Comment 717 828 NOP  <||@
  Comment 718 830 NOP  <||@
  Comment 719 832 NOP  <||@
  Comment 720 834 NOP  <||@
  Comment 721 836 NOP  <||@
  Comment 722 838 NOP  <||@
  Comment 723 840 NOP  <||@
  Comment 724 842 NOP  <||@
  Comment 725 844 NOP  <||@
  Comment 726 846 NOP  <||@
  Comment 727 848 NOP  <||@
  Comment 728 850 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3  <||@
  Comment 732 852 r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 735 854 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3  <||@
  Comment 739 856 r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 742 858 rdi|DWORD = MOV input: [rcx|QWORD[.] + 40] size: DWORD  <||@
  Comment 745 860 rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 747 862 r10|QWORD = MOVSXD value: rax|DWORD size: QWORD  <||@
  Comment 750 864 r10|QWORD = SHL value: r10|QWORD size: QWORD  <||@
  Comment 753 866 r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD  <||@
  Comment 757 868 r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD  <||@
  Comment 760 870 rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 762 872 r9|QWORD = MOVSXD value: rdx|DWORD size: QWORD  <||@
  Comment 765 874 r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD  <||@
  Comment 769 876 r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD  <||@
  Comment 772 878 r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 778 880 stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 783 882 r13|DWORD = SUB (x: r14|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 789 884 stack:44|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 794 886 r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 800 888 stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 804 890 rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 809 892 CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 812 894 rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 816 896 rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD  <||@
  Comment 819 898 r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 822 900 rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD  <||@
  Comment 825 902 rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 827 904 stack:112|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 832 906 stack:120|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 837 908 r13|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 840 910 rbp|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 843 912 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL  <||@
  Comment 843 {Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL}  <||@
  Comment 848 914 r10|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 854 916 r11|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 860 918 CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD  <||@
  Comment 869 block B27 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 869 988 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 869 990 NOP  <||@
  Comment 870 992 NOP  <||@
  Comment 871 994 NOP  <||@
  Comment 872 996 NOP  <||@
  Comment 873 998 NOP  <||@
  Comment 874 1000 r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 877 1002 CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 886 block B29 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 886 1028 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 886 1030 NOP  <||@
  Comment 887 1032 NOP  <||@
  Comment 888 1034 NOP  <||@
  Comment 889 1036 NOP  <||@
  Comment 890 1038 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD  <||@
  Comment 899 block B31 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 899 1064 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 899 1066 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 904 1068 NOP  <||@
  Comment 905 1070 NOP  <||@
  Comment 906 1072 NOP  <||@
  Comment 907 1074 NOP  <||@
  Comment 908 1076 CMPBRANCH (x: r11|DWORD, y: [rcx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD  <||@
  Comment 918 block B34 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 918 1122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 918 1124 r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 923 1126 NOP  <||@
  Comment 924 1128 NOP  <||@
  Comment 925 1130 NOP  <||@
  Comment 926 1132 NOP  <||@
  Comment 927 1134 NOP  <||@
  Comment 928 1136 NOP  <||@
  Comment 929 1138 NOP  <||@
  Comment 930 1140 NOP  <||@
  Comment 931 1142 NOP  <||@
  Comment 932 1144 MOV (x: [rcx|QWORD[.] + 24], y: r11|DWORD) size: DWORD  <||@
  Comment 936 1146 rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 946 1148 r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0  <||@
  Comment 950 1150 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>}  <||@
  Comment 950 {meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>}}  <||@
  Comment 960 1152 CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD  <||@
  Comment 969 block B35 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 969 1154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 969 1156 NOP  <||@
  Comment 970 1158 NOP  <||@
  Comment 971 1160 NOP  <||@
  Comment 972 1162 NOP  <||@
  Comment 973 1164 NOP  <||@
  Comment 974 1166 rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:32|DWORD) size: DWORD  <||@
  Comment 981 1168 CMPBRANCH (x: rsi|DWORD, y: stack:36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD  <||@
  Comment 991 block B37 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 991 1186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 991 1188 NOP  <||@
  Comment 992 1190 NOP  <||@
  Comment 993 1192 NOP  <||@
  Comment 994 1194 NOP  <||@
  Comment 995 1196 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD  <||@
  Comment 1003 block B39 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1003 1214 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1003 1216 rdi|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD  <||@
  Comment 1007 1218 NOP  <||@
  Comment 1008 1220 NOP  <||@
  Comment 1009 1222 NOP  <||@
  Comment 1010 1224 NOP  <||@
  Comment 1011 1226 CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD  <||@
  Comment 1024 block B41 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1024 1244 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1024 1246 NOP  <||@
  Comment 1025 1248 NOP  <||@
  Comment 1026 1250 NOP  <||@
  Comment 1027 1252 NOP  <||@
  Comment 1028 1254 NOP  <||@
  Comment 1029 1256 MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD  <||@
  Comment 1036 1258 rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1041 1260 JUMP ~outgoingValues: [] destination: B41 -> B42  <||@
  Comment 1041 block B42 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1041 1262 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1041 1264 NOP  <||@
  Comment 1042 1266 NOP  <||@
  Comment 1043 1268 NOP  <||@
  Comment 1044 1270 NOP  <||@
  Comment 1045 1272 NOP  <||@
  Comment 1046 1274 r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11]  <||@
  Comment 1046 [rcx:0, rbx:0, stack:48, stack:56, stack:64, stack:72, stack:88]at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |-             |-  |- 
     stack:   |rbx|QWORD[.]  |   |  
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:88|QWORD[.]  |rcx|QWORD[.]  |stack:96|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1             |2 
     locals:  |stack:56|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1046 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1050 1276 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD  <||@
  Comment 1059 block B43 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1059 1278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1059 1280 NOP  <||@
  Comment 1060 1282 NOP  <||@
  Comment 1061 1284 NOP  <||@
  Comment 1062 1286 JUMP ~outgoingValues: [] destination: B43 -> B46  <||@
  Comment 1062 block B46 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1062 1312 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1062 1314 NOP  <||@
  Comment 1063 1316 NOP  <||@
  Comment 1064 1318 NOP  <||@
  Comment 1065 1320 NOP  <||@
  Comment 1066 1322 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD  <||@
  Comment 1075 block B47 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1075 1324 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1075 1326 NOP  <||@
  Comment 1076 1328 NOP  <||@
  Comment 1077 1330 NOP  <||@
  Comment 1078 1332 NOP  <||@
  Comment 1079 1334 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1089 block B48 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1089 1336 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1089 1338 r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1094 1340 NOP  <||@
  Comment 1095 1342 NOP  <||@
  Comment 1096 1344 NOP  <||@
  Comment 1097 1346 NOP  <||@
  Comment 1098 1348 NOP  <||@
  Comment 1099 1350 NOP  <||@
  Comment 1100 1352 NOP  <||@
  Comment 1101 1354 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1104 1356 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11]  <||@
  Comment 1107 {HotSpotMethod<StreamEncoder.writeBytes()>}  <||@
  Comment 1107 INVOKESPECIAL  <||@
  Comment 1112 [stack:64, stack:72, stack:88]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1120 1358 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1125 1360 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1130 1362 JUMP ~outgoingValues: [] destination: B48 -> B18  <||@
  Comment 1130 block B18 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1130 598 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1130 600 NOP  <||@
  Comment 1131 602 NOP  <||@
  Comment 1132 604 NOP  <||@
  Comment 1133 606 NOP  <||@
  Comment 1134 608 NOP  <||@
  Comment 1135 610 NOP  <||@
  Comment 1136 612 NOP  <||@
  Comment 1137 614 NOP  <||@
  Comment 1138 616 NOP  <||@
  Comment 1139 618 NOP  <||@
  Comment 1140 620 NOP  <||@
  Comment 1141 622 NOP  <||@
  Comment 1142 624 NOP  <||@
  Comment 1143 626 NOP  <||@
  Comment 1144 628 NOP  <||@
  Comment 1145 630 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 1149 632 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11]  <||@
  Comment 1149 [rcx:0, rsi:0, r10:0, stack:64, stack:72, stack:88]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1149 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1157 634 rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 1160 636 r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11]  <||@
  Comment 1160 [rcx:0, rsi:0, rdi:0, r10:0, stack:64, stack:72, stack:88]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1160 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1168 638 r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD  <||@
  Comment 1177 640 rdx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 1184 642 rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD  <||@
  Comment 1191 644 r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD  <||@
  Comment 1199 646 r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD  <||@
  Comment 1207 648 rax|DWORD = MOV input: [rcx|QWORD[.] + 24] size: DWORD  <||@
  Comment 1210 650 rbx|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD  <||@
  Comment 1213 652 CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD  <||@
  Comment 1226 block B21 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1226 678 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1226 680 stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1231 682 stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1235 684 NOP  <||@
  Comment 1236 686 NOP  <||@
  Comment 1237 688 NOP  <||@
  Comment 1238 690 NOP  <||@
  Comment 1239 692 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD  <||@
  Comment 1248 block B22 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1248 694 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1248 696 NOP  <||@
  Comment 1249 698 NOP  <||@
  Comment 1250 700 NOP  <||@
  Comment 1251 702 stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 1256 708 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1261 710 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1266 712 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 1271 block B44 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1271 1288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1271 1290 NOP  <||@
  Comment 1272 1292 NOP  <||@
  Comment 1273 1294 NOP  <||@
  Comment 1274 1296 NOP  <||@
  Comment 1275 1298 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1285 block B45 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1285 1300 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1285 1302 NOP  <||@
  Comment 1286 1304 NOP  <||@
  Comment 1287 1306 NOP  <||@
  Comment 1288 1308 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1293 1310 JUMP ~outgoingValues: [] destination: B45 -> B46  <||@
  Comment 1298 block B26 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1298 920 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1298 922 rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1302 924 r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1307 926 rbx|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1312 928 NOP  <||@
  Comment 1313 930 NOP  <||@
  Comment 1314 932 NOP  <||@
  Comment 1315 934 NOP  <||@
  Comment 1316 936 NOP  <||@
  Comment 1317 938 NOP  <||@
  Comment 1318 940 NOP  <||@
  Comment 1319 942 NOP  <||@
  Comment 1320 944 NOP  <||@
  Comment 1321 946 NOP  <||@
  Comment 1322 948 NOP  <||@
  Comment 1323 950 NOP  <||@
  Comment 1324 952 NOP  <||@
  Comment 1325 954 NOP  <||@
  Comment 1326 956 NOP  <||@
  Comment 1327 958 NOP  <||@
  Comment 1328 960 rsi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1333 962 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1338 964 rcx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 1343 966 rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1346 968 r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1349 970 r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 1352 972 rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1355 974 out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1359 976 out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1364 978 out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1368 980 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11]  <||@
  Comment 1371 {HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)>}  <||@
  Comment 1371 INVOKESPECIAL  <||@
  Comment 1376 [stack:48, stack:56, stack:64, stack:72, stack:88]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |- 
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           |4  |5  |6 
     locals:  |stack:88|QWORD[.]  |stack:72|QWORD[.]  |stack:96|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1384 982 rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1387 984 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1392 986 JUMP ~outgoingValues: [] destination: B26 -> B42  <||@
  Comment 1397 block B49 null  <||@
  Comment 1397 1364 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1397 1366 NOP  <||@
  Comment 1398 1368 NOP  <||@
  Comment 1399 1370 NOP  <||@
  Comment 1400 1372 NOP  <||@
  Comment 1401 1374 NOP  <||@
  Comment 1402 1376 NOP  <||@
  Comment 1403 1378 NOP  <||@
  Comment 1404 1380 NOP  <||@
  Comment 1405 1382 NOP  <||@
  Comment 1406 1384 rsi|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD  <||@
  Comment 1409 1386 rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rcx|QWORD[.] + 24]) size: DWORD  <||@
  Comment 1412 1388 CMP x: rsi|DWORD y: 1 size: DWORD  <||@
  Comment 1415 1390 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1420 1392 rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rax|DWORD) condition: <  <||@
  Comment 1423 1394 CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1432 block B51 null  <||@
  Comment 1432 1420 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1432 1422 NOP  <||@
  Comment 1433 1424 NOP  <||@
  Comment 1434 1426 NOP  <||@
  Comment 1435 1428 NOP  <||@
  Comment 1436 1430 NOP  <||@
  Comment 1437 1432 NOP  <||@
  Comment 1438 1434 NOP  <||@
  Comment 1439 1436 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1454 POLL_RETURN_FAR  <||@
  Comment 1471 block B13 null  <||@
  Comment 1471 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1471 432 rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1473 434 NOP  <||@
  Comment 1474 436 NOP  <||@
  Comment 1475 438 NOP  <||@
  Comment 1476 440 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 1481 block B15 null  <||@
  Comment 1481 466 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1481 468 NOP  <||@
  Comment 1482 470 NOP  <||@
  Comment 1483 472 NOP  <||@
  Comment 1484 474 NOP  <||@
  Comment 1485 476 NOP  <||@
  Comment 1486 478 NOP  <||@
  Comment 1487 480 NOP  <||@
  Comment 1488 482 NOP  <||@
  Comment 1489 484 NOP  <||@
  Comment 1490 486 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}  <||@
  Comment 1490 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}}  <||@
  Comment 1500 488 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11]  <||@
  Comment 1500 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1505 [rdx:0, stack:88]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                                                                                                                                                                                                                  |2 
     locals:  |stack:56|QWORD[.]  |vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]}  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1513 490 NULLCHECK address: [rax|QWORD[.]] state [bci:58, 18, 11]  <||@
  Comment 1513 [rax:0, rdx:0, stack:88]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                                                                                                                                                                                                                  |2 
     locals:  |stack:56|QWORD[.]  |vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]}  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1513 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1515 492 rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1518 494 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1523 496 JUMP ~outgoingValues: [] destination: B15 -> B17  <||@
  Comment 1528 block B11 null  <||@
  Comment 1528 248 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1528 250 stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1533 252 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1538 254 stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1543 256 stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1547 258 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1552 260 NOP  <||@
  Comment 1553 262 NOP  <||@
  Comment 1554 264 NOP  <||@
  Comment 1555 266 NOP  <||@
  Comment 1556 268 NOP  <||@
  Comment 1557 270 NOP  <||@
  Comment 1558 272 NOP  <||@
  Comment 1559 274 NOP  <||@
  Comment 1560 276 NOP  <||@
  Comment 1561 278 NOP  <||@
  Comment 1562 280 NOP  <||@
  Comment 1563 282 NOP  <||@
  Comment 1564 284 NOP  <||@
  Comment 1565 286 NOP  <||@
  Comment 1566 288 NOP  <||@
  Comment 1567 290 NOP  <||@
  Comment 1568 292 NOP  <||@
  Comment 1569 294 NOP  <||@
  Comment 1570 296 NOP  <||@
  Comment 1571 298 NOP  <||@
  Comment 1572 300 NOP  <||@
  Comment 1573 302 NOP  <||@
  Comment 1574 304 NOP  <||@
  Comment 1575 306 NOP  <||@
  Comment 1576 308 NOP  <||@
  Comment 1577 310 NOP  <||@
  Comment 1578 312 NOP  <||@
  Comment 1579 314 NOP  <||@
  Comment 1580 316 NOP  <||@
  Comment 1581 318 NOP  <||@
  Comment 1582 320 NOP  <||@
  Comment 1583 322 NOP  <||@
  Comment 1584 324 NOP  <||@
  Comment 1585 326 NOP  <||@
  Comment 1586 328 NOP  <||@
  Comment 1587 330 NOP  <||@
  Comment 1588 332 NOP  <||@
  Comment 1589 334 NOP  <||@
  Comment 1590 336 NOP  <||@
  Comment 1591 338 NOP  <||@
  Comment 1592 340 NOP  <||@
  Comment 1593 342 NOP  <||@
  Comment 1594 344 NOP  <||@
  Comment 1595 346 NOP  <||@
  Comment 1596 348 NOP  <||@
  Comment 1597 350 NOP  <||@
  Comment 1598 352 NOP  <||@
  Comment 1599 354 NOP  <||@
  Comment 1600 356 NOP  <||@
  Comment 1601 358 NOP  <||@
  Comment 1602 360 NOP  <||@
  Comment 1603 362 NOP  <||@
  Comment 1604 364 NOP  <||@
  Comment 1605 366 NOP  <||@
  Comment 1606 368 NOP  <||@
  Comment 1607 370 NOP  <||@
  Comment 1608 372 NOP  <||@
  Comment 1609 374 NOP  <||@
  Comment 1610 376 NOP  <||@
  Comment 1611 378 NOP  <||@
  Comment 1612 380 NOP  <||@
  Comment 1613 382 NOP  <||@
  Comment 1614 384 NOP  <||@
  Comment 1615 386 NOP  <||@
  Comment 1616 388 NOP  <||@
  Comment 1617 390 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1620 394 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11]  <||@
  Comment 1623 {HotSpotMethod<StreamEncoder.implFlushBuffer()>}  <||@
  Comment 1623 INVOKESPECIAL  <||@
  Comment 1628 [stack:80, stack:88]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4              
     locals:  |stack:56|QWORD[.]  |-  |-  |-  |stack:32|DWORD 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                                                                                                                                                                                                                                       |2 
     locals:  |stack:56|QWORD[.]  |vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]}  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1636 396 rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1640 398 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11]  <||@
  Comment 1643 {HotSpotMethod<ByteBuffer.allocate(int)>}  <||@
  Comment 1643 INVOKESTATIC  <||@
  Comment 1648 [stack:80, stack:88]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4 
     locals:  |-                  |-  |-  |-  |- 
     stack:   |stack:56|QWORD[.]  |   |   |   |  
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                                                                                                                                                                                                                                       |2 
     locals:  |stack:56|QWORD[.]  |vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]}  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1656 400 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1661 402 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee  <||@
  Comment 1718 404 r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3  <||@
  Comment 1725 406 MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 1729 408 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee  <||@
  Comment 1823 410 r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1828 412 r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1833 414 rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1837 416 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1842 418 JUMP ~outgoingValues: [] destination: B11 -> B14  <||@
  Comment 1847 block B1 null  <||@
  Comment 1847 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1847 48 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1851 50 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1856 52 NOP  <||@
  Comment 1857 54 NOP  <||@
  Comment 1858 56 NOP  <||@
  Comment 1859 58 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1866 60 r10|DWORD = MOVE input: int[-136723|0xfffffffffffde9ed]  <||@
  Comment 1872 66 JUMP ~outgoingValues: [] destination: B1 -> B63  <||@
  Comment 1872 block B63 null  <||@
  Comment 1872 1660 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1872 1662 NOP  <||@
  Comment 1873 1664 NOP  <||@
  Comment 1874 1666 NOP  <||@
  Comment 1875 1668 NOP  <||@
  Comment 1876 1670 NOP  <||@
  Comment 1877 1672 NOP  <||@
  Comment 1878 1674 NOP  <||@
  Comment 1879 1676 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1886 1678 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1893 1680 DEOPT info [bci:0]  <||@
  Comment 1893 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1898 [rdx:0, rsi:0]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-   <||@
  Comment 1906 block B30 null  <||@
  Comment 1906 1040 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1906 1042 r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1911 1044 r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1916 1046 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1921 1048 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1926 1050 NOP  <||@
  Comment 1927 1052 NOP  <||@
  Comment 1928 1054 NOP  <||@
  Comment 1929 1056 r9|QWORD = MOVE input: long[3860|0xf14]  <||@
  Comment 1936 1058 r11|DWORD = MOVE input: int[-152083|0xfffffffffffdaded]  <||@
  Comment 1942 1062 JUMP ~outgoingValues: [] destination: B30 -> B33  <||@
  Comment 1942 block B33 null  <||@
  Comment 1942 1100 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1942 1024 rbx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 1947 1102 NOP  <||@
  Comment 1948 1104 NOP  <||@
  Comment 1949 1106 NOP  <||@
  Comment 1950 1108 NOP  <||@
  Comment 1951 1110 NOP  <||@
  Comment 1952 1112 NOP  <||@
  Comment 1953 1114 NOP  <||@
  Comment 1954 1116 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 1961 1118 MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD  <||@
  Comment 1968 1120 DEOPT info [bci:10, 78, 17, 57, 38, 11]  <||@
  Comment 1968 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1973 [rcx:0, rbx:0, rsi:0, r8:0, stack:48, stack:56]at java.lang.System$2.encodeASCII(System.java:2506) [bci: 10, duringCall: false, rethrow: false]
              |0          |1  |2  |3  |4  |5 
     locals:  |-          |-  |-  |-  |-  |- 
     stack:   |rax|DWORD  |   |   |   |   |  
  at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3             |4          |5          |6            |7          |8          |9 
     locals:  |stack:88|QWORD[.]  |rcx|QWORD[.]  |stack:96|QWORD[.]  |rbx|QWORD[.]  |r13|DWORD  |r14|DWORD  |r8|QWORD[.]  |rbp|DWORD  |r10|DWORD  |- 
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:88|QWORD[.]  |rcx|QWORD[.]  |stack:96|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1981 block B53 null  <||@
  Comment 1981 1462 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1981 1464 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1986 1466 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1991 1468 NOP  <||@
  Comment 1992 1470 NOP  <||@
  Comment 1993 1472 NOP  <||@
  Comment 1994 1474 NOP  <||@
  Comment 1995 1476 NOP  <||@
  Comment 1996 1478 NOP  <||@
  Comment 1997 1480 NOP  <||@
  Comment 1998 1482 MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD  <||@
  Comment 2009 1484 MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD  <||@
  Comment 2020 1486 DEOPT info [bci:20, 57, 38, 11]  <||@
  Comment 2020 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2025 [rcx:0, rbx:0, rsi:0, stack:48, stack:56]at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |-             |-  |- 
     stack:   |rbx|QWORD[.]  |   |  
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:88|QWORD[.]  |rcx|QWORD[.]  |stack:96|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2033 block B40 null  <||@
  Comment 2033 1228 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2033 1230 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2038 1232 NOP  <||@
  Comment 2039 1234 NOP  <||@
  Comment 2040 1236 NOP  <||@
  Comment 2041 1238 r9|QWORD = MOVE input: long[4500|0x1194]  <||@
  Comment 2048 1240 r8|DWORD = MOVE input: int[-156179|0xfffffffffffd9ded]  <||@
  Comment 2054 1242 JUMP ~outgoingValues: [] destination: B40 -> B55  <||@
  Comment 2054 block B55 null  <||@
  Comment 2054 1504 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2054 1506 NOP  <||@
  Comment 2055 1508 NOP  <||@
  Comment 2056 1510 NOP  <||@
  Comment 2057 1512 NOP  <||@
  Comment 2058 1514 NOP  <||@
  Comment 2059 1516 NOP  <||@
  Comment 2060 1518 NOP  <||@
  Comment 2061 1520 MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD  <||@
  Comment 2068 1522 MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD  <||@
  Comment 2075 1524 DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11]  <||@
  Comment 2075 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2080 [rcx:0, rsi:0, stack:48, stack:56]at java.nio.Buffer.position(Buffer.java:330) [bci: 50, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rcx|QWORD[.]  |r11|DWORD 
  at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rcx|QWORD[.]  |- 
  at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2, duringCall: true, rethrow: false]
              |0             |1         
     locals:  |rcx|QWORD[.]  |r11|DWORD 
  at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2                  |3         
     locals:  |-  |-  |stack:96|QWORD[.]  |r10|DWORD 
  at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |- 
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:88|QWORD[.]  |rcx|QWORD[.]  |stack:96|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2088 block B38 null  <||@
  Comment 2088 1198 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2088 1200 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2093 1202 NOP  <||@
  Comment 2094 1204 NOP  <||@
  Comment 2095 1206 NOP  <||@
  Comment 2096 1208 r9|QWORD = MOVE input: long[3860|0xf14]  <||@
  Comment 2103 1210 r8|DWORD = MOVE input: int[-155155|0xfffffffffffda1ed]  <||@
  Comment 2109 1212 JUMP ~outgoingValues: [] destination: B38 -> B55  <||@
  Comment 2111 block B36 null  <||@
  Comment 2111 1170 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2111 1172 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2116 1174 NOP  <||@
  Comment 2117 1176 NOP  <||@
  Comment 2118 1178 NOP  <||@
  Comment 2119 1180 r9|QWORD = MOVE input: long[3220|0xc94]  <||@
  Comment 2126 1182 r8|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed]  <||@
  Comment 2132 1184 JUMP ~outgoingValues: [] destination: B36 -> B55  <||@
  Comment 2134 block B54 null  <||@
  Comment 2134 1488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2134 1490 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2139 1492 NOP  <||@
  Comment 2140 1494 NOP  <||@
  Comment 2141 1496 NOP  <||@
  Comment 2142 1498 r9|QWORD = MOVE input: long[17300|0x4394]  <||@
  Comment 2149 1500 r8|DWORD = MOVE input: int[-76083|0xfffffffffffed6cd]  <||@
  Comment 2155 1502 JUMP ~outgoingValues: [] destination: B54 -> B55  <||@
  Comment 2157 block B28 null  <||@
  Comment 2157 1004 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2157 1006 r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 2162 1008 r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2167 1010 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2172 1012 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2177 1014 NOP  <||@
  Comment 2178 1016 NOP  <||@
  Comment 2179 1018 NOP  <||@
  Comment 2180 1020 r9|QWORD = MOVE input: long[3220|0xc94]  <||@
  Comment 2187 1022 r11|DWORD = MOVE input: int[-151059|0xfffffffffffdb1ed]  <||@
  Comment 2193 1026 JUMP ~outgoingValues: [] destination: B28 -> B33  <||@
  Comment 2198 block B32 null  <||@
  Comment 2198 1078 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2198 1080 r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 2203 1082 r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2208 1084 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2213 1086 NOP  <||@
  Comment 2214 1088 NOP  <||@
  Comment 2215 1090 NOP  <||@
  Comment 2216 1092 r9|QWORD = MOVE input: long[4500|0x1194]  <||@
  Comment 2223 1094 r11|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed]  <||@
  Comment 2229 1098 JUMP ~outgoingValues: [] destination: B32 -> B33  <||@
  Comment 2234 block B59 null  <||@
  Comment 2234 1584 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2234 1586 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2239 1588 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2244 1590 NOP  <||@
  Comment 2245 1592 NOP  <||@
  Comment 2246 1594 NOP  <||@
  Comment 2247 1596 r11|QWORD = MOVE input: long[8340|0x2094]  <||@
  Comment 2254 1598 r10|DWORD = MOVE input: int[-160531|0xfffffffffffd8ced]  <||@
  Comment 2260 1600 JUMP ~outgoingValues: [] destination: B59 -> B61  <||@
  Comment 2260 block B61 null  <||@
  Comment 2260 1616 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2260 1618 NOP  <||@
  Comment 2261 1620 NOP  <||@
  Comment 2262 1622 NOP  <||@
  Comment 2263 1624 NOP  <||@
  Comment 2264 1626 NOP  <||@
  Comment 2265 1628 NOP  <||@
  Comment 2266 1630 NOP  <||@
  Comment 2267 1632 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2274 1634 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2281 1636 DEOPT info [bci:21, 11]  <||@
  Comment 2281 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2286 [rcx:0, rsi:0]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2294 block B56 null  <||@
  Comment 2294 1526 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2294 1528 NOP  <||@
  Comment 2295 1530 NOP  <||@
  Comment 2296 1532 NOP  <||@
  Comment 2297 1534 r11|QWORD = MOVE input: long[11540|0x2d14]  <||@
  Comment 2304 1536 r10|DWORD = MOVE input: int[-150035|0xfffffffffffdb5ed]  <||@
  Comment 2310 1542 JUMP ~outgoingValues: [] destination: B56 -> B58  <||@
  Comment 2310 block B58 null  <||@
  Comment 2310 1562 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2310 1556 r14|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 2315 1558 r8|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2320 1564 NOP  <||@
  Comment 2321 1566 NOP  <||@
  Comment 2322 1568 NOP  <||@
  Comment 2323 1570 NOP  <||@
  Comment 2324 1572 NOP  <||@
  Comment 2325 1574 NOP  <||@
  Comment 2326 1576 NOP  <||@
  Comment 2327 1578 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2334 1580 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2341 1582 DEOPT info [bci:54, 38, 11]  <||@
  Comment 2341 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2346 [rcx:0, rsi:0, r8:0, r14:0]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54, duringCall: false, rethrow: false]
              |0            |1             |2             |3           |4  |5  |6 
     locals:  |r8|QWORD[.]  |rcx|QWORD[.]  |r14|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2354 block B50 null  <||@
  Comment 2354 1396 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2354 1398 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2359 1400 NOP  <||@
  Comment 2360 1402 NOP  <||@
  Comment 2361 1404 NOP  <||@
  Comment 2362 1406 NOP  <||@
  Comment 2363 1408 NOP  <||@
  Comment 2364 1410 NOP  <||@
  Comment 2365 1412 NOP  <||@
  Comment 2366 1414 MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD  <||@
  Comment 2377 1416 MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD  <||@
  Comment 2388 1418 DEOPT info [bci:49, 11]  <||@
  Comment 2388 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2393 [rcx:0, rsi:0]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2401 block B62 null  <||@
  Comment 2401 1638 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2401 1640 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2405 1642 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2410 1644 NOP  <||@
  Comment 2411 1646 NOP  <||@
  Comment 2412 1648 NOP  <||@
  Comment 2413 1650 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 2420 1652 r10|DWORD = MOVE input: int[-140819|0xfffffffffffdd9ed]  <||@
  Comment 2426 1658 JUMP ~outgoingValues: [] destination: B62 -> B63  <||@
  Comment 2431 block B60 null  <||@
  Comment 2431 1602 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2431 1604 NOP  <||@
  Comment 2432 1606 NOP  <||@
  Comment 2433 1608 NOP  <||@
  Comment 2434 1610 r11|QWORD = MOVE input: long[5780|0x1694]  <||@
  Comment 2441 1612 r10|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed]  <||@
  Comment 2447 1614 JUMP ~outgoingValues: [] destination: B60 -> B61  <||@
  Comment 2452 block B5 null  <||@
  Comment 2452 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2452 116 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2456 118 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2461 120 NOP  <||@
  Comment 2462 122 NOP  <||@
  Comment 2463 124 NOP  <||@
  Comment 2464 126 r11|QWORD = MOVE input: long[3220|0xc94]  <||@
  Comment 2471 128 r10|DWORD = MOVE input: int[-138771|0xfffffffffffde1ed]  <||@
  Comment 2477 134 JUMP ~outgoingValues: [] destination: B5 -> B63  <||@
  Comment 2482 block B7 null  <||@
  Comment 2482 148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2482 150 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2486 152 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2491 154 NOP  <||@
  Comment 2492 156 NOP  <||@
  Comment 2493 158 NOP  <||@
  Comment 2494 160 r11|QWORD = MOVE input: long[3860|0xf14]  <||@
  Comment 2501 162 r10|DWORD = MOVE input: int[-139795|0xfffffffffffddded]  <||@
  Comment 2507 168 JUMP ~outgoingValues: [] destination: B7 -> B63  <||@
  Comment 2512 block B52 null  <||@
  Comment 2512 1438 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2512 1440 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2517 1442 NOP  <||@
  Comment 2518 1444 NOP  <||@
  Comment 2519 1446 NOP  <||@
  Comment 2520 1448 NOP  <||@
  Comment 2521 1450 NOP  <||@
  Comment 2522 1452 NOP  <||@
  Comment 2523 1454 NOP  <||@
  Comment 2524 1456 MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD  <||@
  Comment 2535 1458 MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD  <||@
  Comment 2546 1460 DEOPT info [bci:41, 11]  <||@
  Comment 2546 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2551 [rcx:0, rbx:0, rsi:0]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
     stack:   |rbx|QWORD[.]  |              |  
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2559 block B57 null  <||@
  Comment 2559 1544 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2559 1546 NOP  <||@
  Comment 2560 1548 NOP  <||@
  Comment 2561 1550 NOP  <||@
  Comment 2562 1552 r11|QWORD = MOVE input: long[10900|0x2a94]  <||@
  Comment 2569 1554 r10|DWORD = MOVE input: int[-147987|0xfffffffffffdbded]  <||@
  Comment 2575 1560 JUMP ~outgoingValues: [] destination: B57 -> B58  <||@
  Comment 2580 block B3 null  <||@
  Comment 2580 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2580 82 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2584 84 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2589 86 NOP  <||@
  Comment 2590 88 NOP  <||@
  Comment 2591 90 NOP  <||@
  Comment 2592 92 r11|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 2599 94 r10|DWORD = MOVE input: int[-137747|0xfffffffffffde5ed]  <||@
  Comment 2605 100 JUMP ~outgoingValues: [] destination: B3 -> B63  <||@
  Comment 2618 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2643 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2653 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2668 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2701 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2706 [rdx:0, rsi:0, stack:88]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-   <||@
  Comment 2736 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2741 [rdx:0, rsi:0, stack:88]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-   <||@
  Comment 2771 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2776 [rdx:0, rsi:0, stack:88]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-   <||@
  Comment 2806 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2811 [rcx:0, rbx:0, stack:48, stack:56, stack:64, stack:72, stack:88]at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |-             |-  |- 
     stack:   |rbx|QWORD[.]  |   |  
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:88|QWORD[.]  |rcx|QWORD[.]  |stack:96|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1             |2 
     locals:  |stack:56|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2841 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2846 [rcx:0, rsi:0, r10:0, stack:64, stack:72, stack:88]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2876 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2881 [rcx:0, rsi:0, rdi:0, r10:0, stack:64, stack:72, stack:88]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2911 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2916 [rax:0, rdx:0, stack:88]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                                                                                                                                                                                                                  |2 
     locals:  |stack:56|QWORD[.]  |vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]}  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2924 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2924 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2930 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2930 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10912[sun.nio.cs.StreamEncoder.implWrite(char[], int, int)]"
  method "HotSpotCompilation-10912[sun.nio.cs.StreamEncoder.implWrite(char[], int, int)]"
  date 1724269737421
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ade9d00 448b560849bc0000002b787f00004d03d44d33e4493bc20f8563b399fe66669089842400c0feff4881ec88000000669041817f20030000000f85f409000090909090909090909090909090904889ac24800000004889742458448b520c448b5e24468b1cdd20000000448bc94503c8453bca0f8fbf060000909090904585c90f8c8f09000090909090413bc90f8f020900009090909085c90f8c1409000090909090807e1b000f85b508000090909090908b4614413bc30f8e02050000909090909090909090909090908b5e20c5fa1004dd100000004183f801bb00000000440f4cc38bd9bd0000807fc5f97ec723fdc1ff17b9950000002bcff7c1e0ffffff7523c5f97ec781e7ffff7f0081cf00008000c5f97ec585ed7d02f7dfd3ff83c701d1ffeb33c5fa2cf881ff000000807527c5f97ec581e5ffffff7f33ff81fd0000807f7f13c5f97ec585edbf00000080bdffffff7f0f49fd440fafc7443bc0440f4fc0453bc30f8f8c0400009090909090909090909090498b8fb80100004c8d59384d3b9fc80100000f873a04000090909090909090909090909090904d899fb80100000f18813801000048c70101000000c74108607f2800c7410c0000000048c741100000000048c741180000000048c741200000000048c741280000000048c741300000000048894c2448909090909090909090909048c1ea03895130448951204489491c89591848c7411010000000c7410cffffffff48bb5807e72d0600000048895c2440e93d0200006666660f1f840000000000666666900f1f4000909090904183fb010f857c0200009090904489742468909090909090909090909042c704d51400000001000000448b593049c1e2034c89542438448bf749c1e6034c89742430428504dd0000000080792c000f85670700009090909090428504c5000000004584c90f8548060000897c242c909090909090909090909090909090909090909090909090909090909090909090909090909049c1e3034d8bcb49c1e0034d8bf08b792803c74c63d049d1e24d8d52104d03d103d54c63ca4d8d49104d03ce458bf54403f544896c246c458bee442bea4489742464448bf34403f7896c2470418bee2be8413bed410f4fed498bf2448bd2498bd18bcd4c894424204c895c2418448be8418beae8b015affe448bd04403d5458bdd4403d8453bf30f8fad0100009090909090442bdf443bdb0f8ff7040000909090904585db0f8cef030000488b4c244890909090443b590c0f8c00050000448b7424689090909090909090904489591848be0000002b787f00004e8d343648be18281c2b787f0000493bf60f858d0400009090909090418bf22b7424703b74246c0f8f600400009090909085f60f8c3d0400008b7c242c909090903b34fd0c0000000f8cf103000090909090908934fd18000000488b5c24409090909090448b530c4585d20f85d4000000909090909090904585d20f8442010000909090904183fa010f858f0500004c8b54245890909090909090498bf2666690e828b299fe0f1f840048060006488b4c2448488b742458909090909090909090909090909090448b5620468b1cd5140000008b7e24448b04fd30000000440fbe0cfd2c0000008b14fd180000008b2cfd28000000448b2cfd1c000000448b34fd080000008b41188b591c3bd80f8f7bfdffffe9b504000044896c246c896c2470909090904585db0f85da0300009090904489742468488b4c2448488b742458e95ffdffff909090904183fa010f85b8020000909090488b4c2448e914ffffff8b4424644c8b442420488b5c243090909090909090909090909090909090488b742438488b542448488b4c2418498be8458bc3458bce488bfb48892c24448954240889442410666690e820b199fe0f1f840050070009488bd8488b4c2448e99cfeffff9090909090909090908b711c2b711883fe01b8000000000f4cf083fe010f849a03000090909090909090488bac24800000004881c488000000493ba7500400000f878a040000c5f877c38bd9909090e9a6fbffff90909090909090909048be607f282b787f0000e89fdfaefe0f1f8400000000008500488bc8488b742458e9f0fbffff448944247044894c246c4489542468895c2474488954245090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090904c8bde666690e824b099fe0f1f84004c08000c8b742470666690e810b699fe0f1f84006008000d488b74245841807f40000f842e000000448b5e2449c1e3034d85db0f841d0000004d8b57284983fa000f84b20300004983ea084d8957284d0357384d891a4c8bd049c1ea03448956244c8bd64c33d049c1ea160f844e0000004885c00f84450000004c8bd649c1ea0949bb00e0368d787f00004d03d341803a02742bf08304240041803a00742041c602004d8b5f484d85db0f84580300004983eb084d895f484d035f584d8913448b4c246c448b5424688b5c2474488b542450e938faffff894c2474488954245090909049c7c31405000041baede9fdff90909090909090458997840400004d899f90040000e8100d9afe0f1f840000000000448b5424644c8b442420488b4c2448488b74245890909049c7c1140f000041bbedadfdff488b5c24189090909090909045899f840400004d898f90040000e8c50c9afe0f1f840000000000488b4c2448488b7424589090909090909041c78784040000ed90fdff49c7879004000014230000e8910c9afe0f1f840000000000488b74245890909049c7c19411000041b8ed9dfdff90909090909090458987840400004d898f90040000e85a0c9afe0f1f840000000000488b74245890909049c7c1140f000041b8eda1fdffebc7488b74245890909049c7c1940c000041b8eda5fdffebb0488b74245890909049c7c19443000041b8cdd6feffeb99448b5424644c8b442420488b4c2448488b74245890909049c7c1940c000041bbedb1fdffe900ffffff448b5424644c8b442420488b74245890909049c7c19411000041bbeda9fdffe9dcfeffff488b4c2448488b74245890909049c7c39420000041baed8cfdff90909090909090458997840400004d899f90040000e88c0b9afe0f1f84000000000090909049c7c3142d000041baedb5fdff4c8b7424304c8b44243890909090909090458997840400004d899f90040000e8500b9afe0f1f840000000000488b7424589090909090909041c78784040000ed94fdff49c78790040000941b0000e8210b9afe0f1f840000000000894c2474488954245090909049c7c31414000041baedd9fdffe9d1fdffff90909049c7c39416000041baedc5fdffe940ffffff894c2474488954245090909049c7c3940c000041baede1fdffe99efdffff894c2474488954245090909049c7c3140f000041baedddfdffe980fdffff488b7424589090909090909041c78784040000ed99fdff49c7879004000014190000e8830a9afe0f1f84000000000090909049c7c3942a000041baedbdfdffe9f2feffff894c2474488954245090909049c7c39407000041baede5fdffe91efdffff4889ac2480000000e8e10a98fee9faf5fffff4488d0d62fbffff49898f68040000e9a8189afef44c891c24e89edaadfee94ffcfffff44c891424e80ffcadfee9a9fcfffff441c78784040000f588feff49c7879004000000000000e8e8099afe0f1f84000000000041c78784040000f57bfeff49c7879004000000000000e8c5099afe0f1f84000000000041c78784040000f53cfeff49c7879004000000000000e8a2099afe0f1f84000000000041c78784040000f545feff49c7879004000000000000e87f099afe0f1f84000000000041c78784040000f569feff49c7879004000000000000e85c099afe0f1f84000000000041c78784040000f55dfeff49c7879004000000000000e839099afe0f1f84000000000041c787840400008ff4fcff49c7879004000000000000e816099afe0f1f840000000000e88faaadfef4e8a9069afef448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 48 FRAME_COMPLETE  <||@
  Comment 48 ENTRY_BARRIER_PATCH  <||@
  Comment 62 block B0 null  <||@
  Comment 62 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 62 2 NOP  <||@
  Comment 63 4 NOP  <||@
  Comment 64 6 NOP  <||@
  Comment 65 8 NOP  <||@
  Comment 66 10 NOP  <||@
  Comment 67 12 NOP  <||@
  Comment 68 14 NOP  <||@
  Comment 69 16 NOP  <||@
  Comment 70 18 NOP  <||@
  Comment 71 20 NOP  <||@
  Comment 72 22 NOP  <||@
  Comment 73 24 NOP  <||@
  Comment 74 26 NOP  <||@
  Comment 75 28 NOP  <||@
  Comment 76 30 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 84 32 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@49e68121 slotKind: QWORD  <||@
  Comment 84 34 stack:56|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 89 36 r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 89 [rdx:0, rsi:0, stack:88]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-   <||@
  Comment 89 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 93 38 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 97 40 r11|DWORD = MOV input: [r11|DWORD[_] * 8 + 32] size: DWORD state [bci:0]  <||@
  Comment 97 [rdx:0, rsi:0, stack:88]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-   <||@
  Comment 97 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 105 42 r9|DWORD = ADD (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 111 44 CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 120 block B2 null  <||@
  Comment 120 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 120 70 NOP  <||@
  Comment 121 72 NOP  <||@
  Comment 122 74 NOP  <||@
  Comment 123 76 NOP  <||@
  Comment 124 78 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 133 block B4 null  <||@
  Comment 133 102 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 133 104 NOP  <||@
  Comment 134 106 NOP  <||@
  Comment 135 108 NOP  <||@
  Comment 136 110 NOP  <||@
  Comment 137 112 CMPBRANCH (x: rcx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: DWORD  <||@
  Comment 146 block B6 null  <||@
  Comment 146 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 146 138 NOP  <||@
  Comment 147 140 NOP  <||@
  Comment 148 142 NOP  <||@
  Comment 149 144 NOP  <||@
  Comment 150 146 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 158 block B8 null  <||@
  Comment 158 170 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 158 172 NOP  <||@
  Comment 159 174 NOP  <||@
  Comment 160 176 NOP  <||@
  Comment 161 178 NOP  <||@
  Comment 162 180 CMPCONSTBRANCH x: [rsi|QWORD[.] + 27] trueDestinationProbability: 1.0 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B62 y: 0 size: BYTE inlinedY: null  <||@
  Comment 172 block B9 null  <||@
  Comment 172 182 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 172 184 NOP  <||@
  Comment 173 186 NOP  <||@
  Comment 174 188 NOP  <||@
  Comment 175 190 NOP  <||@
  Comment 176 192 NOP  <||@
  Comment 177 194 rax|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 180 196 CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.8565208600609246 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD  <||@
  Comment 189 block B10 null  <||@
  Comment 189 198 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 189 200 NOP  <||@
  Comment 190 202 NOP  <||@
  Comment 191 204 NOP  <||@
  Comment 192 206 NOP  <||@
  Comment 193 208 NOP  <||@
  Comment 194 210 NOP  <||@
  Comment 195 212 NOP  <||@
  Comment 196 214 NOP  <||@
  Comment 197 216 NOP  <||@
  Comment 198 218 NOP  <||@
  Comment 199 220 NOP  <||@
  Comment 200 222 NOP  <||@
  Comment 201 224 NOP  <||@
  Comment 202 226 rbx|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 205 228 xmm0|SINGLE = MOVSS input: [rbx|DWORD[_] * 8 + 16] size: SS state [bci:0]  <||@
  Comment 205 [rdx:0, rsi:0, stack:88]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-   <||@
  Comment 205 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 214 230 CMP x: r8|DWORD y: 1 size: DWORD  <||@
  Comment 218 232 rbx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 223 234 r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rbx|DWORD) condition: <  <||@
  Comment 227 236 rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 229 238 rdi|DWORD = AMD64_ROUND_FLOAT_TO_INTEGER input: xmm0|SINGLE {tmp: rbp|DWORD, rcxTmp: rcx|ILLEGAL}  <||@
  Comment 344 240 r8|DWORD = IMUL (x: r8|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 348 242 CMP (x: r8|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 351 244 r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rax|DWORD) condition: >  <||@
  Comment 355 246 CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 2.2036465218155943E-4 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD  <||@
  Comment 364 block B12 null  <||@
  Comment 364 420 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 364 422 NOP  <||@
  Comment 365 424 NOP  <||@
  Comment 366 426 NOP  <||@
  Comment 367 428 JUMP ~outgoingValues: [] destination: B12 -> B14  <||@
  Comment 367 block B14 null  <||@
  Comment 367 442 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 367 444 NOP  <||@
  Comment 368 446 NOP  <||@
  Comment 369 448 NOP  <||@
  Comment 370 450 NOP  <||@
  Comment 371 452 NOP  <||@
  Comment 372 454 NOP  <||@
  Comment 373 456 NOP  <||@
  Comment 374 458 NOP  <||@
  Comment 375 460 rcx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 382 462 r11|QWORD = LEA address: [rcx|QWORD + 56] size: QWORD  <||@
  Comment 386 464 CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD  <||@
  Comment 399 block B16 null  <||@
  Comment 399 498 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 399 500 NOP  <||@
  Comment 400 502 NOP  <||@
  Comment 401 504 NOP  <||@
  Comment 402 506 NOP  <||@
  Comment 403 508 NOP  <||@
  Comment 404 510 NOP  <||@
  Comment 405 512 NOP  <||@
  Comment 406 514 NOP  <||@
  Comment 407 516 NOP  <||@
  Comment 408 518 NOP  <||@
  Comment 409 520 NOP  <||@
  Comment 410 522 NOP  <||@
  Comment 411 524 NOP  <||@
  Comment 412 526 NOP  <||@
  Comment 413 528 MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD  <||@
  Comment 420 530 AMD64PREFETCH ~address: [rcx|QWORD + 312] instr: 0  <||@
  Comment 427 532 MOV x: [rcx|QWORD] y: 1 size: QWORD  <||@
  Comment 434 534 MOV x: [rcx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}  <||@
  Comment 434 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>;compressed}}  <||@
  Comment 441 536 MOV x: [rcx|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 448 538 MOV x: [rcx|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 456 540 MOV x: [rcx|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 464 542 MOV x: [rcx|QWORD + 32] y: 0 size: QWORD  <||@
  Comment 472 544 MOV x: [rcx|QWORD + 40] y: 0 size: QWORD  <||@
  Comment 480 546 MOV x: [rcx|QWORD + 48] y: 0 size: QWORD  <||@
  Comment 488 548 rcx|QWORD[.] = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 488 550 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 488 block B17 null  <||@
  Comment 488 552 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 488 554 stack:72|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 493 556 NOP  <||@
  Comment 494 558 NOP  <||@
  Comment 495 560 NOP  <||@
  Comment 496 562 NOP  <||@
  Comment 497 564 NOP  <||@
  Comment 498 566 NOP  <||@
  Comment 499 568 NOP  <||@
  Comment 500 570 NOP  <||@
  Comment 501 572 NOP  <||@
  Comment 502 574 NOP  <||@
  Comment 503 576 NOP  <||@
  Comment 504 578 rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3  <||@
  Comment 508 580 MOV (x: [rcx|QWORD[.] + 48], y: rdx|DWORD[_]) size: DWORD  <||@
  Comment 511 582 MOV (x: [rcx|QWORD[.] + 32], y: r10|DWORD) size: DWORD  <||@
  Comment 515 584 MOV (x: [rcx|QWORD[.] + 28], y: r9|DWORD) size: DWORD  <||@
  Comment 519 586 MOV (x: [rcx|QWORD[.] + 24], y: rbx|DWORD) size: DWORD  <||@
  Comment 522 588 MOV x: [rcx|QWORD[.] + 16] y: 16 size: QWORD  <||@
  Comment 530 590 MOV x: [rcx|QWORD[.] + 12] y: -1 size: DWORD  <||@
  Comment 537 592 rbx|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[CoderResult@167784470]  <||@
  Comment 537 {Object[CoderResult@167784470]}  <||@
  Comment 547 594 stack:80|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 552 596 JUMP ~outgoingValues: [] destination: B17 -> B18  <||@
  Comment 557 block B19 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 557 654 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 576 656 NOP  <||@
  Comment 577 658 NOP  <||@
  Comment 578 660 NOP  <||@
  Comment 579 662 NOP  <||@
  Comment 580 664 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9999405143388893 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 1 size: DWORD inlinedY: null  <||@
  Comment 590 block B20 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 590 666 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 590 668 NOP  <||@
  Comment 591 670 NOP  <||@
  Comment 592 672 NOP  <||@
  Comment 593 674 stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 598 676 JUMP ~outgoingValues: [] destination: B20 -> B23  <||@
  Comment 598 block B23 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 598 714 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 598 716 NOP  <||@
  Comment 599 718 NOP  <||@
  Comment 600 720 NOP  <||@
  Comment 601 722 NOP  <||@
  Comment 602 724 NOP  <||@
  Comment 603 726 NOP  <||@
  Comment 604 728 NOP  <||@
  Comment 605 730 NOP  <||@
  Comment 606 732 NOP  <||@
  Comment 607 734 NOP  <||@
  Comment 608 736 NOP  <||@
  Comment 609 738 MOV x: [r10|DWORD[_] * 8 + 20] y: 1 size: DWORD  <||@
  Comment 621 740 r11|DWORD[_] = MOV input: [rcx|QWORD[.] + 48] size: DWORD  <||@
  Comment 625 742 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3  <||@
  Comment 629 744 stack:88|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 634 746 r14|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3  <||@
  Comment 641 748 stack:96|QWORD[.] = MOVE input: r14|QWORD[.] moveKind: QWORD  <||@
  Comment 646 750 NULLCHECK address: [r11|DWORD[_] * 8] state [bci:54, 38, 11]  <||@
  Comment 646 [rcx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, r14:0, stack:48, stack:56, stack:64, stack:72, stack:88]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54, duringCall: false, rethrow: false]
              |0             |1             |2             |3           |4  |5  |6 
     locals:  |r10|QWORD[.]  |rcx|QWORD[.]  |r14|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 646 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 654 752 CMPCONSTBRANCH x: [rcx|QWORD[.] + 44] trueDestinationProbability: 1.0 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B57 y: 0 size: BYTE inlinedY: null  <||@
  Comment 664 block B24 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 664 754 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 664 756 NOP  <||@
  Comment 665 758 NOP  <||@
  Comment 666 760 NOP  <||@
  Comment 667 762 NOP  <||@
  Comment 668 764 NOP  <||@
  Comment 669 766 NULLCHECK address: [r8|DWORD[_] * 8] state [bci:54, 38, 11]  <||@
  Comment 669 [rcx:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, r14:0, stack:48, stack:56, stack:64, stack:72, stack:88]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54, duringCall: false, rethrow: false]
              |0             |1             |2             |3           |4  |5  |6 
     locals:  |r10|QWORD[.]  |rcx|QWORD[.]  |r14|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 669 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 677 768 TESTBYTEBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B56  <||@
  Comment 686 block B25 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 686 770 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 686 772 stack:100|DWORD[_] = MOVE input: rdi|DWORD[_] moveKind: DWORD  <||@
  Comment 690 774 NOP  <||@
  Comment 691 776 NOP  <||@
  Comment 692 778 NOP  <||@
  Comment 693 780 NOP  <||@
  Comment 694 782 NOP  <||@
  Comment 695 784 NOP  <||@
  Comment 696 786 NOP  <||@
  Comment 697 788 NOP  <||@
  Comment 698 790 NOP  <||@
  Comment 699 792 NOP  <||@
  Comment 700 794 NOP  <||@
  Comment 701 796 NOP  <||@
  Comment 702 798 NOP  <||@
  Comment 703 800 NOP  <||@
  Comment 704 802 NOP  <||@
  Comment 705 804 NOP  <||@
  Comment 706 806 NOP  <||@
  Comment 707 808 NOP  <||@
  Comment 708 810 NOP  <||@
  Comment 709 812 NOP  <||@
  Comment 710 814 NOP  <||@
  Comment 711 816 NOP  <||@
  Comment 712 818 NOP  <||@
  Comment 713 820 NOP  <||@
  Comment 714 822 NOP  <||@
  Comment 715 824 NOP  <||@
  Comment 716 826 NOP  <||@
  Comment 717 828 NOP  <||@
  Comment 718 830 NOP  <||@
  Comment 719 832 NOP  <||@
  Comment 720 834 NOP  <||@
  Comment 721 836 NOP  <||@
  Comment 722 838 NOP  <||@
  Comment 723 840 NOP  <||@
  Comment 724 842 NOP  <||@
  Comment 725 844 NOP  <||@
  Comment 726 846 NOP  <||@
  Comment 727 848 NOP  <||@
  Comment 728 850 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3  <||@
  Comment 732 852 r9|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 735 854 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3  <||@
  Comment 739 856 r14|QWORD[*] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 742 858 rdi|DWORD = MOV input: [rcx|QWORD[.] + 40] size: DWORD  <||@
  Comment 745 860 rax|DWORD = ADD (x: rax|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 747 862 r10|QWORD = MOVSXD value: rax|DWORD size: QWORD  <||@
  Comment 750 864 r10|QWORD = SHL value: r10|QWORD size: QWORD  <||@
  Comment 753 866 r10|QWORD = LEA address: [r10|QWORD + 16] size: QWORD  <||@
  Comment 757 868 r10|QWORD[*] = ADD (x: r10|QWORD, y: r9|QWORD[*]) size: QWORD  <||@
  Comment 760 870 rdx|DWORD = ADD (x: rdx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 762 872 r9|QWORD = MOVSXD value: rdx|DWORD size: QWORD  <||@
  Comment 765 874 r9|QWORD = LEA address: [r9|QWORD + 16] size: QWORD  <||@
  Comment 769 876 r9|QWORD[*] = ADD (x: r9|QWORD, y: r14|QWORD[*]) size: QWORD  <||@
  Comment 772 878 r14|DWORD = ADD (x: r13|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 778 880 stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 783 882 r13|DWORD = SUB (x: r14|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 789 884 stack:44|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 794 886 r14|DWORD = ADD (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 800 888 stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 804 890 rbp|DWORD = SUB (x: r14|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 809 892 CMP (x: rbp|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 812 894 rbp|DWORD = CMOVE (falseValue: rbp|DWORD, ~trueValue: r13|DWORD) condition: >  <||@
  Comment 816 896 rsi|QWORD = MOVE input: r10|QWORD[*] moveKind: QWORD  <||@
  Comment 819 898 r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 822 900 rdx|QWORD = MOVE input: r9|QWORD[*] moveKind: QWORD  <||@
  Comment 825 902 rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 827 904 stack:112|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 832 906 stack:120|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 837 908 r13|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 840 910 rbp|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 843 912 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|QWORD, rcx|DWORD] temps: [r10|ILLEGAL, r11|ILLEGAL, r8|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, r9|ILLEGAL, rax|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL  <||@
  Comment 843 {Stub<IntrinsicStubsGen.stringCodingEncodeArrayAscii>@0x7f78998db600:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD -> rax|DWORD]; temps=r10|ILLEGAL,r11|ILLEGAL,r8|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,r9|ILLEGAL,rax|ILLEGAL}  <||@
  Comment 848 914 r10|DWORD = ADD (x: rax|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 854 916 r11|DWORD = ADD (x: r13|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 860 918 CMPBRANCH (x: r14|DWORD, y: r11|DWORD) trueDestinationProbability: 8.274622302240076E-6 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: DWORD  <||@
  Comment 869 block B27 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 869 988 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 869 990 NOP  <||@
  Comment 870 992 NOP  <||@
  Comment 871 994 NOP  <||@
  Comment 872 996 NOP  <||@
  Comment 873 998 NOP  <||@
  Comment 874 1000 r11|DWORD = SUB (x: r11|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 877 1002 CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 886 block B29 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 886 1028 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 886 1030 NOP  <||@
  Comment 887 1032 NOP  <||@
  Comment 888 1034 NOP  <||@
  Comment 889 1036 NOP  <||@
  Comment 890 1038 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD  <||@
  Comment 899 block B31 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 899 1064 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 899 1066 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 904 1068 NOP  <||@
  Comment 905 1070 NOP  <||@
  Comment 906 1072 NOP  <||@
  Comment 907 1074 NOP  <||@
  Comment 908 1076 CMPBRANCH (x: r11|DWORD, y: [rcx|QWORD[.] + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B34 size: DWORD  <||@
  Comment 918 block B34 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 918 1122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 918 1124 r14|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 923 1126 NOP  <||@
  Comment 924 1128 NOP  <||@
  Comment 925 1130 NOP  <||@
  Comment 926 1132 NOP  <||@
  Comment 927 1134 NOP  <||@
  Comment 928 1136 NOP  <||@
  Comment 929 1138 NOP  <||@
  Comment 930 1140 NOP  <||@
  Comment 931 1142 NOP  <||@
  Comment 932 1144 MOV (x: [rcx|QWORD[.] + 24], y: r11|DWORD) size: DWORD  <||@
  Comment 936 1146 rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 946 1148 r14|QWORD = UNCOMPRESSPOINTER (input: r14|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 140154094223360 shift: 0  <||@
  Comment 950 1150 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>}  <||@
  Comment 950 {meta{HotSpotType<Ljava/nio/HeapByteBuffer;, resolved>}}  <||@
  Comment 960 1152 CMPBRANCH (x: rsi|QWORD, y: r14|QWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B54 size: QWORD  <||@
  Comment 969 block B35 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 969 1154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 969 1156 NOP  <||@
  Comment 970 1158 NOP  <||@
  Comment 971 1160 NOP  <||@
  Comment 972 1162 NOP  <||@
  Comment 973 1164 NOP  <||@
  Comment 974 1166 rsi|DWORD = SUB (x: r10|DWORD, ~y: stack:32|DWORD) size: DWORD  <||@
  Comment 981 1168 CMPBRANCH (x: rsi|DWORD, y: stack:36|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD  <||@
  Comment 991 block B37 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 991 1186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 991 1188 NOP  <||@
  Comment 992 1190 NOP  <||@
  Comment 993 1192 NOP  <||@
  Comment 994 1194 NOP  <||@
  Comment 995 1196 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD  <||@
  Comment 1003 block B39 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1003 1214 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1003 1216 rdi|DWORD[_] = MOVE input: stack:100|DWORD[_] moveKind: DWORD  <||@
  Comment 1007 1218 NOP  <||@
  Comment 1008 1220 NOP  <||@
  Comment 1009 1222 NOP  <||@
  Comment 1010 1224 NOP  <||@
  Comment 1011 1226 CMPBRANCH (x: rsi|DWORD, y: [rdi|DWORD[_] * 8 + 12]) trueDestinationProbability: 0.0 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD  <||@
  Comment 1024 block B41 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1024 1244 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1024 1246 NOP  <||@
  Comment 1025 1248 NOP  <||@
  Comment 1026 1250 NOP  <||@
  Comment 1027 1252 NOP  <||@
  Comment 1028 1254 NOP  <||@
  Comment 1029 1256 MOV (x: [rdi|DWORD[_] * 8 + 24], y: rsi|DWORD) size: DWORD  <||@
  Comment 1036 1258 rbx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1041 1260 JUMP ~outgoingValues: [] destination: B41 -> B42  <||@
  Comment 1041 block B42 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1041 1262 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1041 1264 NOP  <||@
  Comment 1042 1266 NOP  <||@
  Comment 1043 1268 NOP  <||@
  Comment 1044 1270 NOP  <||@
  Comment 1045 1272 NOP  <||@
  Comment 1046 1274 r10|DWORD = MOV input: [rbx|QWORD[.] + 12] size: DWORD state [bci:20, 57, 38, 11]  <||@
  Comment 1046 [rcx:0, rbx:0, stack:48, stack:56, stack:64, stack:72, stack:88]at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |-             |-  |- 
     stack:   |rbx|QWORD[.]  |   |  
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:88|QWORD[.]  |rcx|QWORD[.]  |stack:96|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1             |2 
     locals:  |stack:56|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1046 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1050 1276 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917243269874 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD  <||@
  Comment 1059 block B43 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1059 1278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1059 1280 NOP  <||@
  Comment 1060 1282 NOP  <||@
  Comment 1061 1284 NOP  <||@
  Comment 1062 1286 JUMP ~outgoingValues: [] destination: B43 -> B46  <||@
  Comment 1062 block B46 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1062 1312 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1062 1314 NOP  <||@
  Comment 1063 1316 NOP  <||@
  Comment 1064 1318 NOP  <||@
  Comment 1065 1320 NOP  <||@
  Comment 1066 1322 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9999917209847682 condition: = trueDestination: B46 -> B49 falseDestination: B46 -> B47 size: DWORD  <||@
  Comment 1075 block B47 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1075 1324 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1075 1326 NOP  <||@
  Comment 1076 1328 NOP  <||@
  Comment 1077 1330 NOP  <||@
  Comment 1078 1332 NOP  <||@
  Comment 1079 1334 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1089 block B48 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1089 1336 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1089 1338 r10|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1094 1340 NOP  <||@
  Comment 1095 1342 NOP  <||@
  Comment 1096 1344 NOP  <||@
  Comment 1097 1346 NOP  <||@
  Comment 1098 1348 NOP  <||@
  Comment 1099 1350 NOP  <||@
  Comment 1100 1352 NOP  <||@
  Comment 1101 1354 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1104 1356 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.writeBytes()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:131, 11]  <||@
  Comment 1107 {HotSpotMethod<StreamEncoder.writeBytes()>}  <||@
  Comment 1107 INVOKESPECIAL  <||@
  Comment 1112 [stack:64, stack:72, stack:88]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:381) [bci: 131, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1120 1358 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1125 1360 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1130 1362 JUMP ~outgoingValues: [] destination: B48 -> B18  <||@
  Comment 1130 block B18 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1130 598 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1130 600 NOP  <||@
  Comment 1131 602 NOP  <||@
  Comment 1132 604 NOP  <||@
  Comment 1133 606 NOP  <||@
  Comment 1134 608 NOP  <||@
  Comment 1135 610 NOP  <||@
  Comment 1136 612 NOP  <||@
  Comment 1137 614 NOP  <||@
  Comment 1138 616 NOP  <||@
  Comment 1139 618 NOP  <||@
  Comment 1140 620 NOP  <||@
  Comment 1141 622 NOP  <||@
  Comment 1142 624 NOP  <||@
  Comment 1143 626 NOP  <||@
  Comment 1144 628 NOP  <||@
  Comment 1145 630 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 1149 632 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 20] size: DWORD state [bci:21, 11]  <||@
  Comment 1149 [rcx:0, rsi:0, r10:0, stack:64, stack:72, stack:88]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1149 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1157 634 rdi|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 1160 636 r8|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 48] size: DWORD state [bci:21, 11]  <||@
  Comment 1160 [rcx:0, rsi:0, rdi:0, r10:0, stack:64, stack:72, stack:88]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1160 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1168 638 r9|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 44] size: DWORD  <||@
  Comment 1177 640 rdx|DWORD = MOV input: [rdi|DWORD[_] * 8 + 24] size: DWORD  <||@
  Comment 1184 642 rbp|DWORD = MOV input: [rdi|DWORD[_] * 8 + 40] size: DWORD  <||@
  Comment 1191 644 r13|DWORD = MOV input: [rdi|DWORD[_] * 8 + 28] size: DWORD  <||@
  Comment 1199 646 r14|DWORD = MOV input: [rdi|DWORD[_] * 8 + 8] size: DWORD  <||@
  Comment 1207 648 rax|DWORD = MOV input: [rcx|QWORD[.] + 24] size: DWORD  <||@
  Comment 1210 650 rbx|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD  <||@
  Comment 1213 652 CMPBRANCH (x: rbx|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B60 size: DWORD  <||@
  Comment 1226 block B21 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1226 678 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1226 680 stack:36|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1231 682 stack:32|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1235 684 NOP  <||@
  Comment 1236 686 NOP  <||@
  Comment 1237 688 NOP  <||@
  Comment 1238 690 NOP  <||@
  Comment 1239 692 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B59 size: DWORD  <||@
  Comment 1248 block B22 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1248 694 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1248 696 NOP  <||@
  Comment 1249 698 NOP  <||@
  Comment 1250 700 NOP  <||@
  Comment 1251 702 stack:40|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 1256 708 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1261 710 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1266 712 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 1271 block B44 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1271 1288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1271 1290 NOP  <||@
  Comment 1272 1292 NOP  <||@
  Comment 1273 1294 NOP  <||@
  Comment 1274 1296 NOP  <||@
  Comment 1275 1298 CMPCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B53 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1285 block B45 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1285 1300 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1285 1302 NOP  <||@
  Comment 1286 1304 NOP  <||@
  Comment 1287 1306 NOP  <||@
  Comment 1288 1308 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1293 1310 JUMP ~outgoingValues: [] destination: B45 -> B46  <||@
  Comment 1298 block B26 loop 0 depth 1 header:82|LoopBegin  <||@
  Comment 1298 920 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1298 922 rax|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1302 924 r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1307 926 rbx|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1312 928 NOP  <||@
  Comment 1313 930 NOP  <||@
  Comment 1314 932 NOP  <||@
  Comment 1315 934 NOP  <||@
  Comment 1316 936 NOP  <||@
  Comment 1317 938 NOP  <||@
  Comment 1318 940 NOP  <||@
  Comment 1319 942 NOP  <||@
  Comment 1320 944 NOP  <||@
  Comment 1321 946 NOP  <||@
  Comment 1322 948 NOP  <||@
  Comment 1323 950 NOP  <||@
  Comment 1324 952 NOP  <||@
  Comment 1325 954 NOP  <||@
  Comment 1326 956 NOP  <||@
  Comment 1327 958 NOP  <||@
  Comment 1328 960 rsi|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1333 962 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1338 964 rcx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 1343 966 rbp|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1346 968 r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1349 970 r9|DWORD = MOVE input: r14|DWORD moveKind: DWORD  <||@
  Comment 1352 972 rdi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1355 974 out:0|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1359 976 out:8|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1364 978 out:16|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1368 980 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|DWORD, r9|DWORD, rdi|QWORD[.], out:0|QWORD[.], out:8|DWORD, out:16|DWORD] temps: [out:0|QWORD[.], out:8|DWORD, out:16|DWORD] callTarget: HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:120, 17, 57, 38, 11]  <||@
  Comment 1371 {HotSpotMethod<UTF_8$Encoder.encodeArrayLoopSlow(CharBuffer, char[], int, int, ByteBuffer, byte[], int, int)>}  <||@
  Comment 1371 INVOKESPECIAL  <||@
  Comment 1376 [stack:48, stack:56, stack:64, stack:72, stack:88]at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:461) [bci: 120, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |- 
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           |4  |5  |6 
     locals:  |stack:88|QWORD[.]  |stack:72|QWORD[.]  |stack:96|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:56|QWORD[.]  |stack:72|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1384 982 rbx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1387 984 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1392 986 JUMP ~outgoingValues: [] destination: B26 -> B42  <||@
  Comment 1397 block B49 null  <||@
  Comment 1397 1364 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1397 1366 NOP  <||@
  Comment 1398 1368 NOP  <||@
  Comment 1399 1370 NOP  <||@
  Comment 1400 1372 NOP  <||@
  Comment 1401 1374 NOP  <||@
  Comment 1402 1376 NOP  <||@
  Comment 1403 1378 NOP  <||@
  Comment 1404 1380 NOP  <||@
  Comment 1405 1382 NOP  <||@
  Comment 1406 1384 rsi|DWORD = MOV input: [rcx|QWORD[.] + 28] size: DWORD  <||@
  Comment 1409 1386 rsi|DWORD = SUB (x: rsi|DWORD, ~y: [rcx|QWORD[.] + 24]) size: DWORD  <||@
  Comment 1412 1388 CMP x: rsi|DWORD y: 1 size: DWORD  <||@
  Comment 1415 1390 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1420 1392 rsi|DWORD = CMOVE (falseValue: rsi|DWORD, ~trueValue: rax|DWORD) condition: <  <||@
  Comment 1423 1394 CMPCONSTBRANCH x: rsi|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: DWORD inlinedY: null  <||@
  Comment 1432 block B51 null  <||@
  Comment 1432 1420 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1432 1422 NOP  <||@
  Comment 1433 1424 NOP  <||@
  Comment 1434 1426 NOP  <||@
  Comment 1435 1428 NOP  <||@
  Comment 1436 1430 NOP  <||@
  Comment 1437 1432 NOP  <||@
  Comment 1438 1434 NOP  <||@
  Comment 1439 1436 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1454 POLL_RETURN_FAR  <||@
  Comment 1471 block B13 null  <||@
  Comment 1471 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1471 432 rbx|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1473 434 NOP  <||@
  Comment 1474 436 NOP  <||@
  Comment 1475 438 NOP  <||@
  Comment 1476 440 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 1481 block B15 null  <||@
  Comment 1481 466 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1481 468 NOP  <||@
  Comment 1482 470 NOP  <||@
  Comment 1483 472 NOP  <||@
  Comment 1484 474 NOP  <||@
  Comment 1485 476 NOP  <||@
  Comment 1486 478 NOP  <||@
  Comment 1487 480 NOP  <||@
  Comment 1488 482 NOP  <||@
  Comment 1489 484 NOP  <||@
  Comment 1490 486 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}  <||@
  Comment 1490 {meta{HotSpotType<Ljava/nio/HeapCharBuffer;, resolved>}}  <||@
  Comment 1500 488 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:58, 18, 11]  <||@
  Comment 1500 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1505 [rdx:0, stack:88]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                                                                                                                                                                                                                  |2 
     locals:  |stack:56|QWORD[.]  |vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]}  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1513 490 NULLCHECK address: [rax|QWORD[.]] state [bci:58, 18, 11]  <||@
  Comment 1513 [rax:0, rdx:0, stack:88]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                                                                                                                                                                                                                  |2 
     locals:  |stack:56|QWORD[.]  |vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]}  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1513 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1515 492 rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1518 494 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1523 496 JUMP ~outgoingValues: [] destination: B15 -> B17  <||@
  Comment 1528 block B11 null  <||@
  Comment 1528 248 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1528 250 stack:32|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1533 252 stack:36|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1538 254 stack:40|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1543 256 stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1547 258 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1552 260 NOP  <||@
  Comment 1553 262 NOP  <||@
  Comment 1554 264 NOP  <||@
  Comment 1555 266 NOP  <||@
  Comment 1556 268 NOP  <||@
  Comment 1557 270 NOP  <||@
  Comment 1558 272 NOP  <||@
  Comment 1559 274 NOP  <||@
  Comment 1560 276 NOP  <||@
  Comment 1561 278 NOP  <||@
  Comment 1562 280 NOP  <||@
  Comment 1563 282 NOP  <||@
  Comment 1564 284 NOP  <||@
  Comment 1565 286 NOP  <||@
  Comment 1566 288 NOP  <||@
  Comment 1567 290 NOP  <||@
  Comment 1568 292 NOP  <||@
  Comment 1569 294 NOP  <||@
  Comment 1570 296 NOP  <||@
  Comment 1571 298 NOP  <||@
  Comment 1572 300 NOP  <||@
  Comment 1573 302 NOP  <||@
  Comment 1574 304 NOP  <||@
  Comment 1575 306 NOP  <||@
  Comment 1576 308 NOP  <||@
  Comment 1577 310 NOP  <||@
  Comment 1578 312 NOP  <||@
  Comment 1579 314 NOP  <||@
  Comment 1580 316 NOP  <||@
  Comment 1581 318 NOP  <||@
  Comment 1582 320 NOP  <||@
  Comment 1583 322 NOP  <||@
  Comment 1584 324 NOP  <||@
  Comment 1585 326 NOP  <||@
  Comment 1586 328 NOP  <||@
  Comment 1587 330 NOP  <||@
  Comment 1588 332 NOP  <||@
  Comment 1589 334 NOP  <||@
  Comment 1590 336 NOP  <||@
  Comment 1591 338 NOP  <||@
  Comment 1592 340 NOP  <||@
  Comment 1593 342 NOP  <||@
  Comment 1594 344 NOP  <||@
  Comment 1595 346 NOP  <||@
  Comment 1596 348 NOP  <||@
  Comment 1597 350 NOP  <||@
  Comment 1598 352 NOP  <||@
  Comment 1599 354 NOP  <||@
  Comment 1600 356 NOP  <||@
  Comment 1601 358 NOP  <||@
  Comment 1602 360 NOP  <||@
  Comment 1603 362 NOP  <||@
  Comment 1604 364 NOP  <||@
  Comment 1605 366 NOP  <||@
  Comment 1606 368 NOP  <||@
  Comment 1607 370 NOP  <||@
  Comment 1608 372 NOP  <||@
  Comment 1609 374 NOP  <||@
  Comment 1610 376 NOP  <||@
  Comment 1611 378 NOP  <||@
  Comment 1612 380 NOP  <||@
  Comment 1613 382 NOP  <||@
  Comment 1614 384 NOP  <||@
  Comment 1615 386 NOP  <||@
  Comment 1616 388 NOP  <||@
  Comment 1617 390 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1620 394 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<StreamEncoder.implFlushBuffer()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:46, 18, 11]  <||@
  Comment 1623 {HotSpotMethod<StreamEncoder.implFlushBuffer()>}  <||@
  Comment 1623 INVOKESPECIAL  <||@
  Comment 1628 [stack:80, stack:88]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:397) [bci: 46, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4              
     locals:  |stack:56|QWORD[.]  |-  |-  |-  |stack:32|DWORD 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                                                                                                                                                                                                                                       |2 
     locals:  |stack:56|QWORD[.]  |vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]}  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1636 396 rsi|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1640 398 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|DWORD] temps: [] callTarget: HotSpotMethod<ByteBuffer.allocate(int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:52, 18, 11]  <||@
  Comment 1643 {HotSpotMethod<ByteBuffer.allocate(int)>}  <||@
  Comment 1643 INVOKESTATIC  <||@
  Comment 1648 [stack:80, stack:88]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:398) [bci: 52, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4 
     locals:  |-                  |-  |-  |-  |- 
     stack:   |stack:56|QWORD[.]  |   |   |   |  
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                                                                                                                                                                                                                                       |2 
     locals:  |stack:56|QWORD[.]  |vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=stack:28|DWORD,limit=stack:36|DWORD,capacity=stack:40|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=stack:64|QWORD[.]}  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1656 400 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1661 402 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 36], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee  <||@
  Comment 1718 404 r10|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@3b9a2d98 encoding: base: 0 shift: 3  <||@
  Comment 1725 406 MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 1729 408 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rax|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@297635ee  <||@
  Comment 1823 410 r9|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1828 412 r10|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1833 414 rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1837 416 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1842 418 JUMP ~outgoingValues: [] destination: B11 -> B14  <||@
  Comment 1847 block B1 null  <||@
  Comment 1847 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1847 48 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1851 50 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1856 52 NOP  <||@
  Comment 1857 54 NOP  <||@
  Comment 1858 56 NOP  <||@
  Comment 1859 58 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 1866 60 r10|DWORD = MOVE input: int[-136723|0xfffffffffffde9ed]  <||@
  Comment 1872 66 JUMP ~outgoingValues: [] destination: B1 -> B63  <||@
  Comment 1872 block B63 null  <||@
  Comment 1872 1660 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1872 1662 NOP  <||@
  Comment 1873 1664 NOP  <||@
  Comment 1874 1666 NOP  <||@
  Comment 1875 1668 NOP  <||@
  Comment 1876 1670 NOP  <||@
  Comment 1877 1672 NOP  <||@
  Comment 1878 1674 NOP  <||@
  Comment 1879 1676 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1886 1678 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1893 1680 DEOPT info [bci:0]  <||@
  Comment 1893 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1898 [rdx:0, rsi:0]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-   <||@
  Comment 1906 block B30 null  <||@
  Comment 1906 1040 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1906 1042 r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1911 1044 r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 1916 1046 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1921 1048 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1926 1050 NOP  <||@
  Comment 1927 1052 NOP  <||@
  Comment 1928 1054 NOP  <||@
  Comment 1929 1056 r9|QWORD = MOVE input: long[3860|0xf14]  <||@
  Comment 1936 1058 r11|DWORD = MOVE input: int[-152083|0xfffffffffffdaded]  <||@
  Comment 1942 1062 JUMP ~outgoingValues: [] destination: B30 -> B33  <||@
  Comment 1942 block B33 null  <||@
  Comment 1942 1100 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1942 1024 rbx|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 1947 1102 NOP  <||@
  Comment 1948 1104 NOP  <||@
  Comment 1949 1106 NOP  <||@
  Comment 1950 1108 NOP  <||@
  Comment 1951 1110 NOP  <||@
  Comment 1952 1112 NOP  <||@
  Comment 1953 1114 NOP  <||@
  Comment 1954 1116 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 1961 1118 MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD  <||@
  Comment 1968 1120 DEOPT info [bci:10, 78, 17, 57, 38, 11]  <||@
  Comment 1968 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1973 [rcx:0, rbx:0, rsi:0, r8:0, stack:48, stack:56]at java.lang.System$2.encodeASCII(System.java:2506) [bci: 10, duringCall: false, rethrow: false]
              |0          |1  |2  |3  |4  |5 
     locals:  |-          |-  |-  |-  |-  |- 
     stack:   |rax|DWORD  |   |   |   |   |  
  at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:456) [bci: 78, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3             |4          |5          |6            |7          |8          |9 
     locals:  |stack:88|QWORD[.]  |rcx|QWORD[.]  |stack:96|QWORD[.]  |rbx|QWORD[.]  |r13|DWORD  |r14|DWORD  |r8|QWORD[.]  |rbp|DWORD  |r10|DWORD  |- 
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:88|QWORD[.]  |rcx|QWORD[.]  |stack:96|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 1981 block B53 null  <||@
  Comment 1981 1462 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1981 1464 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1986 1466 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1991 1468 NOP  <||@
  Comment 1992 1470 NOP  <||@
  Comment 1993 1472 NOP  <||@
  Comment 1994 1474 NOP  <||@
  Comment 1995 1476 NOP  <||@
  Comment 1996 1478 NOP  <||@
  Comment 1997 1480 NOP  <||@
  Comment 1998 1482 MOV x: [r15|QWORD + 1156] y: -159507 size: DWORD  <||@
  Comment 2009 1484 MOV x: [r15|QWORD + 1168] y: 8980 size: QWORD  <||@
  Comment 2020 1486 DEOPT info [bci:20, 57, 38, 11]  <||@
  Comment 2020 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2025 [rcx:0, rbx:0, rsi:0, stack:48, stack:56]at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |-             |-  |- 
     stack:   |rbx|QWORD[.]  |   |  
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:88|QWORD[.]  |rcx|QWORD[.]  |stack:96|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2033 block B40 null  <||@
  Comment 2033 1228 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2033 1230 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2038 1232 NOP  <||@
  Comment 2039 1234 NOP  <||@
  Comment 2040 1236 NOP  <||@
  Comment 2041 1238 r9|QWORD = MOVE input: long[4500|0x1194]  <||@
  Comment 2048 1240 r8|DWORD = MOVE input: int[-156179|0xfffffffffffd9ded]  <||@
  Comment 2054 1242 JUMP ~outgoingValues: [] destination: B40 -> B55  <||@
  Comment 2054 block B55 null  <||@
  Comment 2054 1504 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2054 1506 NOP  <||@
  Comment 2055 1508 NOP  <||@
  Comment 2056 1510 NOP  <||@
  Comment 2057 1512 NOP  <||@
  Comment 2058 1514 NOP  <||@
  Comment 2059 1516 NOP  <||@
  Comment 2060 1518 NOP  <||@
  Comment 2061 1520 MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD  <||@
  Comment 2068 1522 MOV (x: [r15|QWORD + 1168], y: r9|QWORD) size: QWORD  <||@
  Comment 2075 1524 DEOPT info [bci:50, 2, 2, 7, 130, 17, 57, 38, 11]  <||@
  Comment 2075 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2080 [rcx:0, rsi:0, stack:48, stack:56]at java.nio.Buffer.position(Buffer.java:330) [bci: 50, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rcx|QWORD[.]  |r11|DWORD 
  at java.nio.CharBuffer.position(CharBuffer.java:1551) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rcx|QWORD[.]  |- 
  at java.nio.CharBuffer.position(CharBuffer.java:285) [bci: 2, duringCall: true, rethrow: false]
              |0             |1         
     locals:  |rcx|QWORD[.]  |r11|DWORD 
  at sun.nio.cs.UTF_8.updatePositions(UTF_8.java:82) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2                  |3         
     locals:  |-  |-  |stack:96|QWORD[.]  |r10|DWORD 
  at sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:463) [bci: 130, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7  |8  |9 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-  |-  |- 
  at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 17, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:88|QWORD[.]  |rcx|QWORD[.]  |stack:96|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2088 block B38 null  <||@
  Comment 2088 1198 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2088 1200 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2093 1202 NOP  <||@
  Comment 2094 1204 NOP  <||@
  Comment 2095 1206 NOP  <||@
  Comment 2096 1208 r9|QWORD = MOVE input: long[3860|0xf14]  <||@
  Comment 2103 1210 r8|DWORD = MOVE input: int[-155155|0xfffffffffffda1ed]  <||@
  Comment 2109 1212 JUMP ~outgoingValues: [] destination: B38 -> B55  <||@
  Comment 2111 block B36 null  <||@
  Comment 2111 1170 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2111 1172 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2116 1174 NOP  <||@
  Comment 2117 1176 NOP  <||@
  Comment 2118 1178 NOP  <||@
  Comment 2119 1180 r9|QWORD = MOVE input: long[3220|0xc94]  <||@
  Comment 2126 1182 r8|DWORD = MOVE input: int[-154131|0xfffffffffffda5ed]  <||@
  Comment 2132 1184 JUMP ~outgoingValues: [] destination: B36 -> B55  <||@
  Comment 2134 block B54 null  <||@
  Comment 2134 1488 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2134 1490 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2139 1492 NOP  <||@
  Comment 2140 1494 NOP  <||@
  Comment 2141 1496 NOP  <||@
  Comment 2142 1498 r9|QWORD = MOVE input: long[17300|0x4394]  <||@
  Comment 2149 1500 r8|DWORD = MOVE input: int[-76083|0xfffffffffffed6cd]  <||@
  Comment 2155 1502 JUMP ~outgoingValues: [] destination: B54 -> B55  <||@
  Comment 2157 block B28 null  <||@
  Comment 2157 1004 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2157 1006 r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 2162 1008 r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2167 1010 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2172 1012 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2177 1014 NOP  <||@
  Comment 2178 1016 NOP  <||@
  Comment 2179 1018 NOP  <||@
  Comment 2180 1020 r9|QWORD = MOVE input: long[3220|0xc94]  <||@
  Comment 2187 1022 r11|DWORD = MOVE input: int[-151059|0xfffffffffffdb1ed]  <||@
  Comment 2193 1026 JUMP ~outgoingValues: [] destination: B28 -> B33  <||@
  Comment 2198 block B32 null  <||@
  Comment 2198 1078 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2198 1080 r10|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 2203 1082 r8|QWORD[.] = MOVE input: stack:112|QWORD[.] moveKind: QWORD  <||@
  Comment 2208 1084 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2213 1086 NOP  <||@
  Comment 2214 1088 NOP  <||@
  Comment 2215 1090 NOP  <||@
  Comment 2216 1092 r9|QWORD = MOVE input: long[4500|0x1194]  <||@
  Comment 2223 1094 r11|DWORD = MOVE input: int[-153107|0xfffffffffffda9ed]  <||@
  Comment 2229 1098 JUMP ~outgoingValues: [] destination: B32 -> B33  <||@
  Comment 2234 block B59 null  <||@
  Comment 2234 1584 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2234 1586 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2239 1588 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2244 1590 NOP  <||@
  Comment 2245 1592 NOP  <||@
  Comment 2246 1594 NOP  <||@
  Comment 2247 1596 r11|QWORD = MOVE input: long[8340|0x2094]  <||@
  Comment 2254 1598 r10|DWORD = MOVE input: int[-160531|0xfffffffffffd8ced]  <||@
  Comment 2260 1600 JUMP ~outgoingValues: [] destination: B59 -> B61  <||@
  Comment 2260 block B61 null  <||@
  Comment 2260 1616 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2260 1618 NOP  <||@
  Comment 2261 1620 NOP  <||@
  Comment 2262 1622 NOP  <||@
  Comment 2263 1624 NOP  <||@
  Comment 2264 1626 NOP  <||@
  Comment 2265 1628 NOP  <||@
  Comment 2266 1630 NOP  <||@
  Comment 2267 1632 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2274 1634 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2281 1636 DEOPT info [bci:21, 11]  <||@
  Comment 2281 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2286 [rcx:0, rsi:0]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2294 block B56 null  <||@
  Comment 2294 1526 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2294 1528 NOP  <||@
  Comment 2295 1530 NOP  <||@
  Comment 2296 1532 NOP  <||@
  Comment 2297 1534 r11|QWORD = MOVE input: long[11540|0x2d14]  <||@
  Comment 2304 1536 r10|DWORD = MOVE input: int[-150035|0xfffffffffffdb5ed]  <||@
  Comment 2310 1542 JUMP ~outgoingValues: [] destination: B56 -> B58  <||@
  Comment 2310 block B58 null  <||@
  Comment 2310 1562 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2310 1556 r14|QWORD[.] = MOVE input: stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 2315 1558 r8|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 2320 1564 NOP  <||@
  Comment 2321 1566 NOP  <||@
  Comment 2322 1568 NOP  <||@
  Comment 2323 1570 NOP  <||@
  Comment 2324 1572 NOP  <||@
  Comment 2325 1574 NOP  <||@
  Comment 2326 1576 NOP  <||@
  Comment 2327 1578 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2334 1580 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 2341 1582 DEOPT info [bci:54, 38, 11]  <||@
  Comment 2341 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2346 [rcx:0, rsi:0, r8:0, r14:0]at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 54, duringCall: false, rethrow: false]
              |0            |1             |2             |3           |4  |5  |6 
     locals:  |r8|QWORD[.]  |rcx|QWORD[.]  |r14|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2354 block B50 null  <||@
  Comment 2354 1396 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2354 1398 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2359 1400 NOP  <||@
  Comment 2360 1402 NOP  <||@
  Comment 2361 1404 NOP  <||@
  Comment 2362 1406 NOP  <||@
  Comment 2363 1408 NOP  <||@
  Comment 2364 1410 NOP  <||@
  Comment 2365 1412 NOP  <||@
  Comment 2366 1414 MOV x: [r15|QWORD + 1156] y: -158483 size: DWORD  <||@
  Comment 2377 1416 MOV x: [r15|QWORD + 1168] y: 7060 size: QWORD  <||@
  Comment 2388 1418 DEOPT info [bci:49, 11]  <||@
  Comment 2388 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2393 [rcx:0, rsi:0]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:372) [bci: 49, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2401 block B62 null  <||@
  Comment 2401 1638 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2401 1640 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2405 1642 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2410 1644 NOP  <||@
  Comment 2411 1646 NOP  <||@
  Comment 2412 1648 NOP  <||@
  Comment 2413 1650 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 2420 1652 r10|DWORD = MOVE input: int[-140819|0xfffffffffffdd9ed]  <||@
  Comment 2426 1658 JUMP ~outgoingValues: [] destination: B62 -> B63  <||@
  Comment 2431 block B60 null  <||@
  Comment 2431 1602 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2431 1604 NOP  <||@
  Comment 2432 1606 NOP  <||@
  Comment 2433 1608 NOP  <||@
  Comment 2434 1610 r11|QWORD = MOVE input: long[5780|0x1694]  <||@
  Comment 2441 1612 r10|DWORD = MOVE input: int[-145939|0xfffffffffffdc5ed]  <||@
  Comment 2447 1614 JUMP ~outgoingValues: [] destination: B60 -> B61  <||@
  Comment 2452 block B5 null  <||@
  Comment 2452 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2452 116 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2456 118 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2461 120 NOP  <||@
  Comment 2462 122 NOP  <||@
  Comment 2463 124 NOP  <||@
  Comment 2464 126 r11|QWORD = MOVE input: long[3220|0xc94]  <||@
  Comment 2471 128 r10|DWORD = MOVE input: int[-138771|0xfffffffffffde1ed]  <||@
  Comment 2477 134 JUMP ~outgoingValues: [] destination: B5 -> B63  <||@
  Comment 2482 block B7 null  <||@
  Comment 2482 148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2482 150 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2486 152 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2491 154 NOP  <||@
  Comment 2492 156 NOP  <||@
  Comment 2493 158 NOP  <||@
  Comment 2494 160 r11|QWORD = MOVE input: long[3860|0xf14]  <||@
  Comment 2501 162 r10|DWORD = MOVE input: int[-139795|0xfffffffffffddded]  <||@
  Comment 2507 168 JUMP ~outgoingValues: [] destination: B7 -> B63  <||@
  Comment 2512 block B52 null  <||@
  Comment 2512 1438 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2512 1440 rsi|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2517 1442 NOP  <||@
  Comment 2518 1444 NOP  <||@
  Comment 2519 1446 NOP  <||@
  Comment 2520 1448 NOP  <||@
  Comment 2521 1450 NOP  <||@
  Comment 2522 1452 NOP  <||@
  Comment 2523 1454 NOP  <||@
  Comment 2524 1456 MOV x: [r15|QWORD + 1156] y: -157203 size: DWORD  <||@
  Comment 2535 1458 MOV x: [r15|QWORD + 1168] y: 6420 size: QWORD  <||@
  Comment 2546 1460 DEOPT info [bci:41, 11]  <||@
  Comment 2546 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2551 [rcx:0, rbx:0, rsi:0]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 41, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
     stack:   |rbx|QWORD[.]  |              |  
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2559 block B57 null  <||@
  Comment 2559 1544 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2559 1546 NOP  <||@
  Comment 2560 1548 NOP  <||@
  Comment 2561 1550 NOP  <||@
  Comment 2562 1552 r11|QWORD = MOVE input: long[10900|0x2a94]  <||@
  Comment 2569 1554 r10|DWORD = MOVE input: int[-147987|0xfffffffffffdbded]  <||@
  Comment 2575 1560 JUMP ~outgoingValues: [] destination: B57 -> B58  <||@
  Comment 2580 block B3 null  <||@
  Comment 2580 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2580 82 stack:28|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 2584 84 stack:64|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2589 86 NOP  <||@
  Comment 2590 88 NOP  <||@
  Comment 2591 90 NOP  <||@
  Comment 2592 92 r11|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 2599 94 r10|DWORD = MOVE input: int[-137747|0xfffffffffffde5ed]  <||@
  Comment 2605 100 JUMP ~outgoingValues: [] destination: B3 -> B63  <||@
  Comment 2618 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2643 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2653 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2668 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2701 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2706 [rdx:0, rsi:0, stack:88]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-   <||@
  Comment 2736 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2741 [rdx:0, rsi:0, stack:88]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-   <||@
  Comment 2771 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2776 [rdx:0, rsi:0, stack:88]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:356) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-   <||@
  Comment 2806 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2811 [rcx:0, rbx:0, stack:48, stack:56, stack:64, stack:72, stack:88]at sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:564) [bci: 20, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |-             |-  |- 
     stack:   |rbx|QWORD[.]  |   |  
  at java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:586) [bci: 57, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3           |4  |5  |6 
     locals:  |stack:88|QWORD[.]  |rcx|QWORD[.]  |stack:96|QWORD[.]  |int[0|0x0]  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:370) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1             |2 
     locals:  |stack:56|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2841 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2846 [rcx:0, rsi:0, r10:0, stack:64, stack:72, stack:88]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2876 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2881 [rcx:0, rsi:0, rdi:0, r10:0, stack:64, stack:72, stack:88]at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:369) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rcx|QWORD[.]  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2911 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2916 [rax:0, rdx:0, stack:88]at sun.nio.cs.StreamEncoder.growByteBufferIfNeeded(StreamEncoder.java:401) [bci: 58, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:367) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                                                                                                                                                                                                                  |2 
     locals:  |stack:56|QWORD[.]  |vobject:HeapCharBuffer:0{mark=int[-1|0xffffffffffffffff],address=long[16|0x10],position=rbx|DWORD,limit=r9|DWORD,capacity=r10|DWORD,segment=Object[null],offset=int[0|0x0],isReadOnly=int[0|0x0],hb=rdx|QWORD[.]}  |- 
  at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:357) [bci: 11, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |-   <||@
  Comment 2924 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2924 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2930 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2930 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
