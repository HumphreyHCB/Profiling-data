begin_compilation
  name " HotSpotCompilation-7840[java.util.regex.Pattern$LastNode.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-7840[java.util.regex.Pattern$LastNode.match(Matcher, int, CharSequence)]"
  date 1724269754080
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a115 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a115  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v127 v123 v120 v121 v122 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v13 v71 v39 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<Pattern$LastNode.match(Matcher, int, CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3757
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - a2 i3 
=== Succesors ===
=== Usages ===
v108 a115 i118 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a115 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a115 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: int[-8203|0xffffffffffffdff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.groups
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3760) [bci: 24]
stamp: n# int[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v122 
lastLocationAccess: - 
=== Succesors ===
next: i116 
=== Usages ===
v126 v124 v125 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v122 lastLocationAccess: - #next: i116  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i116 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.acceptMode
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v120 
lastLocationAccess: - 
=== Succesors ===
next: i117 
=== Usages ===
v8 
=== Predecessor ===
a115 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v120 lastLocationAccess: - #next: i117  <|@  <|@
f <@~|@floating>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3760) [bci: 29]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v123 
lastLocationAccess: - 
=== Succesors ===
next: i118 
=== Usages ===
v62 
=== Predecessor ===
i116 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v123 lastLocationAccess: - #next: i118  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a115 
=== Succesors ===
=== Usages ===
i118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i118 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-12299|0xffffffffffffcff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3760) [bci: 32]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v124 
lastLocationAccess: - 
=== Succesors ===
next: v97 
=== Usages ===
v85 
=== Predecessor ===
i117 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v124 lastLocationAccess: - #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3760) [bci: 32]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3761) [bci: 42]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i118 
y: i57 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i118 y: i57  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3760) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v85 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v94 
=== Usages ===
=== Predecessor ===
i118 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v85 #trueSuccessor: v96 #falseSuccessor: v94  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3760) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v111 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid j105 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 1]
rawvalue: -18971
stableDimension: 0
stamp: i32 [-18971]
stampKind: i32
value: int[-18971|0xffffffffffffb5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3760) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v11 
=== Usages ===
v62 v71 
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 v30 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i116 
y: i7 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i116 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 5]
profileData: PROFILED designatedSuccessorProbability: 1.742056451792262E-5
stamp: void
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v10 
falseSuccessor: v9 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v10 #falseSuccessor: v9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i119 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i119  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.to
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v127 
lastLocationAccess: - 
=== Succesors ===
next: v101 
=== Usages ===
v13 
=== Predecessor ===
v10 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v127 lastLocationAccess: - #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i119 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i3 y: i119  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 13]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
i119 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v99 #falseSuccessor: v100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3759) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v17  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3759) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
v99 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid j79 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3761) [bci: 42]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 1]
rawvalue: -25107
stableDimension: 0
stamp: i32 [-25107]
stampKind: i32
value: int[-25107|0xffffffffffff9ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
v100 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 1]
stamp: i32 [-25107 - -18971] bits:1...10x1x1011110x101
valueDescription: i32
=== Inputs ===
merge: v102 
values: i112 i114 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v102 values: i112 i114  <|@  <|@
f <@~|@floating>@ <|@
tid j107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 1]
stamp: i64 [0 - 20] bits:0...0x0x00
valueDescription: i64
=== Inputs ===
merge: v102 
values: j105 j79 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v102 values: j105 j79  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v111 v113 
=== Succesors ===
next: v108 
=== Usages ===
i106 j107 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v111 v113 #next: v108  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i106 
speculation: j107 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i106 speculation: j107  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3759) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v15  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3759) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
v9 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3759) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v15 v17 
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v15 v17 #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.last
location: Matcher.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3759) [bci: 20]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v121 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v121 lastLocationAccess: - value: i3 stateAfter: - #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a115 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3760) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v94 
address: v125 
lastLocationAccess: - 
value: i117 
stateAfter: - 
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v94 address: v125 lastLocationAccess: - value: i117 stateAfter: - #next: v71  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a115 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3761) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v94 
address: v126 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v94 address: v126 lastLocationAccess: - value: i3 stateAfter: - #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3762) [bci: 44]
stamp: void
=== Inputs ===
memoryMap: - 
result: i7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i7  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18971|0xffffffffffffb5e5], long[0|0x0]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25107|0xffffffffffff9ded], long[20|0x14]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a115 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a115  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v127 v123 v120 v121 v122 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v13 v71 v39 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<Pattern$LastNode.match(Matcher, int, CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Pattern.java
sourceLine: 3757
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - a2 i3 
=== Succesors ===
=== Usages ===
v108 a115 i118 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
result [v0|QWORD[.] + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a115 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a115 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: int[-8203|0xffffffffffffdff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.groups
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3760) [bci: 24]
stamp: n# int[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v122 
lastLocationAccess: - 
=== Succesors ===
next: i116 
=== Usages ===
v126 v124 v125 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v122 lastLocationAccess: - #next: i116  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i116 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.acceptMode
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v120 
lastLocationAccess: - 
=== Succesors ===
next: i117 
=== Usages ===
v8 
=== Predecessor ===
a115 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v120 lastLocationAccess: - #next: i117  <|@  <|@
f <@~|@floating>@ <|@
tid v123 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i117 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3760) [bci: 29]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v123 
lastLocationAccess: - 
=== Succesors ===
next: i118 
=== Usages ===
v62 
=== Predecessor ===
i116 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v123 lastLocationAccess: - #next: i118  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a115 
=== Succesors ===
=== Usages ===
i118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i118 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-12299|0xffffffffffffcff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3760) [bci: 32]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v124 
lastLocationAccess: - 
=== Succesors ===
next: v97 
=== Usages ===
v85 
=== Predecessor ===
i117 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v124 lastLocationAccess: - #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid i57 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3760) [bci: 32]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v85 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3761) [bci: 42]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i118 
y: i57 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i118 y: i57  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3760) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v85 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v94 
=== Usages ===
=== Predecessor ===
i118 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v85 #trueSuccessor: v96 #falseSuccessor: v94  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3760) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v111 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v111  <|@  <|@
f <@~|@floating>@ <|@
tid j105 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
result int[-18971|0xffffffffffffb5e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 1]
rawvalue: -18971
stableDimension: 0
stamp: i32 [-18971]
stampKind: i32
value: int[-18971|0xffffffffffffb5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18971|0xffffffffffffb5e5], long[0|0x0]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3760) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v11 
=== Usages ===
v62 v71 
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v8 v30 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i116 
y: i7 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i116 y: i7  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 5]
profileData: PROFILED designatedSuccessorProbability: 1.742056451792262E-5
stamp: void
=== Inputs ===
condition: v8 
=== Succesors ===
trueSuccessor: v10 
falseSuccessor: v9 
=== Usages ===
=== Predecessor ===
v94 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v8 #trueSuccessor: v10 #falseSuccessor: v9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: i119 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i119  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.to
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v127 
lastLocationAccess: - 
=== Succesors ===
next: v101 
=== Usages ===
v13 
=== Predecessor ===
v10 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v127 lastLocationAccess: - #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i119 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i3 y: i119  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 13]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v13 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
i119 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v13 #trueSuccessor: v99 #falseSuccessor: v100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3759) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v17  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3759) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
v99 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid j79 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3761) [bci: 42]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j107 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
result int[-25107|0xffffffffffff9ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 1]
rawvalue: -25107
stableDimension: 0
stamp: i32 [-25107]
stampKind: i32
value: int[-25107|0xffffffffffff9ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
v100 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25107|0xffffffffffff9ded], long[20|0x14]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i106 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 1]
stamp: i32 [-25107 - -18971] bits:1...10x1x1011110x101
valueDescription: i32
=== Inputs ===
merge: v102 
values: i112 i114 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v102 values: i112 i114  <|@  <|@
f <@~|@floating>@ <|@
tid j107 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 1]
stamp: i64 [0 - 20] bits:0...0x0x00
valueDescription: i64
=== Inputs ===
merge: v102 
values: j105 j79 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v102 values: j105 j79  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v111 v113 
=== Succesors ===
next: v108 
=== Usages ===
i106 j107 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v111 v113 #next: v108  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i106 
speculation: j107 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i106 speculation: j107  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3759) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v15  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3759) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
v9 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3759) [bci: 18]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v15 v17 
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v15 v17 #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid v121 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.last
location: Matcher.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3759) [bci: 20]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v121 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v62 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v121 lastLocationAccess: - value: i3 stateAfter: - #next: v62  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
result [v2|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a115 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3760) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v94 
address: v125 
lastLocationAccess: - 
value: i117 
stateAfter: - 
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v94 address: v125 lastLocationAccess: - value: i117 stateAfter: - #next: v71  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
result [v2|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a115 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3761) [bci: 42]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v94 
address: v126 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v94 address: v126 lastLocationAccess: - value: i3 stateAfter: - #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3762) [bci: 44]
stamp: void
=== Inputs ===
memoryMap: - 
result: i7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18971|0xffffffffffffb5e5], long[0|0x0]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25107|0xffffffffffff9ded], long[20|0x14]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18971|0xffffffffffffb5e5], long[0|0x0]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25107|0xffffffffffff9ded], long[20|0x14]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18971|0xffffffffffffb5e5], long[0|0x0]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25107|0xffffffffffff9ded], long[20|0x14]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18971|0xffffffffffffb5e5], long[0|0x0]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25107|0xffffffffffff9ded], long[20|0x14]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-18971|0xffffffffffffb5e5], long[0|0x0]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-25107|0xffffffffffff9ded], long[20|0x14]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v1|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [int[-18971|0xffffffffffffb5e5], long[0|0x0]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [int[-25107|0xffffffffffff9ded], long[20|0x14]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  138  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v1|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [int[-18971|0xffffffffffffb5e5], long[0|0x0]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [int[-25107|0xffffffffffff9ded], long[20|0x14]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  138  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[92, 94[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 30[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 28[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  r8|q fixed "[r8|q]" r8|q -1 [0, 1[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rdx|q [28, 86[[96, 159[28 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 86 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rcx|d [30, 90[[96, 159[30 MustHaveRegister 86 MustHaveRegister 90 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [32, 90[[96, 118[32 MustHaveRegister 38 MustHaveRegister 88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [34, 50[34 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [36, 88[[96, 118[36 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [138, 154[154 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [138, 156[156 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[92, 94[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 30[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 28[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  r8|q fixed "[r8|q]" r8|q -1 [0, 1[ "NoSpillStore"
  v0|q QWORD "[rdx|q]" v0|q rdx|q [28, 86[[96, 159[28 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 86 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rcx|d]" v1|d rcx|d [30, 90[[96, 159[30 MustHaveRegister 86 MustHaveRegister 90 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [32, 90[[96, 118[32 MustHaveRegister 38 MustHaveRegister 88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [34, 50[34 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [36, 88[[96, 118[36 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d -1 [138, 154[154 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r11|q]" v6|q -1 [138, 156[156 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v1|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [int[-18971|0xffffffffffffb5e5], long[0|0x0]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [int[-25107|0xffffffffffff9ded], long[20|0x14]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  138  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[92, 94[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 30[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 28[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  r8|q fixed "[r8|q]" r8|q -1 [0, 1[ "NoSpillStore"
  v0|q QWORD "[rdx|q]" v0|q rdx|q [28, 86[[96, 159[28 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 86 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rcx|d]" v1|d rcx|d [30, 90[[96, 159[30 MustHaveRegister 86 MustHaveRegister 90 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [32, 90[[96, 118[32 MustHaveRegister 38 MustHaveRegister 88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [34, 50[34 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [36, 88[[96, 118[36 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d -1 [138, 154[154 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r11|q]" v6|q -1 [138, 156[156 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v1|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [int[-18971|0xffffffffffffb5e5], long[0|0x0]] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [int[-25107|0xffffffffffff9ded], long[20|0x14]] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  138  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[92, 94[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 30[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 28[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  r8|q fixed "[r8|q]" r8|q -1 [0, 1[ "NoSpillStore"
  v0|q QWORD "[rdx|q]" v0|q rdx|q [28, 86[[96, 159[28 MustHaveRegister 32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 86 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rcx|d]" v1|d rcx|d [30, 90[[96, 159[30 MustHaveRegister 86 MustHaveRegister 90 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [32, 90[[96, 118[32 MustHaveRegister 38 MustHaveRegister 88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [34, 50[34 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [36, 88[[96, 118[36 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d -1 [138, 154[154 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r11|q]" v6|q -1 [138, 156[156 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v1|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: int[-18971|0xffffffffffffb5e5] // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: int[-25107|0xffffffffffff9ded] // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  138  <|@ instruction [v5|DWORD, v6|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV (x: [v0|QWORD[.] + 32], y: v1|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 16], y: v4|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v1|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v0|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: int[-18971|0xffffffffffffb5e5] // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: int[-25107|0xffffffffffff9ded] // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v5|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v6|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18971|0xffffffffffffb5e5] // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25107|0xffffffffffff9ded] // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18971|0xffffffffffffb5e5] // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25107|0xffffffffffff9ded] // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18971|0xffffffffffffb5e5] // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25107|0xffffffffffff9ded] // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18971|0xffffffffffffb5e5] // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25107|0xffffffffffff9ded] // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18971|0xffffffffffffb5e5] // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25107|0xffffffffffff9ded] // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18971|0xffffffffffffb5e5] // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25107|0xffffffffffff9ded] // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18971|0xffffffffffffb5e5] // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25107|0xffffffffffff9ded] // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18971|0xffffffffffffb5e5] // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25107|0xffffffffffff9ded] // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18971|0xffffffffffffb5e5] // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25107|0xffffffffffff9ded] // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18971|0xffffffffffffb5e5] // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25107|0xffffffffffff9ded] // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18971|0xffffffffffffb5e5] // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ st <@st|@live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25107|0xffffffffffff9ded] // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rdx:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18971|0xffffffffffffb5e5] // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25107|0xffffffffffff9ded] // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD <|@ <|@
      nr   32  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   36  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rdx:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607182261889521665
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   88  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [r10|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   92  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   94  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 4535762868259225600
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-18971|0xffffffffffffb5e5] // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ st <@st|@reference-map: [rdx:0]
live-base-pointers: []
java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0]
locals: - rdx|QWORD[.] rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-25107|0xffffffffffff9ded] // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #1          // java.util.regex.Matcher.acceptMode:int
     4: iconst_1      
     5: if_icmpne     18
     8: iload_2       
     9: aload_1       
    10: getfield      #2          // java.util.regex.Matcher.to:int
    13: if_icmpeq     18
    16: iconst_0      
    17: ireturn       
    18: aload_1       
    19: iload_2       
    20: putfield      #3          // java.util.regex.Matcher.last:int
    23: aload_1       
    24: getfield      #4          // java.util.regex.Matcher.groups:int[]
    27: iconst_0      
    28: aload_1       
    29: getfield      #5          // java.util.regex.Matcher.first:int
    32: iastore       
    33: aload_1       
    34: getfield      #4          // java.util.regex.Matcher.groups:int[]
    37: iconst_1      
    38: aload_1       
    39: getfield      #3          // java.util.regex.Matcher.last:int
    42: iastore       
    43: iconst_1      
    44: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f85ca000000909090909090909090909048896c2410448b52388b4218448b5a1c42833cd50c000000020f825c0000009090909083f8010f843d0000009090909090909090909090909090894a2046891cd51000000042890cd514000000b801000000488b6c24104883c418493ba7500400000f8767000000c3909090903b4a100f8537000000909090ebb490909049c7c30000000041bae5b5ffff90909090909090458997840400004d899f90040000e8000000000f1f84000000000090909049c7c31400000041baed9dffffebcc48896c2410e800000000e927fffffff4488d0d85ffffff49898f68040000e9d9fefffff441c78784040000f5dfffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5cfffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 74 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD  <||@
  Comment 74 32 r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD state [bci:0]  <||@
  Comment 74 [rdx:0]at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 74 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 78 34 rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 81 36 r11|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 85 38 CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0]  <||@
  Comment 85 [rdx:0, r10:0]at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 85 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 100 block B2 null  <||@
  Comment 100 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 100 42 NOP  <||@
  Comment 101 44 NOP  <||@
  Comment 102 46 NOP  <||@
  Comment 103 48 NOP  <||@
  Comment 104 50 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null  <||@
  Comment 113 block B7 null  <||@
  Comment 113 52 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 113 54 NOP  <||@
  Comment 114 56 NOP  <||@
  Comment 115 58 NOP  <||@
  Comment 116 60 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 116 block B8 null  <||@
  Comment 116 62 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 116 64 NOP  <||@
  Comment 117 66 NOP  <||@
  Comment 118 68 NOP  <||@
  Comment 119 70 NOP  <||@
  Comment 120 72 NOP  <||@
  Comment 121 74 NOP  <||@
  Comment 122 76 NOP  <||@
  Comment 123 78 NOP  <||@
  Comment 124 80 NOP  <||@
  Comment 125 82 NOP  <||@
  Comment 126 84 NOP  <||@
  Comment 127 86 MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD  <||@
  Comment 130 88 MOV (x: [r10|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 138 90 MOV (x: [r10|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD  <||@
  Comment 146 92 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 151 94 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 160 POLL_RETURN_FAR  <||@
  Comment 174 block B3 null  <||@
  Comment 174 96 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 174 98 NOP  <||@
  Comment 175 100 NOP  <||@
  Comment 176 102 NOP  <||@
  Comment 177 104 NOP  <||@
  Comment 178 106 CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 187 block B4 null  <||@
  Comment 187 108 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 187 110 NOP  <||@
  Comment 188 112 NOP  <||@
  Comment 189 114 NOP  <||@
  Comment 190 116 JUMP ~outgoingValues: [] destination: B4 -> B8  <||@
  Comment 192 block B1 null  <||@
  Comment 192 118 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 192 120 NOP  <||@
  Comment 193 122 NOP  <||@
  Comment 194 124 NOP  <||@
  Comment 195 -1 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 202 -1 r10|DWORD = MOVE input: int[-18971|0xffffffffffffb5e5]  <||@
  Comment 208 126 JUMP ~outgoingValues: [] destination: B1 -> B6  <||@
  Comment 208 block B6 null  <||@
  Comment 208 138 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 208 140 NOP  <||@
  Comment 209 142 NOP  <||@
  Comment 210 144 NOP  <||@
  Comment 211 146 NOP  <||@
  Comment 212 148 NOP  <||@
  Comment 213 150 NOP  <||@
  Comment 214 152 NOP  <||@
  Comment 215 154 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 222 156 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 229 158 DEOPT info [bci:0]  <||@
  Comment 229 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 234 [rdx:0]at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 242 block B5 null  <||@
  Comment 242 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 242 130 NOP  <||@
  Comment 243 132 NOP  <||@
  Comment 244 134 NOP  <||@
  Comment 245 -1 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 252 -1 r10|DWORD = MOVE input: int[-25107|0xffffffffffff9ded]  <||@
  Comment 258 136 JUMP ~outgoingValues: [] destination: B5 -> B6  <||@
  Comment 265 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 290 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 318 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 323 [rdx:0]at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 353 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 358 [rdx:0, r10:0]at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 366 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 366 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 372 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 372 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-7840[java.util.regex.Pattern$LastNode.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-7840[java.util.regex.Pattern$LastNode.match(Matcher, int, CharSequence)]"
  date 1724269754200
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789aef7800 448b560849bc0000002b787f00004d03d44d33e4493bc20f8563d888fe66669089842400c0feff4883ec189041817f20000000000f85ca000000909090909090909090909048896c2410448b52388b4218448b5a1c42833cd50c000000020f825c0000009090909083f8010f843d0000009090909090909090909090909090894a2046891cd51000000042890cd514000000b801000000488b6c24104883c418493ba7500400000f8767000000c3909090903b4a100f8537000000909090ebb490909049c7c30000000041bae5b5ffff90909090909090458997840400004d899f90040000e8903889fe0f1f84000000000090909049c7c31400000041baed9dffffebcc48896c2410e8123987fee927fffffff4488d0d85ffffff49898f68040000e9d94689fef441c78784040000f5dfffff49c7879004000000000000e8373889fe0f1f84000000000041c78784040000f5cfffff49c7879004000000000000e8143889fe0f1f840000000000e88dd99cfef4e8a73589fef4f4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 74 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@8fed702 slotKind: QWORD  <||@
  Comment 74 32 r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 56] size: DWORD state [bci:0]  <||@
  Comment 74 [rdx:0]at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 74 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 78 34 rax|DWORD = MOV input: [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 81 36 r11|DWORD = MOV input: [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 85 38 CMPCONSTBRANCH x: [r10|DWORD[_] * 8 + 12] trueDestinationProbability: 0.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2 size: DWORD inlinedY: null state [bci:0]  <||@
  Comment 85 [rdx:0, r10:0]at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 85 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 100 block B2 null  <||@
  Comment 100 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 100 42 NOP  <||@
  Comment 101 44 NOP  <||@
  Comment 102 46 NOP  <||@
  Comment 103 48 NOP  <||@
  Comment 104 50 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.742056451792262E-5 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 1 size: DWORD inlinedY: null  <||@
  Comment 113 block B7 null  <||@
  Comment 113 52 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 113 54 NOP  <||@
  Comment 114 56 NOP  <||@
  Comment 115 58 NOP  <||@
  Comment 116 60 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 116 block B8 null  <||@
  Comment 116 62 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 116 64 NOP  <||@
  Comment 117 66 NOP  <||@
  Comment 118 68 NOP  <||@
  Comment 119 70 NOP  <||@
  Comment 120 72 NOP  <||@
  Comment 121 74 NOP  <||@
  Comment 122 76 NOP  <||@
  Comment 123 78 NOP  <||@
  Comment 124 80 NOP  <||@
  Comment 125 82 NOP  <||@
  Comment 126 84 NOP  <||@
  Comment 127 86 MOV (x: [rdx|QWORD[.] + 32], y: rcx|DWORD) size: DWORD  <||@
  Comment 130 88 MOV (x: [r10|DWORD[_] * 8 + 16], y: r11|DWORD) size: DWORD  <||@
  Comment 138 90 MOV (x: [r10|DWORD[_] * 8 + 20], y: rcx|DWORD) size: DWORD  <||@
  Comment 146 92 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 151 94 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 160 POLL_RETURN_FAR  <||@
  Comment 174 block B3 null  <||@
  Comment 174 96 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 174 98 NOP  <||@
  Comment 175 100 NOP  <||@
  Comment 176 102 NOP  <||@
  Comment 177 104 NOP  <||@
  Comment 178 106 CMPBRANCH (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 187 block B4 null  <||@
  Comment 187 108 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 187 110 NOP  <||@
  Comment 188 112 NOP  <||@
  Comment 189 114 NOP  <||@
  Comment 190 116 JUMP ~outgoingValues: [] destination: B4 -> B8  <||@
  Comment 192 block B1 null  <||@
  Comment 192 118 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 192 120 NOP  <||@
  Comment 193 122 NOP  <||@
  Comment 194 124 NOP  <||@
  Comment 195 -1 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 202 -1 r10|DWORD = MOVE input: int[-18971|0xffffffffffffb5e5]  <||@
  Comment 208 126 JUMP ~outgoingValues: [] destination: B1 -> B6  <||@
  Comment 208 block B6 null  <||@
  Comment 208 138 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 208 140 NOP  <||@
  Comment 209 142 NOP  <||@
  Comment 210 144 NOP  <||@
  Comment 211 146 NOP  <||@
  Comment 212 148 NOP  <||@
  Comment 213 150 NOP  <||@
  Comment 214 152 NOP  <||@
  Comment 215 154 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 222 156 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 229 158 DEOPT info [bci:0]  <||@
  Comment 229 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 234 [rdx:0]at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 242 block B5 null  <||@
  Comment 242 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 242 130 NOP  <||@
  Comment 243 132 NOP  <||@
  Comment 244 134 NOP  <||@
  Comment 245 -1 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 252 -1 r10|DWORD = MOVE input: int[-25107|0xffffffffffff9ded]  <||@
  Comment 258 136 JUMP ~outgoingValues: [] destination: B5 -> B6  <||@
  Comment 265 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 290 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 318 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 323 [rdx:0]at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 353 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 358 [rdx:0, r10:0]at java.util.regex.Pattern$LastNode.match(Pattern.java:3757) [bci: 0, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |rcx|DWORD  |-   <||@
  Comment 366 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 366 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 372 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 372 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
