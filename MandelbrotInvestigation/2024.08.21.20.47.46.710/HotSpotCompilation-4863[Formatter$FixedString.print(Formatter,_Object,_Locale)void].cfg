begin_compilation
  name " HotSpotCompilation-4863[java.util.Formatter$FixedString.print(Formatter, Object, Locale)]"
  method "HotSpotCompilation-4863[java.util.Formatter$FixedString.print(Formatter, Object, Locale)]"
  date 1724269746752
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a619 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a619  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.Formatter$FixedString
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v637 v638 v639 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.util.Formatter
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v636 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Formatter, Object, Locale)>
localsSize: 4
locksSize: 0
sourceFile: Formatter.java
sourceLine: 2876
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v409 v633 v635 a479 a560 a619 v620 i625 a626 i628 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a619 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a619 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: int[-41739|0xffffffffffff5cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter.a
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: n java.lang.Object
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v636 
lastLocationAccess: - 
=== Succesors ===
next: v620 
=== Usages ===
a168 v643 v644 v645 v648 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v636 lastLocationAccess: - #next: v620  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a619 
=== Succesors ===
=== Usages ===
v620 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-45579|0xffffffffffff4df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v648 
lastLocationAccess: - 
=== Succesors ===
next: i621 
=== Usages ===
v461 
=== Predecessor ===
a619 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v648 lastLocationAccess: - #next: i621  <|@  <|@
f <@~|@floating>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i621 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i621 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter$FixedString.end
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 13]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v639 
lastLocationAccess: - 
=== Succesors ===
next: i622 
=== Usages ===
v54 ?122 v281 ?35 i39 v52 
=== Predecessor ===
v620 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v639 lastLocationAccess: - #next: i622  <|@  <|@
f <@~|@floating>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i622 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i622 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter$FixedString.start
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v638 
lastLocationAccess: - 
=== Succesors ===
next: a623 
=== Usages ===
j607 ?122 v281 ?35 i39 v255 v52 v263 
=== Predecessor ===
i621 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v638 lastLocationAccess: - #next: a623  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a623 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a623 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.String
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter$FixedString.s
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 5]
stamp: n# java.lang.String
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v637 
lastLocationAccess: - 
=== Succesors ===
next: v32 
=== Usages ===
a172 v640 v642 
=== Predecessor ===
i622 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v637 lastLocationAccess: - #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid a172 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 5]
op: Uncompress
stamp: a# java.lang.String
=== Inputs ===
value: a623 
=== Succesors ===
=== Usages ===
?35 ?122 v281 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a623  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v620 
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v620  <|@  <|@
f <@~|@floating>@ <|@
tid a168 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a619 
=== Succesors ===
=== Usages ===
?122 v457 v281 ?152 ?35 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a619  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}]
keySuccessors: [I@77822990
keys: [HotSpotType<Ljava/lang/StringBuilder;, resolved>, HotSpotType<Ljava/io/PrintStream;, resolved>]
profileData: PROFILED keyProbabilities: [0.9886797042627666, 0.01132029573723338, 0.0]
stamp: void
=== Inputs ===
value: v461 
=== Succesors ===
successors: v19 v24 v27 
=== Usages ===
=== Predecessor ===
a623 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v461 #successors: v19 v24 v27  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a624 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a624  <|@  <|@
f <@~|@floating>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a619 
=== Succesors ===
=== Usages ===
a624 v245 v455 v457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a624 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v644 
lastLocationAccess: - 
=== Succesors ===
next: i625 
=== Usages ===
a194 v646 
=== Predecessor ===
v19 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v644 lastLocationAccess: - #next: i625  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a624 
=== Succesors ===
=== Usages ===
i625 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i625 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-50187|0xffffffffffff3bf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v646 
lastLocationAccess: - 
=== Succesors ===
next: a626 
=== Usages ===
v294 v508 j526 i59 i79 i82 i88 v97 v114 i115 a479 
=== Predecessor ===
a624 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v646 lastLocationAccess: - #next: a626  <|@  <|@
f <@~|@floating>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a623 
=== Succesors ===
=== Usages ===
a626 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a626 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-86547|0xfffffffffffeaded]
deoptSpeculation: long[1300|0x514]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v640 
lastLocationAccess: - 
=== Succesors ===
next: i627 
=== Usages ===
a251 v641 
=== Predecessor ===
i625 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v640 lastLocationAccess: - #next: i627  <|@  <|@
f <@~|@floating>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a623 
=== Succesors ===
=== Usages ===
i627 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i627 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v642 
lastLocationAccess: - 
=== Succesors ===
next: i628 
=== Usages ===
i189 v292 
=== Predecessor ===
a626 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v642 lastLocationAccess: - #next: i628  <|@  <|@
f <@~|@floating>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a626 
=== Succesors ===
=== Usages ===
i628 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i628 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-46859|0xffffffffffff48f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v641 
lastLocationAccess: - 
=== Succesors ===
next: v345 
=== Usages ===
i47 i262 
=== Predecessor ===
i627 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v641 lastLocationAccess: - #next: v345  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 v223 v255 v257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:395) [bci: 2]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i622 
y: i49 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i622 y: i49  <|@  <|@
f <@~|@floating>@ <|@
tid j423 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
rawvalue: 2580
stableDimension: 0
stamp: i64 [2580]
stampKind: i64
value: long[2580|0xa14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j408 j408 j408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v255 
=== Succesors ===
trueSuccessor: v343 
falseSuccessor: v344 
=== Usages ===
=== Predecessor ===
i628 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v255 #trueSuccessor: v343 #falseSuccessor: v344  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid i422 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
rawvalue: -87571
stableDimension: 0
stamp: i32 [-87571]
stampKind: i32
value: int[-87571|0xfffffffffffea9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v343 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i621 
y: i622 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i621 y: i622  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v52 
=== Succesors ===
trueSuccessor: v347 
falseSuccessor: v348 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v52 #trueSuccessor: v347 #falseSuccessor: v348  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid i425 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
rawvalue: -88595
stableDimension: 0
stamp: i32 [-88595]
stampKind: i32
value: int[-88595|0xfffffffffffea5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v347 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v353  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i627 
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i627  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i628 
y: i189 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i628 y: i189  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i47 
y: i621 
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i47 y: i621  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v351 
falseSuccessor: v352 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v351 #falseSuccessor: v352  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v426  <|@  <|@
f <@~|@floating>@ <|@
tid i427 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
rawvalue: -89619
stableDimension: 0
stamp: i32 [-89619]
stampKind: i32
value: int[-89619|0xfffffffffffea1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v351 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:350) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i629 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i629  <|@  <|@
f <@~|@floating>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a619 
=== Succesors ===
=== Usages ===
i629 v280 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i629 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 29]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v643 
lastLocationAccess: - 
=== Succesors ===
next: i630 
=== Usages ===
v257 j612 i141 v266 
=== Predecessor ===
v352 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v643 lastLocationAccess: - #next: i630  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a619 
=== Succesors ===
=== Usages ===
i630 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i630 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v645 
lastLocationAccess: - 
=== Succesors ===
next: v65 
=== Usages ===
i202 v291 
=== Predecessor ===
i629 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v645 lastLocationAccess: - #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:685) [bci: 24]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i621 
y: i622 
=== Succesors ===
=== Usages ===
v259 j616 i141 i262 i265 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i621 y: i622  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1802) [bci: 202]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i39 
y: i629 
=== Succesors ===
=== Usages ===
v280 i60 i78 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i39 y: i629  <|@  <|@
f <@~|@floating>@ <|@
tid i202 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i630 
=== Succesors ===
=== Usages ===
i59 i78 i81 i87 i67 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i630  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i625 
y: i202 
=== Succesors ===
=== Usages ===
i60 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i625 y: i202  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i141 
y: i59 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i141 y: i59  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i60 
y: i61 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i60 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid a194 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a624 
=== Succesors ===
=== Usages ===
j600 a319 j520 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a624  <|@  <|@
f <@~|@floating>@ <|@
tid j406 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j441 v588 j408 j408 j408 j441 j441 j441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: PROFILED designatedSuccessorProbability: 0.9102668972297561
stamp: void
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
i630 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v64 #falseSuccessor: v63  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
v64 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:261) [bci: 11]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i141 
y: i202 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i141 y: i202  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:262) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i78 
y: i625 
=== Succesors ===
=== Usages ===
v94 i95 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i78 y: i625  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 27]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i80 
y: i202 
=== Succesors ===
=== Usages ===
i82 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i80 y: i202  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i81 
y: i625 
=== Succesors ===
=== Usages ===
v94 i95 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i81 y: i625  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i79 
y: i82 
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i79 y: i82  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
condition: v94 
trueValue: i82 
falseValue: i79 
=== Succesors ===
=== Usages ===
i88 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v94 trueValue: i82 falseValue: i79  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 6]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i95 
y: i625 
=== Succesors ===
=== Usages ===
i399 i87 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i95 y: i625  <|@  <|@
f <@~|@floating>@ <|@
tid i398 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i88 
y: i398 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i88 y: i398  <|@  <|@
f <@~|@floating>@ <|@
tid i400 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639]
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i399 
y: i400 
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i399 y: i400  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v401 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v384 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v401 #trueSuccessor: v383 #falseSuccessor: v384  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:742) [bci: 19]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:267) [bci: 57]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i88 
y: i202 
=== Succesors ===
=== Usages ===
i67 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: i88 y: i202  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i87 
y: i202 
=== Succesors ===
=== Usages ===
v97 v587 v114 i115 v295 j531 a560 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i87 y: i202  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3538) [bci: 3]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i67 
y: i625 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i67 y: i625  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v507 v586 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j474 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v504 v583 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a479 a560 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j488 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j489 j567 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j467 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j468 j532 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3538) [bci: 3]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: PROFILED designatedSuccessorProbability: 3.433727982038448E-5
stamp: void
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v99 #falseSuccessor: v98  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j463 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j463 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j501 
=== Usages ===
v649 v650 
=== Predecessor ===
v518 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j501  <|@  <|@
f <@~|@floating>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j463 
index: - 
=== Succesors ===
=== Usages ===
j501 v503 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j463 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j501 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v649 
lastLocationAccess: - 
=== Succesors ===
next: j502 
=== Usages ===
j469 v651 v652 a478 v656 v653 v654 v655 
=== Predecessor ===
j463 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v649 lastLocationAccess: - #next: j502  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j463 
index: - 
=== Succesors ===
=== Usages ===
j502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j463 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j502 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v650 
lastLocationAccess: - 
=== Succesors ===
next: v473 
=== Usages ===
v470 
=== Predecessor ===
j501 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v650 lastLocationAccess: - #next: v473  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i625 
=== Succesors ===
=== Usages ===
v527 j489 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i625  <|@  <|@
f <@~|@floating>@ <|@
tid j489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64 [23 - 2147483670] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j526 
y: j488 
=== Succesors ===
=== Usages ===
j468 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j526 y: j488  <|@  <|@
f <@~|@floating>@ <|@
tid j468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64 [0 - 2147483664] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j489 
y: j467 
=== Succesors ===
=== Usages ===
j469 v653 v654 v655 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j489 y: j467  <|@  <|@
f <@~|@floating>@ <|@
tid j469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
=== Inputs ===
x: j468 
y: j501 
=== Succesors ===
=== Usages ===
v470 v503 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j468 y: j501  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j502 
y: j469 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j502 y: j469  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v470 
=== Succesors ===
trueSuccessor: v472 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
j502 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v470 #trueSuccessor: v472 #falseSuccessor: v471  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a479 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a479 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?5 
arguments: v462 i625 
=== Succesors ===
next: v633 
=== Usages ===
v633 a499 
=== Predecessor ===
v472 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?5 arguments: v462 i625 #next: v633  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-131697|0xfffffffffffdfd8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a479 
=== Succesors ===
next: v483 
=== Usages ===
=== Predecessor ===
a479 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a479 #next: v483  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
v633 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v649 
lastLocationAccess: - 
value: j469 
stateAfter: - 
=== Succesors ===
next: v491 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v649 lastLocationAccess: - value: j469 stateAfter: - #next: v491  <|@  <|@
f <@~|@floating>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: j501 
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: j501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
address: v653 
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v653 #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: j501 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: j501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
address: v654 
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v654 #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: j501 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: j501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
address: v655 
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v655 #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j501 
index: - 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j501 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v651 
lastLocationAccess: - 
value: j474 
stateAfter: - 
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v651 lastLocationAccess: - value: j474 stateAfter: - #next: v507  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j501 
index: - 
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j501 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v656 
lastLocationAccess: - 
value: v618 
stateAfter: - 
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v656 lastLocationAccess: - value: v618 stateAfter: - #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j501 
index: - 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j501 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v652 
lastLocationAccess: - 
value: i625 
stateAfter: - 
=== Succesors ===
next: v477 
=== Usages ===
=== Predecessor ===
v507 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v652 lastLocationAccess: - value: i625 stateAfter: - #next: v477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a478 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j501 
=== Succesors ===
next: v481 
=== Usages ===
a499 
=== Predecessor ===
v477 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j501 #next: v481  <|@  <|@
f <@*|@fixed>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
a478 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v482 
values: a478 a479 
=== Succesors ===
=== Usages ===
j524 a210 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v482 values: a478 a479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v481 v483 
=== Succesors ===
next: j520 
=== Usages ===
a499 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v481 v483 #next: j520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
=== Inputs ===
object: a194 
=== Succesors ===
next: j524 
=== Usages ===
v657 
=== Predecessor ===
v482 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a194 #next: j524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
=== Inputs ===
object: a499 
=== Succesors ===
next: v527 
=== Usages ===
v658 
=== Predecessor ===
j520 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a499 #next: v527  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j520 
index: - 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j520 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j524 
index: - 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j524 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopyKillInit
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v657 v658 j526 
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
j524 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v657 v658 j526 #next: v209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:80) [bci: 39] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a210 
=== Usages ===
=== Predecessor ===
v527 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:81) [bci: 43] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: a!# byte[]
=== Inputs ===
object: a499 
=== Succesors ===
next: v119 
=== Usages ===
a120 
=== Predecessor ===
v209 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a499 #next: v119  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
a210 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 14]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v598 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v598  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j528 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j528 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j580 
=== Usages ===
v659 v660 
=== Predecessor ===
v598 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j580  <|@  <|@
f <@~|@floating>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j528 
index: - 
=== Succesors ===
=== Usages ===
j580 v582 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j528 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j580 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v659 
lastLocationAccess: - 
=== Succesors ===
next: j581 
=== Usages ===
j533 v661 v662 v663 a559 v664 v668 v665 v666 v667 
=== Predecessor ===
j528 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v659 lastLocationAccess: - #next: j581  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j528 
index: - 
=== Succesors ===
=== Usages ===
j581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j528 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j581 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v660 
lastLocationAccess: - 
=== Succesors ===
next: v537 
=== Usages ===
v534 
=== Predecessor ===
j580 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v660 lastLocationAccess: - #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid j531 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i67 
=== Succesors ===
=== Usages ===
j567 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i67  <|@  <|@
f <@~|@floating>@ <|@
tid j567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64 [23 - 4294967318] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j531 
y: j488 
=== Succesors ===
=== Usages ===
j532 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j531 y: j488  <|@  <|@
f <@~|@floating>@ <|@
tid j532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64 [0 - 4294967312] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j567 
y: j467 
=== Succesors ===
=== Usages ===
j533 v548 j569 v665 v666 v667 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j567 y: j467  <|@  <|@
f <@~|@floating>@ <|@
tid j533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
=== Inputs ===
x: j532 
y: j580 
=== Succesors ===
=== Usages ===
v534 v582 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j532 y: j580  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j581 
y: j533 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j581 y: j533  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v534 
=== Succesors ===
trueSuccessor: v536 
falseSuccessor: v535 
=== Usages ===
=== Predecessor ===
j581 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v534 #trueSuccessor: v536 #falseSuccessor: v535  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a560 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a560 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?5 
arguments: v462 i67 
=== Succesors ===
next: v635 
=== Usages ===
v635 a578 
=== Predecessor ===
v536 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?5 arguments: v462 i67 #next: v635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-152177|0xfffffffffffdad8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a560 
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
a560 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a560 #next: v564  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
v635 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v582 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v659 
lastLocationAccess: - 
value: j533 
stateAfter: - 
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v659 lastLocationAccess: - value: j533 stateAfter: - #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j532 
index: j580 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j532 index: j580  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
address: v665 
=== Succesors ===
next: v575 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v665 #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j532 
index: j580 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j532 index: j580  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
address: v666 
=== Succesors ===
next: v577 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v666 #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j532 
index: j580 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j532 index: j580  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
address: v667 
=== Succesors ===
next: v583 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v667 #next: v583  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j580 
index: - 
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j580 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v661 
lastLocationAccess: - 
value: j474 
stateAfter: - 
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v661 lastLocationAccess: - value: j474 stateAfter: - #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j580 
index: - 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j580 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v668 
lastLocationAccess: - 
value: v618 
stateAfter: - 
=== Succesors ===
next: v587 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v668 lastLocationAccess: - value: v618 stateAfter: - #next: v587  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j580 
index: - 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j580 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v662 
lastLocationAccess: - 
value: i67 
stateAfter: - 
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v662 lastLocationAccess: - value: i67 stateAfter: - #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid j568 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j569 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64 [-16 - 4294967296] bits:x...x000
=== Inputs ===
x: j532 
y: j568 
=== Succesors ===
=== Usages ===
v540 v544 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j532 y: j568  <|@  <|@
f <@~|@floating>@ <|@
tid j570 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j569 
y: j570 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j569 y: j570  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v540 
=== Succesors ===
trueSuccessor: v542 
falseSuccessor: v541 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v540 #trueSuccessor: v542 #falseSuccessor: v541  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v545  <|@  <|@
f <@~|@floating>@ <|@
tid j458 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j556 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j175 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 13]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
v542 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v546 
values: j175 j556 
=== Succesors ===
=== Usages ===
v548 v663 j556 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v546 values: j175 j556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 56
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v545 
=== Succesors ===
next: v554 
=== Usages ===
j547 v553 v557 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v545 #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j547 
y: j532 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j547 y: j532  <|@  <|@
f <@*|@fixed>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v548 
=== Succesors ===
trueSuccessor: v549 
falseSuccessor: v553 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v548 #trueSuccessor: v549 #falseSuccessor: v553  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v588 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j580 
index: j547 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j580 index: j547  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v663 
lastLocationAccess: - 
value: j406 
stateAfter: - 
=== Succesors ===
next: v557 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v663 lastLocationAccess: - value: j406 stateAfter: - #next: v557  <|@  <|@
f <@~|@floating>@ <|@
tid j556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
=== Inputs ===
x: j547 
y: j458 
=== Succesors ===
=== Usages ===
j547 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j547 y: j458  <|@  <|@
f <@*|@fixed>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v546 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v546  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v546 
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v546 #next: v552  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
v553 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v544  <|@  <|@
f <@~|@floating>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j580 
index: - 
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j580 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v664 
lastLocationAccess: - 
length: j569 
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v664 lastLocationAccess: - length: j569 #next: v550  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
v544 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v550 v552 
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v550 v552 #next: v558  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a559 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a559  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j580 
=== Succesors ===
next: v562 
=== Usages ===
a578 
=== Predecessor ===
v558 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j580 #next: v562  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
a559 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v563 
values: a559 a560 
=== Succesors ===
=== Usages ===
j602 a120 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v563 values: a559 a560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v562 v564 
=== Succesors ===
next: v389 
=== Usages ===
a578 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v562 v564 #next: v389  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3543) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i67 
y: i625 
=== Succesors ===
=== Usages ===
i115 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i67 y: i625  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3543) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
condition: v114 
trueValue: i67 
falseValue: i625 
=== Succesors ===
=== Usages ===
j604 v223 v294 v295 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v114 trueValue: i67 falseValue: i625  <|@  <|@
f <@~|@floating>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i115 
y: i49 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i115 y: i49  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v223 
=== Succesors ===
trueSuccessor: v387 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v223 #trueSuccessor: v387 #falseSuccessor: v388  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid i432 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
rawvalue: -98841
stableDimension: 0
stamp: i32 [-98841]
stampKind: i32
value: int[-98841|0xfffffffffffe7de7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v387 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i625 
y: i115 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i625 y: i115  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v294 
=== Succesors ===
trueSuccessor: v391 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v294 #trueSuccessor: v391 #falseSuccessor: v392  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid i434 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
rawvalue: -99865
stableDimension: 0
stamp: i32 [-99865]
stampKind: i32
value: int[-99865|0xfffffffffffe79e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v391 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v397  <|@  <|@
f <@~|@floating>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i67 
y: i115 
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i67 y: i115  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v295 
=== Succesors ===
trueSuccessor: v395 
falseSuccessor: v396 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v295 #trueSuccessor: v395 #falseSuccessor: v396  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v435  <|@  <|@
f <@~|@floating>@ <|@
tid i436 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
rawvalue: -100889
stableDimension: 0
stamp: i32 [-100889]
stampKind: i32
value: int[-100889|0xfffffffffffe75e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v395 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j600 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
=== Inputs ===
object: a194 
=== Succesors ===
next: j602 
=== Usages ===
v669 
=== Predecessor ===
v396 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a194 #next: j602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
=== Inputs ===
object: a578 
=== Succesors ===
next: v605 
=== Usages ===
v670 
=== Predecessor ===
j600 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a578 #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j600 
index: - 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j600 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j602 
index: - 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j602 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j604 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i115 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v669 v670 j604 
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
j602 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v669 v670 j604 #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
v605 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a120 <|@
d <@d|@=== Debug Properties ===
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v118 
values: a210 a578 
=== Succesors ===
=== Usages ===
a319 a244 v457 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v118 values: a210 a578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v119 v121 
=== Succesors ===
next: v455 
=== Usages ===
a120 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v119 v121 #next: v455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
precise: true
stamp: void
=== Inputs ===
address: v644 
value: - 
stateBefore: - 
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v644 value: - stateBefore: - #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid a244 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: Compress
stamp: n!# byte[]
=== Inputs ===
value: a120 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.value
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v644 
lastLocationAccess: - 
value: a244 
stateAfter: - 
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v644 lastLocationAccess: - value: a244 stateAfter: - #next: v457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
precise: false
stamp: void
=== Inputs ===
address: v644 
value: a120 
object: a168 
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v644 value: a120 object: a168 #next: v73  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v72 
values: a194 a120 
=== Succesors ===
=== Usages ===
v647 j611 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v72 values: a194 a120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v71 v73 
=== Succesors ===
next: v357 
=== Usages ===
a319 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v71 v73 #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid i290 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.isLatin1(AbstractStringBuilder.java:1693) [bci: 10]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1777) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v291 v292 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.isLatin1(AbstractStringBuilder.java:1693) [bci: 10]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1777) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i630 
y: i290 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i630 y: i290  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1777) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v291 
=== Succesors ===
trueSuccessor: v355 
falseSuccessor: v356 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v291 #trueSuccessor: v355 #falseSuccessor: v356  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1778) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1778) [bci: 8]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i627 
y: i290 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i627 y: i290  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1778) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v292 
=== Succesors ===
trueSuccessor: v359 
falseSuccessor: v360 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v292 #trueSuccessor: v359 #falseSuccessor: v360  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v365  <|@  <|@
f <@~|@floating>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 45]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i629 
y: i49 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i629 y: i49  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v257 
=== Succesors ===
trueSuccessor: v363 
falseSuccessor: v364 
=== Usages ===
=== Predecessor ===
v359 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v257 #trueSuccessor: v363 #falseSuccessor: v364  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid i439 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: -92697
stableDimension: 0
stamp: i32 [-92697]
stampKind: i32
value: int[-92697|0xfffffffffffe95e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v363 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i39 
y: i49 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i39 y: i49  <|@  <|@
f <@*|@fixed>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v259 
=== Succesors ===
trueSuccessor: v367 
falseSuccessor: v368 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v259 #trueSuccessor: v367 #falseSuccessor: v368  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid i450 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: -93721
stableDimension: 0
stamp: i32 [-93721]
stampKind: i32
value: int[-93721|0xfffffffffffe91e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v367 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid i262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 139]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i628 
y: i39 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i628 y: i39  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i262 
y: i622 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i262 y: i622  <|@  <|@
f <@*|@fixed>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v263 
=== Succesors ===
trueSuccessor: v371 
falseSuccessor: v372 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v263 #trueSuccessor: v371 #falseSuccessor: v372  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid i452 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: -94745
stableDimension: 0
stamp: i32 [-94745]
stampKind: i32
value: int[-94745|0xfffffffffffe8de7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v371 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i631 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i631  <|@  <|@
f <@~|@floating>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a319 
index: - 
=== Succesors ===
=== Usages ===
i631 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a319 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i631 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 175]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v647 
lastLocationAccess: - 
=== Succesors ===
next: v377 
=== Usages ===
i265 
=== Predecessor ===
v372 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v647 lastLocationAccess: - #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid i265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i631 
y: i39 
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i631 y: i39  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i265 
y: i629 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i265 y: i629  <|@  <|@
f <@*|@fixed>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v266 
=== Succesors ===
trueSuccessor: v375 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
i631 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v266 #trueSuccessor: v375 #falseSuccessor: v376  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid i454 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: -95769
stableDimension: 0
stamp: i32 [-95769]
stampKind: i32
value: int[-95769|0xfffffffffffe89e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v375 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j606 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j606  <|@  <|@
f <@~|@floating>@ <|@
tid a251 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.value(String.java:4817) [bci: 1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a626 
=== Succesors ===
=== Usages ===
j606 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
=== Inputs ===
object: a251 
=== Succesors ===
next: j611 
=== Usages ===
v671 
=== Predecessor ===
v376 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a251 #next: j611  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
=== Inputs ===
object: a319 
=== Succesors ===
next: v617 
=== Usages ===
v672 
=== Predecessor ===
j606 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a319 #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid j607 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i622 
=== Succesors ===
=== Usages ===
v671 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i622  <|@  <|@
f <@~|@floating>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j606 
index: j607 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j606 index: j607  <|@  <|@
f <@~|@floating>@ <|@
tid j612 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i629 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i629  <|@  <|@
f <@~|@floating>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j611 
index: j612 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j611 index: j612  <|@  <|@
f <@~|@floating>@ <|@
tid j616 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i39 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i39  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v671 v672 j616 
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
j611 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v671 v672 j616 #next: v280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1802) [bci: 203]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v643 
lastLocationAccess: - 
value: i141 
stateAfter: - 
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v643 lastLocationAccess: - value: i141 stateAfter: - #next: v20  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
v280 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1778) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid j448 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: 5140
stableDimension: 0
stamp: i64 [5140]
stampKind: i64
value: long[5140|0x1414]
=== Inputs ===
=== Succesors ===
=== Usages ===
j441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i447 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: -91667
stableDimension: 0
stamp: i32 [-91667]
stampKind: i32
value: int[-91667|0xfffffffffffe99ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v360 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1777) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v443 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v443  <|@  <|@
f <@~|@floating>@ <|@
tid j445 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: 4500
stableDimension: 0
stamp: i64 [4500]
stampKind: i64
value: long[4500|0x1194]
=== Inputs ===
=== Succesors ===
=== Usages ===
j441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i444 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: -90643
stableDimension: 0
stamp: i32 [-90643]
stampKind: i32
value: int[-90643|0xfffffffffffe9ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v356 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32 [-95769 - -90643] bits:1...10100xxx011110x1x1
valueDescription: i32
=== Inputs ===
merge: v437 
values: i439 i444 i447 i450 i452 i454 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v437 values: i439 i444 i447 i450 i452 i454  <|@  <|@
f <@~|@floating>@ <|@
tid j441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64 [0 - 5140] bits:0...0x0x0xx00x0x00
valueDescription: i64
=== Inputs ===
merge: v437 
values: j406 j445 j448 j406 j406 j406 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v437 values: j406 j445 j448 j406 j406 j406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v438 v443 v446 v449 v451 v453 
=== Succesors ===
next: v442 
=== Usages ===
i440 j441 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v438 v443 v446 v449 v451 v453 #next: v442  <|@  <|@
tid ?153 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Formatter, Object, Locale)>
localsSize: 4
locksSize: 0
sourceFile: Formatter.java
sourceLine: 2876
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?35 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?35 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence, int, int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?153 
values: a168 a172 i622 i621 
=== Succesors ===
=== Usages ===
?152 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?153 values: a168 a172 i622 i621  <|@  <|@
tid ?152 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence, int, int)>
localsSize: 4
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 218
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?35 
values: a168 
=== Succesors ===
=== Usages ===
?122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?35 values: a168  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 35
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence, int, int)>
localsSize: 5
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 686
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?152 
values: a168 a172 i622 i621 
=== Succesors ===
=== Usages ===
?74 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?152 values: a168 a172 i622 i621  <|@  <|@
tid ?74 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: return
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 245
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
stateBefore: ?74 
actionAndReason: i440 
speculation: j441 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?74 actionAndReason: i440 speculation: j441  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid j430 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
rawvalue: 3860
stableDimension: 0
stamp: i64 [3860]
stampKind: i64
value: long[3860|0xf14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i429 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
rawvalue: -97811
stableDimension: 0
stamp: i32 [-97811]
stampKind: i32
value: int[-97811|0xfffffffffffe81ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v384 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a155 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a155  <|@  <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
referencedType: [null]
returnStamp: a# java.io.PrintStream
signature: [HotSpotType<Ljava/io/PrintStream;, resolved>, UnresolvedJavaType<Ljava/lang/CharSequence;>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<PrintStream.append(CharSequence, int, int)>
=== Inputs ===
arguments: a168 a172 i622 i621 
=== Succesors ===
=== Usages ===
a155 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a168 a172 i622 i621  <|@  <|@
tid ?158 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Formatter, Object, Locale)>
localsSize: 4
locksSize: 0
sourceFile: Formatter.java
sourceLine: 2876
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?402 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?402 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence, int, int)>
localsSize: 4
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 67
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?158 
=== Succesors ===
=== Usages ===
a155 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a155 <|@
d <@d|@=== Debug Properties ===
bci: 4
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
polymorphic: false
stamp: a# java.io.PrintStream
targetMethod: Direct#PrintStream.append
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v281 
stateDuring: ?402 
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v281 stateDuring: ?402 #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
a155 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v20 v25 
=== Succesors ===
next: v13 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v20 v25 #next: v13  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 22]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid j169 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 5]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i415 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
rawvalue: -6707
stableDimension: 0
stamp: i32 [-6707]
stampKind: i32
value: int[-6707|0xffffffffffffe5cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v27 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: i32 [-100889 - -6707] bits:1...1xxxxxxx0111x0x1x1
valueDescription: i32
=== Inputs ===
merge: v403 
values: i415 i422 i425 i427 i429 i432 i434 i436 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v403 values: i415 i422 i425 i427 i429 i432 i434 i436  <|@  <|@
f <@~|@floating>@ <|@
tid j408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: i64 [0 - 3860] bits:0...0xxxx000x0x00
valueDescription: i64
=== Inputs ===
merge: v403 
values: j169 j423 j423 j423 j430 j406 j406 j406 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v403 values: j169 j423 j423 j423 j430 j406 j406 j406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v414 v421 v424 v426 v428 v431 v433 v435 
=== Succesors ===
next: v409 
=== Usages ===
i407 j408 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v414 v421 v424 v426 v428 v431 v433 v435 #next: v409  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i407 
speculation: j408 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i407 speculation: j408  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v13|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSXB input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v15|DWORD = MOV input: [v13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVSXB value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHR (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v4|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v20|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVSXB value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SHR (x: v12|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SUB (x: v21|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD[.]] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v19|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v15|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOV input: [v70|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v73|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v75|QWORD[*] + v5|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v76|QWORD[*] + v18|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SUB (x: v26|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v28|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = CMOVE (falseValue: v27|DWORD, ~trueValue: v30|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SAR (x: v32|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SHL (x: v34|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v35|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA address: [v49|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = AND x: v50|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = ADD (x: v51|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v48|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v48|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + 12], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA address: [v51|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v54|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|QWORD, y: v55|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v48|QWORD + v55|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA address: [v55|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|QWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v35|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v35|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: v65|QWORD, temp2: v66|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v64|QWORD[.]) {temp: v68|QWORD, temp2: v69|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v48|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA address: [v38|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = AND x: v39|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = ADD (x: v40|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|QWORD[.]] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100889|0xfffffffffffe75e7], long[0|0x0]] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99865|0xfffffffffffe79e7], long[0|0x0]] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98841|0xfffffffffffe7de7], long[0|0x0]] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-95769|0xfffffffffffe89e7], long[0|0x0]] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-87571|0xfffffffffffea9ed], long[2580|0xa14]] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-97811|0xfffffffffffe81ed], long[3860|0xf14]] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-91667|0xfffffffffffe99ed], long[5140|0x1414]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-93721|0xfffffffffffe91e7], long[0|0x0]] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-92697|0xfffffffffffe95e7], long[0|0x0]] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-90643|0xfffffffffffe9ded], long[4500|0x1194]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-88595|0xfffffffffffea5ed], long[2580|0xa14]] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-94745|0xfffffffffffe8de7], long[0|0x0]] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: v10|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-89619|0xfffffffffffea1ed], long[2580|0xa14]] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-6707|0xffffffffffffe5cd], long[20|0x14]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD, v82|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a619 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a619  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.Formatter$FixedString
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v637 v638 v639 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.util.Formatter
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v636 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Formatter, Object, Locale)>
localsSize: 4
locksSize: 0
sourceFile: Formatter.java
sourceLine: 2876
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v409 v633 v635 a479 a560 a619 v620 i625 a626 i628 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v636 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a619 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a619 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: int[-41739|0xffffffffffff5cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter.a
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: n java.lang.Object
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v636 
lastLocationAccess: - 
=== Succesors ===
next: v620 
=== Usages ===
a168 v643 v644 v645 v648 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v636 lastLocationAccess: - #next: v620  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
result [v2|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a619 
=== Succesors ===
=== Usages ===
v620 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v620 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-45579|0xffffffffffff4df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v648 
lastLocationAccess: - 
=== Succesors ===
next: i621 
=== Usages ===
v461 
=== Predecessor ===
a619 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v648 lastLocationAccess: - #next: i621  <|@  <|@
f <@~|@floating>@ <|@
tid v639 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i621 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i621 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter$FixedString.end
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 13]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v639 
lastLocationAccess: - 
=== Succesors ===
next: i622 
=== Usages ===
v54 ?122 v281 ?35 i39 v52 
=== Predecessor ===
v620 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v639 lastLocationAccess: - #next: i622  <|@  <|@
f <@~|@floating>@ <|@
tid v638 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i622 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i622 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter$FixedString.start
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 9]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v638 
lastLocationAccess: - 
=== Succesors ===
next: a623 
=== Usages ===
j607 ?122 v281 ?35 i39 v255 v52 v263 
=== Predecessor ===
i621 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v638 lastLocationAccess: - #next: a623  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a623 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a623 <|@
result v6|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.String
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter$FixedString.s
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 5]
stamp: n# java.lang.String
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v637 
lastLocationAccess: - 
=== Succesors ===
next: v32 
=== Usages ===
a172 v640 v642 
=== Predecessor ===
i622 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v637 lastLocationAccess: - #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid a172 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 5]
op: Uncompress
stamp: a# java.lang.String
=== Inputs ===
value: a623 
=== Succesors ===
=== Usages ===
?35 ?122 v281 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a623  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v620 
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v620  <|@  <|@
f <@~|@floating>@ <|@
tid a168 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a619 
=== Succesors ===
=== Usages ===
?122 v457 v281 ?152 ?35 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a619  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}]
keySuccessors: [I@77822990
keys: [HotSpotType<Ljava/lang/StringBuilder;, resolved>, HotSpotType<Ljava/io/PrintStream;, resolved>]
profileData: PROFILED keyProbabilities: [0.9886797042627666, 0.01132029573723338, 0.0]
stamp: void
=== Inputs ===
value: v461 
=== Succesors ===
successors: v19 v24 v27 
=== Usages ===
=== Predecessor ===
a623 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v461 #successors: v19 v24 v27  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a624 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a624  <|@  <|@
f <@~|@floating>@ <|@
tid v644 <|@
result [v2|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a619 
=== Succesors ===
=== Usages ===
a624 v245 v455 v457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a624 <|@
result v11|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v644 
lastLocationAccess: - 
=== Succesors ===
next: i625 
=== Usages ===
a194 v646 
=== Predecessor ===
v19 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v644 lastLocationAccess: - #next: i625  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
result [v11|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a624 
=== Succesors ===
=== Usages ===
i625 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i625 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-50187|0xffffffffffff3bf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v646 
lastLocationAccess: - 
=== Succesors ===
next: a626 
=== Usages ===
v294 v508 j526 i59 i79 i82 i88 v97 v114 i115 a479 
=== Predecessor ===
a624 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v646 lastLocationAccess: - #next: a626  <|@  <|@
f <@~|@floating>@ <|@
tid v640 <|@
result [v6|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a623 
=== Succesors ===
=== Usages ===
a626 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a626 <|@
result v13|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: int[-86547|0xfffffffffffeaded]
deoptSpeculation: long[1300|0x514]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: n# byte[]
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v640 
lastLocationAccess: - 
=== Succesors ===
next: i627 
=== Usages ===
a251 v641 
=== Predecessor ===
i625 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v640 lastLocationAccess: - #next: i627  <|@  <|@
f <@~|@floating>@ <|@
tid v642 <|@
result [v6|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a623 
=== Succesors ===
=== Usages ===
i627 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i627 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v642 
lastLocationAccess: - 
=== Succesors ===
next: i628 
=== Usages ===
i189 v292 
=== Predecessor ===
a626 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v642 lastLocationAccess: - #next: i628  <|@  <|@
f <@~|@floating>@ <|@
tid v641 <|@
result [v13|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a626 
=== Succesors ===
=== Usages ===
i628 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i628 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-46859|0xffffffffffff48f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v641 
lastLocationAccess: - 
=== Succesors ===
next: v345 
=== Usages ===
i47 i262 
=== Predecessor ===
i627 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v641 lastLocationAccess: - #next: v345  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 v223 v255 v257 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:395) [bci: 2]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i622 
y: i49 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i622 y: i49  <|@  <|@
f <@~|@floating>@ <|@
tid j423 <|@
result long[2580|0xa14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
rawvalue: 2580
stableDimension: 0
stamp: i64 [2580]
stampKind: i64
value: long[2580|0xa14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j408 j408 j408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v255 
=== Succesors ===
trueSuccessor: v343 
falseSuccessor: v344 
=== Usages ===
=== Predecessor ===
i628 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v255 #trueSuccessor: v343 #falseSuccessor: v344  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v13|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSXB input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v15|DWORD = MOV input: [v13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid i422 <|@
result int[-87571|0xfffffffffffea9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
rawvalue: -87571
stableDimension: 0
stamp: i32 [-87571]
stampKind: i32
value: int[-87571|0xfffffffffffea9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v343 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-87571|0xfffffffffffea9ed], long[2580|0xa14]] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i621 
y: i622 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i621 y: i622  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v52 
=== Succesors ===
trueSuccessor: v347 
falseSuccessor: v348 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v52 #trueSuccessor: v347 #falseSuccessor: v348  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid i425 <|@
result int[-88595|0xfffffffffffea5ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
rawvalue: -88595
stableDimension: 0
stamp: i32 [-88595]
stampKind: i32
value: int[-88595|0xfffffffffffea5ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v347 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-88595|0xfffffffffffea5ed], long[2580|0xa14]] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v353  <|@  <|@
f <@~|@floating>@ <|@
tid i189 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i627 
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i627  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i628 
y: i189 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i628 y: i189  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i47 
y: i621 
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i47 y: i621  <|@  <|@
f <@*|@fixed>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v351 
falseSuccessor: v352 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v351 #falseSuccessor: v352  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVSXB value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHR (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:348) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v426 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v426  <|@  <|@
f <@~|@floating>@ <|@
tid i427 <|@
result int[-89619|0xfffffffffffea1ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
rawvalue: -89619
stableDimension: 0
stamp: i32 [-89619]
stampKind: i32
value: int[-89619|0xfffffffffffea1ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v351 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-89619|0xfffffffffffea1ed], long[2580|0xa14]] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:350) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:684) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i629 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i629  <|@  <|@
f <@~|@floating>@ <|@
tid v643 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a619 
=== Succesors ===
=== Usages ===
i629 v280 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i629 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 29]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v643 
lastLocationAccess: - 
=== Succesors ===
next: i630 
=== Usages ===
v257 j612 i141 v266 
=== Predecessor ===
v352 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v643 lastLocationAccess: - #next: i630  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
result [v2|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a619 
=== Succesors ===
=== Usages ===
i630 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a619  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i630 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v645 
lastLocationAccess: - 
=== Succesors ===
next: v65 
=== Usages ===
i202 v291 
=== Predecessor ===
i629 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v645 lastLocationAccess: - #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid i39 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:685) [bci: 24]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i621 
y: i622 
=== Succesors ===
=== Usages ===
v259 j616 i141 i262 i265 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i621 y: i622  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1802) [bci: 202]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i39 
y: i629 
=== Succesors ===
=== Usages ===
v280 i60 i78 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i39 y: i629  <|@  <|@
f <@~|@floating>@ <|@
tid i202 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i630 
=== Succesors ===
=== Usages ===
i59 i78 i81 i87 i67 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i630  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i625 
y: i202 
=== Succesors ===
=== Usages ===
i60 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i625 y: i202  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i141 
y: i59 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i141 y: i59  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i60 
y: i61 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i60 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid a194 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a624 
=== Succesors ===
=== Usages ===
j600 a319 j520 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a624  <|@  <|@
f <@~|@floating>@ <|@
tid j406 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j441 v588 j408 j408 j408 j441 j441 j441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: PROFILED designatedSuccessorProbability: 0.9102668972297561
stamp: void
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
i630 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v64 #falseSuccessor: v63  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v4|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v20|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVSXB value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SHR (x: v12|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SUB (x: v21|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
v64 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD[.]] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:261) [bci: 11]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i141 
y: i202 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i141 y: i202  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:262) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i78 
y: i625 
=== Succesors ===
=== Usages ===
v94 i95 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i78 y: i625  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i81 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 27]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i80 
y: i202 
=== Succesors ===
=== Usages ===
i82 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i80 y: i202  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i81 
y: i625 
=== Succesors ===
=== Usages ===
v94 i95 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i81 y: i625  <|@  <|@
f <@~|@floating>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i79 
y: i82 
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i79 y: i82  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
condition: v94 
trueValue: i82 
falseValue: i79 
=== Succesors ===
=== Usages ===
i88 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v94 trueValue: i82 falseValue: i79  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 6]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i95 
y: i625 
=== Succesors ===
=== Usages ===
i399 i87 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i95 y: i625  <|@  <|@
f <@~|@floating>@ <|@
tid i398 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i399 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i88 
y: i398 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i88 y: i398  <|@  <|@
f <@~|@floating>@ <|@
tid i400 <|@
result int[2147483639|0x7ffffff7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639]
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i399 
y: i400 
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i399 y: i400  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v401 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v384 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v401 #trueSuccessor: v383 #falseSuccessor: v384  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SUB (x: v26|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v28|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = CMOVE (falseValue: v27|DWORD, ~trueValue: v30|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:742) [bci: 19]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:267) [bci: 57]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i88 
y: i202 
=== Succesors ===
=== Usages ===
i67 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: i88 y: i202  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i87 
y: i202 
=== Succesors ===
=== Usages ===
v97 v587 v114 i115 v295 j531 a560 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i87 y: i202  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3538) [bci: 3]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i67 
y: i625 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i67 y: i625  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v507 v586 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j474 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v504 v583 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v462 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a479 a560 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j488 <|@
result long[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j489 j567 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j467 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j468 j532 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3538) [bci: 3]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: PROFILED designatedSuccessorProbability: 3.433727982038448E-5
stamp: void
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v99 #falseSuccessor: v98  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SAR (x: v32|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SHL (x: v34|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v35|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j463 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j463 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j501 
=== Usages ===
v649 v650 
=== Predecessor ===
v518 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j501  <|@  <|@
f <@~|@floating>@ <|@
tid v649 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j463 
index: - 
=== Succesors ===
=== Usages ===
j501 v503 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j463 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j501 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v649 
lastLocationAccess: - 
=== Succesors ===
next: j502 
=== Usages ===
j469 v651 v652 a478 v656 v653 v654 v655 
=== Predecessor ===
j463 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v649 lastLocationAccess: - #next: j502  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j463 
index: - 
=== Succesors ===
=== Usages ===
j502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j463 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j502 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v650 
lastLocationAccess: - 
=== Succesors ===
next: v473 
=== Usages ===
v470 
=== Predecessor ===
j501 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v650 lastLocationAccess: - #next: v473  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i625 
=== Succesors ===
=== Usages ===
v527 j489 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i625  <|@  <|@
f <@~|@floating>@ <|@
tid j489 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64 [23 - 2147483670] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j526 
y: j488 
=== Succesors ===
=== Usages ===
j468 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j526 y: j488  <|@  <|@
f <@~|@floating>@ <|@
tid j468 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64 [0 - 2147483664] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j489 
y: j467 
=== Succesors ===
=== Usages ===
j469 v653 v654 v655 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j489 y: j467  <|@  <|@
f <@~|@floating>@ <|@
tid j469 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
=== Inputs ===
x: j468 
y: j501 
=== Succesors ===
=== Usages ===
v470 v503 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j468 y: j501  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j502 
y: j469 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j502 y: j469  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v470 
=== Succesors ===
trueSuccessor: v472 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
j502 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v470 #trueSuccessor: v472 #falseSuccessor: v471  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA address: [v38|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = AND x: v39|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = ADD (x: v40|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a479 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a479 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?5 
arguments: v462 i625 
=== Succesors ===
next: v633 
=== Usages ===
v633 a499 
=== Predecessor ===
v472 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?5 arguments: v462 i625 #next: v633  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-131697|0xfffffffffffdfd8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a479 
=== Succesors ===
next: v483 
=== Usages ===
=== Predecessor ===
a479 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a479 #next: v483  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
v633 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|QWORD[.]] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v649 
lastLocationAccess: - 
value: j469 
stateAfter: - 
=== Succesors ===
next: v491 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v649 lastLocationAccess: - value: j469 stateAfter: - #next: v491  <|@  <|@
f <@~|@floating>@ <|@
tid v653 <|@
result [v40|QWORD + v37|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: j501 
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: j501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
address: v653 
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v653 #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
result [v40|QWORD + v37|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: j501 
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: j501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
address: v654 
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v654 #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
result [v40|QWORD + v37|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: j501 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: j501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
address: v655 
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v655 #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
result [v37|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j501 
index: - 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j501 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v651 
lastLocationAccess: - 
value: j474 
stateAfter: - 
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v651 lastLocationAccess: - value: j474 stateAfter: - #next: v507  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
result [v37|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j501 
index: - 
=== Succesors ===
=== Usages ===
v507 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j501 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v656 
lastLocationAccess: - 
value: v618 
stateAfter: - 
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v656 lastLocationAccess: - value: v618 stateAfter: - #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid v652 <|@
result [v37|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j501 
index: - 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j501 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v652 
lastLocationAccess: - 
value: i625 
stateAfter: - 
=== Succesors ===
next: v477 
=== Usages ===
=== Predecessor ===
v507 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v652 lastLocationAccess: - value: i625 stateAfter: - #next: v477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a478 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a478 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j501 
=== Succesors ===
next: v481 
=== Usages ===
a499 
=== Predecessor ===
v477 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j501 #next: v481  <|@  <|@
f <@*|@fixed>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
a478 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a499 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v482 
values: a478 a479 
=== Succesors ===
=== Usages ===
j524 a210 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v482 values: a478 a479  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v481 v483 
=== Succesors ===
next: j520 
=== Usages ===
a499 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v481 v483 #next: j520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j520 <|@
result v46|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
=== Inputs ===
object: a194 
=== Succesors ===
next: j524 
=== Usages ===
v657 
=== Predecessor ===
v482 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a194 #next: j524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j524 <|@
result v47|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
=== Inputs ===
object: a499 
=== Succesors ===
next: v527 
=== Usages ===
v658 
=== Predecessor ===
j520 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a499 #next: v527  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
result [v46|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j520 
index: - 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j520 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
result [v47|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j524 
index: - 
=== Succesors ===
=== Usages ===
v527 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j524 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopyKillInit
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v657 v658 j526 
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
j524 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v657 v658 j526 #next: v209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:80) [bci: 39] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a210 
=== Usages ===
=== Predecessor ===
v527 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a210 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:81) [bci: 43] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: a!# byte[]
=== Inputs ===
object: a499 
=== Succesors ===
next: v119 
=== Usages ===
a120 
=== Predecessor ===
v209 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a499 #next: v119  <|@  <|@
f <@*|@fixed>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
a210 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 14]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v598 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v598  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j528 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j528 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j580 
=== Usages ===
v659 v660 
=== Predecessor ===
v598 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j580  <|@  <|@
f <@~|@floating>@ <|@
tid v659 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j528 
index: - 
=== Succesors ===
=== Usages ===
j580 v582 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j528 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j580 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v659 
lastLocationAccess: - 
=== Succesors ===
next: j581 
=== Usages ===
j533 v661 v662 v663 a559 v664 v668 v665 v666 v667 
=== Predecessor ===
j528 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v659 lastLocationAccess: - #next: j581  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j528 
index: - 
=== Succesors ===
=== Usages ===
j581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j528 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j581 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v660 
lastLocationAccess: - 
=== Succesors ===
next: v537 
=== Usages ===
v534 
=== Predecessor ===
j580 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v660 lastLocationAccess: - #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid j531 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i67 
=== Succesors ===
=== Usages ===
j567 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i67  <|@  <|@
f <@~|@floating>@ <|@
tid j567 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64 [23 - 4294967318] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j531 
y: j488 
=== Succesors ===
=== Usages ===
j532 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j531 y: j488  <|@  <|@
f <@~|@floating>@ <|@
tid j532 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64 [0 - 4294967312] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j567 
y: j467 
=== Succesors ===
=== Usages ===
j533 v548 j569 v665 v666 v667 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j567 y: j467  <|@  <|@
f <@~|@floating>@ <|@
tid j533 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
=== Inputs ===
x: j532 
y: j580 
=== Succesors ===
=== Usages ===
v534 v582 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j532 y: j580  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j581 
y: j533 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j581 y: j533  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v534 
=== Succesors ===
trueSuccessor: v536 
falseSuccessor: v535 
=== Usages ===
=== Predecessor ===
j581 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v534 #trueSuccessor: v536 #falseSuccessor: v535  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA address: [v49|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = AND x: v50|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = ADD (x: v51|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a560 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a560 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?5 
arguments: v462 i67 
=== Succesors ===
next: v635 
=== Usages ===
v635 a578 
=== Predecessor ===
v536 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?5 arguments: v462 i67 #next: v635  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-152177|0xfffffffffffdad8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?5 
object: a560 
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
a560 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?5 object: a560 #next: v564  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
v635 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v582 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v659 
lastLocationAccess: - 
value: j533 
stateAfter: - 
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v659 lastLocationAccess: - value: j533 stateAfter: - #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid v665 <|@
result [v51|QWORD + v48|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j532 
index: j580 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j532 index: j580  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
address: v665 
=== Succesors ===
next: v575 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v665 #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid v666 <|@
result [v51|QWORD + v48|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j532 
index: j580 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j532 index: j580  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
address: v666 
=== Succesors ===
next: v577 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v666 #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
result [v51|QWORD + v48|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j532 
index: j580 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j532 index: j580  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
address: v667 
=== Succesors ===
next: v583 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v667 #next: v583  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
result [v48|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j580 
index: - 
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j580 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v661 
lastLocationAccess: - 
value: j474 
stateAfter: - 
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v661 lastLocationAccess: - value: j474 stateAfter: - #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid v668 <|@
result [v48|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j580 
index: - 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j580 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v668 
lastLocationAccess: - 
value: v618 
stateAfter: - 
=== Succesors ===
next: v587 
=== Usages ===
=== Predecessor ===
v583 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v668 lastLocationAccess: - value: v618 stateAfter: - #next: v587  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
result [v48|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j580 
index: - 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j580 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v662 
lastLocationAccess: - 
value: i67 
stateAfter: - 
=== Succesors ===
next: v543 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v662 lastLocationAccess: - value: i67 stateAfter: - #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid j568 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j569 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j569 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64 [-16 - 4294967296] bits:x...x000
=== Inputs ===
x: j532 
y: j568 
=== Succesors ===
=== Usages ===
v540 v544 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j532 y: j568  <|@  <|@
f <@~|@floating>@ <|@
tid j570 <|@
result long[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j569 
y: j570 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j569 y: j570  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v540 
=== Succesors ===
trueSuccessor: v542 
falseSuccessor: v541 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v540 #trueSuccessor: v542 #falseSuccessor: v541  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v48|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v48|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + 12], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA address: [v51|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v54|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v545  <|@  <|@
f <@~|@floating>@ <|@
tid j458 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j556 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j175 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 13]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v546 
=== Predecessor ===
v542 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j547 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v546 
values: j175 j556 
=== Succesors ===
=== Usages ===
v548 v663 j556 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v546 values: j175 j556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 56
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v545 
=== Succesors ===
next: v554 
=== Usages ===
j547 v553 v557 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v545 #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j547 
y: j532 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j547 y: j532  <|@  <|@
f <@*|@fixed>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v548 
=== Succesors ===
trueSuccessor: v549 
falseSuccessor: v553 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v548 #trueSuccessor: v549 #falseSuccessor: v553  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|QWORD, y: v55|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v588 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid v663 <|@
result [v48|QWORD + v55|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j580 
index: j547 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j580 index: j547  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v663 
lastLocationAccess: - 
value: j406 
stateAfter: - 
=== Succesors ===
next: v557 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v663 lastLocationAccess: - value: j406 stateAfter: - #next: v557  <|@  <|@
f <@~|@floating>@ <|@
tid j556 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
=== Inputs ===
x: j547 
y: j458 
=== Succesors ===
=== Usages ===
j547 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j547 y: j458  <|@  <|@
f <@*|@fixed>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v546 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v546  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v48|QWORD + v55|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA address: [v55|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|QWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v546 
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v546 #next: v552  <|@  <|@
f <@*|@fixed>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
v553 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v544  <|@  <|@
f <@~|@floating>@ <|@
tid v664 <|@
result [v48|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j580 
index: - 
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j580 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v664 
lastLocationAccess: - 
length: j569 
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v664 lastLocationAccess: - length: j569 #next: v550  <|@  <|@
f <@*|@fixed>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v551 
=== Predecessor ===
v544 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v48|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v550 v552 
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v550 v552 #next: v558  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a559 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a559  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a559 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j580 
=== Succesors ===
next: v562 
=== Usages ===
a578 
=== Predecessor ===
v558 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j580 #next: v562  <|@  <|@
f <@*|@fixed>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
a559 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a578 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v563 
values: a559 a560 
=== Succesors ===
=== Usages ===
j602 a120 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v563 values: a559 a560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v562 v564 
=== Succesors ===
next: v389 
=== Usages ===
a578 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v562 v564 #next: v389  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3543) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i67 
y: i625 
=== Succesors ===
=== Usages ===
i115 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i67 y: i625  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3543) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
condition: v114 
trueValue: i67 
falseValue: i625 
=== Succesors ===
=== Usages ===
j604 v223 v294 v295 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v114 trueValue: i67 falseValue: i625  <|@  <|@
f <@~|@floating>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i115 
y: i49 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i115 y: i49  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v223 
=== Succesors ===
trueSuccessor: v387 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v223 #trueSuccessor: v387 #falseSuccessor: v388  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v35|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid i432 <|@
result int[-98841|0xfffffffffffe7de7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
rawvalue: -98841
stableDimension: 0
stamp: i32 [-98841]
stampKind: i32
value: int[-98841|0xfffffffffffe7de7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v387 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98841|0xfffffffffffe7de7], long[0|0x0]] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i625 
y: i115 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i625 y: i115  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v294 
=== Succesors ===
trueSuccessor: v391 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v294 #trueSuccessor: v391 #falseSuccessor: v392  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid i434 <|@
result int[-99865|0xfffffffffffe79e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
rawvalue: -99865
stableDimension: 0
stamp: i32 [-99865]
stampKind: i32
value: int[-99865|0xfffffffffffe79e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v391 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99865|0xfffffffffffe79e7], long[0|0x0]] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v397  <|@  <|@
f <@~|@floating>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i67 
y: i115 
=== Succesors ===
=== Usages ===
v397 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i67 y: i115  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v295 
=== Succesors ===
trueSuccessor: v395 
falseSuccessor: v396 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v295 #trueSuccessor: v395 #falseSuccessor: v396  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v35|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v435  <|@  <|@
f <@~|@floating>@ <|@
tid i436 <|@
result int[-100889|0xfffffffffffe75e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
rawvalue: -100889
stableDimension: 0
stamp: i32 [-100889]
stampKind: i32
value: int[-100889|0xfffffffffffe75e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v395 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100889|0xfffffffffffe75e7], long[0|0x0]] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j600 
=== Usages ===
=== Predecessor ===
v397 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j600  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j600 <|@
result v61|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
=== Inputs ===
object: a194 
=== Succesors ===
next: j602 
=== Usages ===
v669 
=== Predecessor ===
v396 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a194 #next: j602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j602 <|@
result v62|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
=== Inputs ===
object: a578 
=== Succesors ===
next: v605 
=== Usages ===
v670 
=== Predecessor ===
j600 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a578 #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid v669 <|@
result [v61|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j600 
index: - 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j600 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v670 <|@
result [v62|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j602 
index: - 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j602 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j604 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i115 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v669 v670 j604 
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
j602 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v669 v670 j604 #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
v605 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a120 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v118 
values: a210 a578 
=== Succesors ===
=== Usages ===
a319 a244 v457 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v118 values: a210 a578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v119 v121 
=== Succesors ===
next: v455 
=== Usages ===
a120 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v119 v121 #next: v455  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
precise: true
stamp: void
=== Inputs ===
address: v644 
value: - 
stateBefore: - 
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v644 value: - stateBefore: - #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid a244 <|@
result v67|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: Compress
stamp: n!# byte[]
=== Inputs ===
value: a120 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.value
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v644 
lastLocationAccess: - 
value: a244 
stateAfter: - 
=== Succesors ===
next: v457 
=== Usages ===
=== Predecessor ===
v455 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v644 lastLocationAccess: - value: a244 stateAfter: - #next: v457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
precise: false
stamp: void
=== Inputs ===
address: v644 
value: a120 
object: a168 
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v644 value: a120 object: a168 #next: v73  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: v65|QWORD, temp2: v66|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v64|QWORD[.]) {temp: v68|QWORD, temp2: v69|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a319 <|@
result v70|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v72 
values: a194 a120 
=== Succesors ===
=== Usages ===
v647 j611 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v72 values: a194 a120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v71 v73 
=== Succesors ===
next: v357 
=== Usages ===
a319 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v71 v73 #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid i290 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.isLatin1(AbstractStringBuilder.java:1693) [bci: 10]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1777) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v291 v292 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.isLatin1(AbstractStringBuilder.java:1693) [bci: 10]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1777) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i630 
y: i290 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i630 y: i290  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1777) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v291 
=== Succesors ===
trueSuccessor: v355 
falseSuccessor: v356 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v291 #trueSuccessor: v355 #falseSuccessor: v356  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v19|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1778) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.isLatin1(String.java:4821) [bci: 10]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1778) [bci: 8]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i627 
y: i290 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i627 y: i290  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1778) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v292 
=== Succesors ===
trueSuccessor: v359 
falseSuccessor: v360 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v292 #trueSuccessor: v359 #falseSuccessor: v360  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v365 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v365  <|@  <|@
f <@~|@floating>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 45]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i629 
y: i49 
=== Succesors ===
=== Usages ===
v365 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i629 y: i49  <|@  <|@
f <@*|@fixed>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v257 
=== Succesors ===
trueSuccessor: v363 
falseSuccessor: v364 
=== Usages ===
=== Predecessor ===
v359 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v257 #trueSuccessor: v363 #falseSuccessor: v364  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid i439 <|@
result int[-92697|0xfffffffffffe95e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: -92697
stableDimension: 0
stamp: i32 [-92697]
stampKind: i32
value: int[-92697|0xfffffffffffe95e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v363 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-92697|0xfffffffffffe95e7], long[0|0x0]] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i39 
y: i49 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i39 y: i49  <|@  <|@
f <@*|@fixed>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v259 
=== Succesors ===
trueSuccessor: v367 
falseSuccessor: v368 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v259 #trueSuccessor: v367 #falseSuccessor: v368  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid i450 <|@
result int[-93721|0xfffffffffffe91e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: -93721
stableDimension: 0
stamp: i32 [-93721]
stampKind: i32
value: int[-93721|0xfffffffffffe91e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v367 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-93721|0xfffffffffffe91e7], long[0|0x0]] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v373 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid i262 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 139]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i628 
y: i39 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i628 y: i39  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i262 
y: i622 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i262 y: i622  <|@  <|@
f <@*|@fixed>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v263 
=== Succesors ===
trueSuccessor: v371 
falseSuccessor: v372 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v263 #trueSuccessor: v371 #falseSuccessor: v372  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v15|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid i452 <|@
result int[-94745|0xfffffffffffe8de7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: -94745
stableDimension: 0
stamp: i32 [-94745]
stampKind: i32
value: int[-94745|0xfffffffffffe8de7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v371 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-94745|0xfffffffffffe8de7], long[0|0x0]] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i631 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i631  <|@  <|@
f <@~|@floating>@ <|@
tid v647 <|@
result [v70|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a319 
index: - 
=== Succesors ===
=== Usages ===
i631 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a319 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i631 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 175]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v647 
lastLocationAccess: - 
=== Succesors ===
next: v377 
=== Usages ===
i265 
=== Predecessor ===
v372 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v647 lastLocationAccess: - #next: v377  <|@  <|@
f <@~|@floating>@ <|@
tid i265 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32
=== Inputs ===
x: i631 
y: i39 
=== Succesors ===
=== Usages ===
v266 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i631 y: i39  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i265 
y: i629 
=== Succesors ===
=== Usages ===
v377 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i265 y: i629  <|@  <|@
f <@*|@fixed>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v266 
=== Succesors ===
trueSuccessor: v375 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
i631 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v266 #trueSuccessor: v375 #falseSuccessor: v376  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOV input: [v70|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v73|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid i454 <|@
result int[-95769|0xfffffffffffe89e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: -95769
stableDimension: 0
stamp: i32 [-95769]
stampKind: i32
value: int[-95769|0xfffffffffffe89e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v375 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-95769|0xfffffffffffe89e7], long[0|0x0]] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j606 
=== Usages ===
=== Predecessor ===
v377 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j606  <|@  <|@
f <@~|@floating>@ <|@
tid a251 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.value(String.java:4817) [bci: 1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a626 
=== Succesors ===
=== Usages ===
j606 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j606 <|@
result v75|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
=== Inputs ===
object: a251 
=== Succesors ===
next: j611 
=== Usages ===
v671 
=== Predecessor ===
v376 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a251 #next: j611  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j611 <|@
result v76|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64
=== Inputs ===
object: a319 
=== Succesors ===
next: v617 
=== Usages ===
v672 
=== Predecessor ===
j606 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a319 #next: v617  <|@  <|@
f <@~|@floating>@ <|@
tid j607 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i622 
=== Succesors ===
=== Usages ===
v671 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i622  <|@  <|@
f <@~|@floating>@ <|@
tid v671 <|@
result [v75|QWORD[*] + v5|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j606 
index: j607 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j606 index: j607  <|@  <|@
f <@~|@floating>@ <|@
tid j612 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i629 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i629  <|@  <|@
f <@~|@floating>@ <|@
tid v672 <|@
result [v76|QWORD[*] + v18|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j611 
index: j612 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j611 index: j612  <|@  <|@
f <@~|@floating>@ <|@
tid j616 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i39 
=== Succesors ===
=== Usages ===
v617 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i39  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v671 v672 j616 
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
j611 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v671 v672 j616 #next: v280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1802) [bci: 203]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v643 
lastLocationAccess: - 
value: i141 
stateAfter: - 
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v643 lastLocationAccess: - value: i141 stateAfter: - #next: v20  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
v280 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v75|QWORD[*] + v5|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v76|QWORD[*] + v18|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1778) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid j448 <|@
result long[5140|0x1414] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: 5140
stableDimension: 0
stamp: i64 [5140]
stampKind: i64
value: long[5140|0x1414]
=== Inputs ===
=== Succesors ===
=== Usages ===
j441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i447 <|@
result int[-91667|0xfffffffffffe99ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: -91667
stableDimension: 0
stamp: i32 [-91667]
stampKind: i32
value: int[-91667|0xfffffffffffe99ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v360 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-91667|0xfffffffffffe99ed], long[5140|0x1414]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1777) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v443 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v443  <|@  <|@
f <@~|@floating>@ <|@
tid j445 <|@
result long[4500|0x1194] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: 4500
stableDimension: 0
stamp: i64 [4500]
stampKind: i64
value: long[4500|0x1194]
=== Inputs ===
=== Succesors ===
=== Usages ===
j441 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i444 <|@
result int[-90643|0xfffffffffffe9ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
rawvalue: -90643
stableDimension: 0
stamp: i32 [-90643]
stampKind: i32
value: int[-90643|0xfffffffffffe9ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v356 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-90643|0xfffffffffffe9ded], long[4500|0x1194]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i440 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i32 [-95769 - -90643] bits:1...10100xxx011110x1x1
valueDescription: i32
=== Inputs ===
merge: v437 
values: i439 i444 i447 i450 i452 i454 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v437 values: i439 i444 i447 i450 i452 i454  <|@  <|@
f <@~|@floating>@ <|@
tid j441 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: i64 [0 - 5140] bits:0...0x0x0xx00x0x00
valueDescription: i64
=== Inputs ===
merge: v437 
values: j406 j445 j448 j406 j406 j406 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v437 values: j406 j445 j448 j406 j406 j406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v438 v443 v446 v449 v451 v453 
=== Succesors ===
next: v442 
=== Usages ===
i440 j441 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v438 v443 v446 v449 v451 v453 #next: v442  <|@  <|@
tid ?153 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Formatter, Object, Locale)>
localsSize: 4
locksSize: 0
sourceFile: Formatter.java
sourceLine: 2876
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?35 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?35 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence, int, int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?153 
values: a168 a172 i622 i621 
=== Succesors ===
=== Usages ===
?152 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?153 values: a168 a172 i622 i621  <|@  <|@
tid ?152 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence, int, int)>
localsSize: 4
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 218
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?35 
values: a168 
=== Succesors ===
=== Usages ===
?122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?35 values: a168  <|@  <|@
tid ?122 <|@
d <@d|@=== Debug Properties ===
bci: 35
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence, int, int)>
localsSize: 5
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 686
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?152 
values: a168 a172 i622 i621 
=== Succesors ===
=== Usages ===
?74 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?152 values: a168 a172 i622 i621  <|@  <|@
tid ?74 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: return
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 245
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?122 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?122  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.appendChars(AbstractStringBuilder.java:1779) [bci: 30]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:688) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
stateBefore: ?74 
actionAndReason: i440 
speculation: j441 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?74 actionAndReason: i440 speculation: j441  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: v10|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid j430 <|@
result long[3860|0xf14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
rawvalue: 3860
stableDimension: 0
stamp: i64 [3860]
stampKind: i64
value: long[3860|0xf14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i429 <|@
result int[-97811|0xfffffffffffe81ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
rawvalue: -97811
stableDimension: 0
stamp: i32 [-97811]
stampKind: i32
value: int[-97811|0xfffffffffffe81ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v384 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-97811|0xfffffffffffe81ed], long[3860|0xf14]] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a155 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a155  <|@  <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
referencedType: [null]
returnStamp: a# java.io.PrintStream
signature: [HotSpotType<Ljava/io/PrintStream;, resolved>, UnresolvedJavaType<Ljava/lang/CharSequence;>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<PrintStream.append(CharSequence, int, int)>
=== Inputs ===
arguments: a168 a172 i622 i621 
=== Succesors ===
=== Usages ===
a155 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a168 a172 i622 i621  <|@  <|@
tid ?158 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FixedString.print(Formatter, Object, Locale)>
localsSize: 4
locksSize: 0
sourceFile: Formatter.java
sourceLine: 2876
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?402 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?402 <|@
d <@d|@=== Debug Properties ===
bci: 4
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence, int, int)>
localsSize: 4
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 67
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?158 
=== Succesors ===
=== Usages ===
a155 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a155 <|@
result v80|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 4
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
polymorphic: false
stamp: a# java.io.PrintStream
targetMethod: Direct#PrintStream.append
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v281 
stateDuring: ?402 
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v281 stateDuring: ?402 #next: v25  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
a155 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v20 v25 
=== Succesors ===
next: v13 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v20 v25 #next: v13  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 22]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid j169 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 5]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i415 <|@
result int[-6707|0xffffffffffffe5cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
rawvalue: -6707
stableDimension: 0
stamp: i32 [-6707]
stampKind: i32
value: int[-6707|0xffffffffffffe5cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i407 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
v27 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-6707|0xffffffffffffe5cd], long[20|0x14]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i407 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: i32 [-100889 - -6707] bits:1...1xxxxxxx0111x0x1x1
valueDescription: i32
=== Inputs ===
merge: v403 
values: i415 i422 i425 i427 i429 i432 i434 i436 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v403 values: i415 i422 i425 i427 i429 i432 i434 i436  <|@  <|@
f <@~|@floating>@ <|@
tid j408 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: i64 [0 - 3860] bits:0...0xxxx000x0x00
valueDescription: i64
=== Inputs ===
merge: v403 
values: j169 j423 j423 j423 j430 j406 j406 j406 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v403 values: j169 j423 j423 j423 j430 j406 j406 j406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v414 v421 v424 v426 v428 v431 v433 v435 
=== Succesors ===
next: v409 
=== Usages ===
i407 j408 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v414 v421 v424 v426 v428 v431 v433 v435 #next: v409  <|@  <|@
f <@*|@fixed>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i407 
speculation: j408 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i407 speculation: j408  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD, v82|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v13|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSXB input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v15|DWORD = MOV input: [v13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVSXB value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHR (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v4|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v20|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVSXB value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SHR (x: v12|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SUB (x: v21|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD[.]] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v19|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v15|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOV input: [v70|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v73|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v75|QWORD[*] + v5|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v76|QWORD[*] + v18|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SUB (x: v26|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v28|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = CMOVE (falseValue: v27|DWORD, ~trueValue: v30|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SAR (x: v32|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SHL (x: v34|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v35|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA address: [v49|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = AND x: v50|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = ADD (x: v51|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v48|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v48|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + 12], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA address: [v51|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v54|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|QWORD, y: v55|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v48|QWORD + v55|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA address: [v55|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|QWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v35|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v35|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: v65|QWORD, temp2: v66|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v64|QWORD[.]) {temp: v68|QWORD, temp2: v69|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v48|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA address: [v38|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = AND x: v39|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = ADD (x: v40|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v36|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|QWORD[.]] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100889|0xfffffffffffe75e7], long[0|0x0]] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99865|0xfffffffffffe79e7], long[0|0x0]] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98841|0xfffffffffffe7de7], long[0|0x0]] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-95769|0xfffffffffffe89e7], long[0|0x0]] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-87571|0xfffffffffffea9ed], long[2580|0xa14]] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-97811|0xfffffffffffe81ed], long[3860|0xf14]] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-91667|0xfffffffffffe99ed], long[5140|0x1414]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-93721|0xfffffffffffe91e7], long[0|0x0]] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-92697|0xfffffffffffe95e7], long[0|0x0]] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-90643|0xfffffffffffe9ded], long[4500|0x1194]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-88595|0xfffffffffffea5ed], long[2580|0xa14]] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-94745|0xfffffffffffe8de7], long[0|0x0]] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: v10|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-89619|0xfffffffffffea1ed], long[2580|0xa14]] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-6707|0xffffffffffffe5cd], long[20|0x14]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD, v82|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v13|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSXB input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v15|DWORD = MOV input: [v13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVSXB value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHR (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v4|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v20|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVSXB value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SHR (x: v12|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SUB (x: v21|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD[.]] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v19|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v15|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOV input: [v70|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v73|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v75|QWORD[*] + v5|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v76|QWORD[*] + v18|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SUB (x: v26|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v28|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = CMOVE (falseValue: v27|DWORD, ~trueValue: v30|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SAR (x: v32|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SHL (x: v34|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v35|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA address: [v49|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = AND x: v50|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = ADD (x: v51|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v48|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v48|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + 12], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA address: [v51|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v54|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|QWORD, y: v55|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v48|QWORD + v55|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA address: [v55|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|QWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v35|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v35|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: v65|QWORD, temp2: v66|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v64|QWORD[.]) {temp: v68|QWORD, temp2: v69|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v83|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v48|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA address: [v38|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = AND x: v39|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = ADD (x: v40|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v84|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|QWORD[.]] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100889|0xfffffffffffe75e7], long[0|0x0]] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99865|0xfffffffffffe79e7], long[0|0x0]] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98841|0xfffffffffffe7de7], long[0|0x0]] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-95769|0xfffffffffffe89e7], long[0|0x0]] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-87571|0xfffffffffffea9ed], long[2580|0xa14]] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-97811|0xfffffffffffe81ed], long[3860|0xf14]] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-91667|0xfffffffffffe99ed], long[5140|0x1414]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-93721|0xfffffffffffe91e7], long[0|0x0]] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-92697|0xfffffffffffe95e7], long[0|0x0]] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-90643|0xfffffffffffe9ded], long[4500|0x1194]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-88595|0xfffffffffffea5ed], long[2580|0xa14]] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-94745|0xfffffffffffe8de7], long[0|0x0]] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: v10|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-89619|0xfffffffffffea1ed], long[2580|0xa14]] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-6707|0xffffffffffffe5cd], long[20|0x14]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD, v82|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v13|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSXB input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v15|DWORD = MOV input: [v13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVSXB value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHR (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v4|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v20|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVSXB value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SHR (x: v12|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SUB (x: v21|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD[.]] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v19|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v15|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOV input: [v70|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v73|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v75|QWORD[*] + v5|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v76|QWORD[*] + v18|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SUB (x: v26|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v28|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = CMOVE (falseValue: v27|DWORD, ~trueValue: v30|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SAR (x: v32|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SHL (x: v34|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v35|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA address: [v49|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = AND x: v50|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = ADD (x: v51|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v48|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v48|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + 12], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA address: [v51|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v54|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|QWORD, y: v55|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v48|QWORD + v55|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA address: [v55|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|QWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v35|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v35|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: v65|QWORD, temp2: v66|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v64|QWORD[.]) {temp: v68|QWORD, temp2: v69|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v83|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v48|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA address: [v38|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = AND x: v39|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = ADD (x: v40|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v84|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|QWORD[.]] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100889|0xfffffffffffe75e7], long[0|0x0]] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99865|0xfffffffffffe79e7], long[0|0x0]] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98841|0xfffffffffffe7de7], long[0|0x0]] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-95769|0xfffffffffffe89e7], long[0|0x0]] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-87571|0xfffffffffffea9ed], long[2580|0xa14]] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-97811|0xfffffffffffe81ed], long[3860|0xf14]] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-91667|0xfffffffffffe99ed], long[5140|0x1414]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-93721|0xfffffffffffe91e7], long[0|0x0]] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-92697|0xfffffffffffe95e7], long[0|0x0]] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-90643|0xfffffffffffe9ded], long[4500|0x1194]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-88595|0xfffffffffffea5ed], long[2580|0xa14]] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-94745|0xfffffffffffe8de7], long[0|0x0]] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: v10|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-89619|0xfffffffffffea1ed], long[2580|0xa14]] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-6707|0xffffffffffffe5cd], long[20|0x14]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD, v82|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v13|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSXB input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v15|DWORD = MOV input: [v13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVSXB value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHR (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v4|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v20|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVSXB value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SHR (x: v12|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SUB (x: v21|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD[.]] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v19|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v15|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOV input: [v70|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v73|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v75|QWORD[*] + v5|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v76|QWORD[*] + v18|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SUB (x: v26|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v28|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = CMOVE (falseValue: v27|DWORD, ~trueValue: v30|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SAR (x: v32|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SHL (x: v34|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v35|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA address: [v49|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = AND x: v50|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = ADD (x: v51|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v48|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v48|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + 12], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA address: [v51|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v54|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|QWORD, y: v55|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v48|QWORD + v55|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA address: [v55|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|QWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v35|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v35|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: v65|QWORD, temp2: v66|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v64|QWORD[.]) {temp: v68|QWORD, temp2: v69|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v83|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v48|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA address: [v38|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = AND x: v39|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = ADD (x: v40|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v84|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|QWORD[.]] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100889|0xfffffffffffe75e7], long[0|0x0]] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99865|0xfffffffffffe79e7], long[0|0x0]] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98841|0xfffffffffffe7de7], long[0|0x0]] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-95769|0xfffffffffffe89e7], long[0|0x0]] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-87571|0xfffffffffffea9ed], long[2580|0xa14]] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-97811|0xfffffffffffe81ed], long[3860|0xf14]] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-91667|0xfffffffffffe99ed], long[5140|0x1414]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-93721|0xfffffffffffe91e7], long[0|0x0]] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-92697|0xfffffffffffe95e7], long[0|0x0]] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-90643|0xfffffffffffe9ded], long[4500|0x1194]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-88595|0xfffffffffffea5ed], long[2580|0xa14]] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-94745|0xfffffffffffe8de7], long[0|0x0]] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: v10|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-89619|0xfffffffffffea1ed], long[2580|0xa14]] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-6707|0xffffffffffffe5cd], long[20|0x14]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD, v82|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v13|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVSXB input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v15|DWORD = MOV input: [v13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVSXB value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHR (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v4|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = ADD (x: v20|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVSXB value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SHR (x: v12|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SUB (x: v21|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v25|QWORD[.]] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v19|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = SUB (x: v15|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOV input: [v70|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v73|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[*] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[*] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v75|QWORD[*] + v5|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v76|QWORD[*] + v18|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SUB (x: v26|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = ADD (x: v28|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = CMOVE (falseValue: v27|DWORD, ~trueValue: v30|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = SAR (x: v32|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = SHL (x: v34|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v35|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA address: [v49|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = AND x: v50|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = ADD (x: v51|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v48|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v48|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + 12], y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA address: [v51|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v54|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v51|QWORD, y: v55|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v48|QWORD + v55|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA address: [v55|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v56|QWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v58|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v35|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v35|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v59|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: v65|QWORD, temp2: v66|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr   -1  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v64|QWORD[.]) {temp: v68|QWORD, temp2: v69|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v64|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v83|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v48|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA address: [v38|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = AND x: v39|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = ADD (x: v40|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v84|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|QWORD[.]] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-100889|0xfffffffffffe75e7], long[0|0x0]] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-99865|0xfffffffffffe79e7], long[0|0x0]] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98841|0xfffffffffffe7de7], long[0|0x0]] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-95769|0xfffffffffffe89e7], long[0|0x0]] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-87571|0xfffffffffffea9ed], long[2580|0xa14]] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-97811|0xfffffffffffe81ed], long[3860|0xf14]] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-91667|0xfffffffffffe99ed], long[5140|0x1414]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-93721|0xfffffffffffe91e7], long[0|0x0]] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-92697|0xfffffffffffe95e7], long[0|0x0]] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-90643|0xfffffffffffe9ded], long[4500|0x1194]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-88595|0xfffffffffffea5ed], long[2580|0xa14]] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-94745|0xfffffffffffe8de7], long[0|0x0]] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: v10|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-89619|0xfffffffffffea1ed], long[2580|0xa14]] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-6707|0xffffffffffffe5cd], long[20|0x14]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD, v82|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v81|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   70  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   72  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   76  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   78  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v13|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction v14|DWORD = MOVSXB input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v15|DWORD = MOV input: [v13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  112  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction v16|DWORD = MOVSXB value: v14|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction rcx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction v17|DWORD = SHR (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v18|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  182  <|@ instruction v19|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  184  <|@ instruction v20|DWORD = SUB (x: v4|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction v21|DWORD = ADD (x: v20|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction v22|DWORD = MOVSXB value: v19|DWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction v23|DWORD = SHR (x: v12|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction v24|DWORD = SUB (x: v21|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [v25|QWORD[.]] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  210  <|@ instruction [v70|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction TESTBYTEBRANCH (x: v19|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction TESTBYTEBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction v71|DWORD = SUB (x: v15|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction v72|DWORD = MOV input: [v70|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  290  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v73|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction v75|QWORD[*] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction v76|QWORD[*] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction v77|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = LEA address: [v75|QWORD[*] + v5|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = LEA address: [v76|QWORD[*] + v18|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  348  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction v26|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction v27|DWORD = SUB (x: v26|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction v29|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  410  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction v28|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  414  <|@ instruction v30|DWORD = ADD (x: v28|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction CMP (x: v30|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction v31|DWORD = CMOVE (falseValue: v27|DWORD, ~trueValue: v30|DWORD) condition: > <|@ <|@
      nr  420  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction v33|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction v34|DWORD = SAR (x: v32|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction v35|DWORD = SHL (x: v34|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v35|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v48|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  482  <|@ instruction v49|QWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction v50|QWORD = LEA address: [v49|QWORD + 23] size: QWORD <|@ <|@
      nr  486  <|@ instruction v51|QWORD = AND x: v50|QWORD y: -8 size: QWORD <|@ <|@
      nr  488  <|@ instruction v52|QWORD = ADD (x: v51|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  526  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  528  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  530  <|@ instruction MOV x: [v48|QWORD] y: 1 size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV x: [v48|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  534  <|@ instruction MOV (x: [v48|QWORD + 12], y: v35|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction v54|QWORD = LEA address: [v51|QWORD - 16] size: QWORD <|@ <|@
      nr  538  <|@ instruction CMPCONSTBRANCH x: v54|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr  550  <|@ instruction [v55|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction CMPBRANCH (x: v51|QWORD, y: v55|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction MOV x: [v48|QWORD + v55|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  580  <|@ instruction v56|QWORD = LEA address: [v55|QWORD + 8] size: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~outgoingValues: [v56|QWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction v58|QWORD[.] = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [v58|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  608  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction CMP (x: v12|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction v60|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v35|DWORD) condition: > <|@ <|@
      nr  626  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v35|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v61|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction v62|QWORD[*] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction v63|QWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  694  <|@ instruction rdx|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [v59|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  700  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: v65|QWORD, temp2: v66|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr  816  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  818  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr  820  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v64|QWORD[.]) {temp: v68|QWORD, temp2: v69|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [v64|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction r8|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr  858  <|@ instruction v80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  864  <|@ instruction v83|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction rsi|QWORD = MOVE input: v83|QWORD moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  890  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:0] <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction rcx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction ZERO_MEMORY (pointer: [v48|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  948  <|@ instruction v38|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction v39|QWORD = LEA address: [v38|QWORD + 23] size: QWORD <|@ <|@
      nr  952  <|@ instruction v40|QWORD = AND x: v39|QWORD y: -8 size: QWORD <|@ <|@
      nr  954  <|@ instruction v41|QWORD = ADD (x: v40|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr  956  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction MOV (x: [r15|QWORD + 440], y: v41|QWORD) size: QWORD <|@ <|@
      nr  984  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  986  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  988  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  990  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr  992  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  994  <|@ instruction MOV (x: [v37|QWORD + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr  996  <|@ instruction v44|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr 1000  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction v46|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction v47|QWORD[*] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1034  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr 1040  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1042  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction v84|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD = MOVE input: v84|QWORD moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1072  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:0] <|@ <|@
      nr 1076  <|@ instruction JUMP ~outgoingValues: [v42|QWORD[.]] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction JUMP ~outgoingValues: [int[-100889|0xfffffffffffe75e7], long[0|0x0]] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction JUMP ~outgoingValues: [int[-99865|0xfffffffffffe79e7], long[0|0x0]] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction JUMP ~outgoingValues: [int[-98841|0xfffffffffffe7de7], long[0|0x0]] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction JUMP ~outgoingValues: [int[-95769|0xfffffffffffe89e7], long[0|0x0]] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [int[-87571|0xfffffffffffea9ed], long[2580|0xa14]] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction JUMP ~outgoingValues: [int[-97811|0xfffffffffffe81ed], long[3860|0xf14]] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [int[-91667|0xfffffffffffe99ed], long[5140|0x1414]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [int[-93721|0xfffffffffffe91e7], long[0|0x0]] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [int[-92697|0xfffffffffffe95e7], long[0|0x0]] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [int[-90643|0xfffffffffffe9ded], long[4500|0x1194]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [int[-88595|0xfffffffffffea5ed], long[2580|0xa14]] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction JUMP ~outgoingValues: [int[-94745|0xfffffffffffe8de7], long[0|0x0]] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1198  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr 1216  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr 1218  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: v10|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction JUMP ~outgoingValues: [int[-89619|0xfffffffffffea1ed], long[2580|0xa14]] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction JUMP ~outgoingValues: [int[-6707|0xffffffffffffe5cd], long[20|0x14]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1240  <|@ instruction [v81|DWORD, v82|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v81|DWORD) size: DWORD <|@ <|@
      nr 1258  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v82|QWORD) size: QWORD <|@ <|@
      nr 1260  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   70  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   72  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   76  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   78  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v13|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction v14|DWORD = MOVSXB input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v15|DWORD = MOV input: [v13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  112  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction v16|DWORD = MOVSXB value: v14|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction rcx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction v17|DWORD = SHR (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v18|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  182  <|@ instruction v19|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  184  <|@ instruction v20|DWORD = SUB (x: v4|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction v21|DWORD = ADD (x: v20|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction v22|DWORD = MOVSXB value: v19|DWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction v23|DWORD = SHR (x: v12|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction v24|DWORD = SUB (x: v21|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [v25|QWORD[.]] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  210  <|@ instruction [v70|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction TESTBYTEBRANCH (x: v19|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction TESTBYTEBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction v71|DWORD = SUB (x: v15|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction v72|DWORD = MOV input: [v70|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  290  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v73|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction v75|QWORD[*] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction v76|QWORD[*] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction v77|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = LEA address: [v75|QWORD[*] + v5|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = LEA address: [v76|QWORD[*] + v18|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  348  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction v26|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction v27|DWORD = SUB (x: v26|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction v29|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  410  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction v28|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  414  <|@ instruction v30|DWORD = ADD (x: v28|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction CMP (x: v30|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction v31|DWORD = CMOVE (falseValue: v27|DWORD, ~trueValue: v30|DWORD) condition: > <|@ <|@
      nr  420  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction v33|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction v34|DWORD = SAR (x: v32|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction v35|DWORD = SHL (x: v34|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v35|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v48|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  482  <|@ instruction v49|QWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction v50|QWORD = LEA address: [v49|QWORD + 23] size: QWORD <|@ <|@
      nr  486  <|@ instruction v51|QWORD = AND x: v50|QWORD y: -8 size: QWORD <|@ <|@
      nr  488  <|@ instruction v52|QWORD = ADD (x: v51|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  526  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  528  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  530  <|@ instruction MOV x: [v48|QWORD] y: 1 size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV x: [v48|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  534  <|@ instruction MOV (x: [v48|QWORD + 12], y: v35|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction v54|QWORD = LEA address: [v51|QWORD - 16] size: QWORD <|@ <|@
      nr  538  <|@ instruction CMPCONSTBRANCH x: v54|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr  550  <|@ instruction [v55|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction CMPBRANCH (x: v51|QWORD, y: v55|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction MOV x: [v48|QWORD + v55|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  580  <|@ instruction v56|QWORD = LEA address: [v55|QWORD + 8] size: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~outgoingValues: [v56|QWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction v58|QWORD[.] = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [v58|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  608  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction CMP (x: v12|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction v60|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v35|DWORD) condition: > <|@ <|@
      nr  626  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v35|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v61|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction v62|QWORD[*] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction v63|QWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  694  <|@ instruction rdx|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [v59|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  700  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: v65|QWORD, temp2: v66|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr  816  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  818  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr  820  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v64|QWORD[.]) {temp: v68|QWORD, temp2: v69|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [v64|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction r8|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr  858  <|@ instruction v80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  864  <|@ instruction v83|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction rsi|QWORD = MOVE input: v83|QWORD moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  890  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:0] <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction rcx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction ZERO_MEMORY (pointer: [v48|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  948  <|@ instruction v38|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction v39|QWORD = LEA address: [v38|QWORD + 23] size: QWORD <|@ <|@
      nr  952  <|@ instruction v40|QWORD = AND x: v39|QWORD y: -8 size: QWORD <|@ <|@
      nr  954  <|@ instruction v41|QWORD = ADD (x: v40|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr  956  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction MOV (x: [r15|QWORD + 440], y: v41|QWORD) size: QWORD <|@ <|@
      nr  984  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  986  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  988  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  990  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr  992  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  994  <|@ instruction MOV (x: [v37|QWORD + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr  996  <|@ instruction v44|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr 1000  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction v46|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction v47|QWORD[*] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1034  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr 1040  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1042  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction v84|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD = MOVE input: v84|QWORD moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1072  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:0] <|@ <|@
      nr 1076  <|@ instruction JUMP ~outgoingValues: [v42|QWORD[.]] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction JUMP ~outgoingValues: [int[-100889|0xfffffffffffe75e7], long[0|0x0]] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction JUMP ~outgoingValues: [int[-99865|0xfffffffffffe79e7], long[0|0x0]] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction JUMP ~outgoingValues: [int[-98841|0xfffffffffffe7de7], long[0|0x0]] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction JUMP ~outgoingValues: [int[-95769|0xfffffffffffe89e7], long[0|0x0]] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [int[-87571|0xfffffffffffea9ed], long[2580|0xa14]] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction JUMP ~outgoingValues: [int[-97811|0xfffffffffffe81ed], long[3860|0xf14]] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [int[-91667|0xfffffffffffe99ed], long[5140|0x1414]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [int[-93721|0xfffffffffffe91e7], long[0|0x0]] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [int[-92697|0xfffffffffffe95e7], long[0|0x0]] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [int[-90643|0xfffffffffffe9ded], long[4500|0x1194]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [int[-88595|0xfffffffffffea5ed], long[2580|0xa14]] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction JUMP ~outgoingValues: [int[-94745|0xfffffffffffe8de7], long[0|0x0]] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1198  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr 1216  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr 1218  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: v10|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction JUMP ~outgoingValues: [int[-89619|0xfffffffffffea1ed], long[2580|0xa14]] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction JUMP ~outgoingValues: [int[-6707|0xffffffffffffe5cd], long[20|0x14]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1240  <|@ instruction [v81|DWORD, v82|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v81|DWORD) size: DWORD <|@ <|@
      nr 1258  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v82|QWORD) size: QWORD <|@ <|@
      nr 1260  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[346, 347[[696, 697[[856, 858[[888, 890[[918, 919[[1040, 1041[[1070, 1072[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v16|d [0, 1[[144, 147[[190, 193[[346, 347[[402, 405[[410, 413[[446, 449[[450, 453[[696, 697[[852, 857[[916, 919[[1040, 1041[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v77|q [0, 60[[344, 347[[694, 697[[850, 857[[886, 888[[1038, 1041[[1068, 1070[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 54[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v10|q [0, 58[[342, 347[[692, 697[[848, 857[[884, 888[[1036, 1041[[1066, 1070[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[340, 347[[690, 697[[856, 857[[918, 919[[1034, 1041[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v4|d [0, 1[[346, 347[[696, 697[[854, 857[[1040, 1041[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [58, 200[[370, 652[[862, 958[[1044, 1075[[1078, 1108[[1118, 1138[[1178, 1188[[1220, 1261[58 MustHaveRegister 66 MustHaveRegister 68 MustHaveRegister 70 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|d [60, 200[[370, 652[[862, 958[[1044, 1075[[1078, 1108[[1118, 1138[[1178, 1188[[1220, 1261[60 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [62, 348[[370, 824[[862, 1078[62 MustHaveRegister 64 MustHaveRegister 78 MustHaveRegister 102 MustHaveRegister 180 MustHaveRegister 182 MustHaveRegister 348 MustHaveRegister 814 MustHaveRegister 818 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [64, 76[64 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [66, 294[[370, 854[[862, 1078[[1108, 1118[[1138, 1178[[1188, 1219[66 MustHaveRegister 124 ShouldHaveRegister 148 MustHaveRegister 184 MustHaveRegister 854 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [68, 340[[370, 852[[862, 1078[[1108, 1118[[1138, 1178[[1188, 1219[68 MustHaveRegister 112 MustHaveRegister 124 MustHaveRegister 184 ShouldHaveRegister 272 MustHaveRegister 340 MustHaveRegister 852 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [70, 108[70 MustHaveRegister 72 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v6|d [72, 294[[370, 850[[862, 1078[[1108, 1118[[1138, 1178[[1188, 1219[72 MustHaveRegister 850 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v3|d [76, 81[76 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [74, 77[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v2|d [78, 294[[370, 848[[862, 1078[[1108, 1118[[1138, 1178[[1188, 1219[78 MustHaveRegister 820 MustHaveRegister 848 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [102, 196[102 MustHaveRegister 104 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [104, 200[[370, 638[[862, 994[[1044, 1068[104 MustHaveRegister 192 ShouldHaveRegister 406 ShouldHaveRegister 414 ShouldHaveRegister 420 ShouldHaveRegister 454 MustHaveRegister 622 MustHaveRegister 624 ShouldHaveRegister 638 ShouldHaveRegister 948 ShouldHaveRegister 994 MustHaveRegister 1068 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [106, 332[[370, 824[[862, 1078[106 MustHaveRegister 110 MustHaveRegister 332 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [108, 232[[370, 824[[862, 1078[108 MustHaveRegister 142 ShouldHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d -1 [110, 270[[370, 824[[862, 1078[110 MustHaveRegister 146 ShouldHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [142, 144[142 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d v15|d [146, 148[146 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d -1 [180, 342[[370, 824[[862, 1078[180 MustHaveRegister 186 ShouldHaveRegister 244 MustHaveRegister 292 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d -1 [182, 220[[370, 824[[862, 1078[182 MustHaveRegister 188 ShouldHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d v4|d [184, 338[[370, 824[[862, 1078[184 MustHaveRegister 186 ShouldHaveRegister 256 MustHaveRegister 270 ShouldHaveRegister 290 ShouldHaveRegister 338 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d v20|d [186, 348[[370, 824[[862, 1078[186 MustHaveRegister 194 MustHaveRegister 348 MustHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [188, 200[[370, 450[188 MustHaveRegister 190 ShouldHaveRegister 402 ShouldHaveRegister 410 ShouldHaveRegister 446 ShouldHaveRegister 450 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v12|d [192, 195[192 MustHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v21|d [194, 198[194 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q v11|d [196, 209[[370, 684[[862, 1030[[1044, 1078[196 MustHaveRegister 208 ShouldHaveRegister 684 ShouldHaveRegister 1030 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d v21|d [404, 406[404 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d v26|d [406, 418[406 MustHaveRegister 416 ShouldHaveRegister 418 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v29|d [412, 414[412 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d -1 [408, 412[408 MustHaveRegister 412 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d v28|d [414, 419[414 MustHaveRegister 416 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d v27|d [418, 420[418 MustHaveRegister 420 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d v31|d [420, 448[420 MustHaveRegister 422 ShouldHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d v32|d [422, 424[422 MustHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d v32|d [448, 452[448 MustHaveRegister 452 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d v34|d [452, 650[[862, 922[452 MustHaveRegister 454 ShouldHaveRegister 482 ShouldHaveRegister 534 MustHaveRegister 622 ShouldHaveRegister 624 MustHaveRegister 650 ShouldHaveRegister 886 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q -1 [946, 996[946 MustHaveRegister 954 ShouldHaveRegister 984 MustHaveRegister 986 MustHaveRegister 988 MustHaveRegister 990 MustHaveRegister 992 MustHaveRegister 994 MustHaveRegister 996 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q v12|d [948, 1038[[1044, 1078[948 MustHaveRegister 950 MustHaveRegister 1038 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q -1 [950, 952[950 MustHaveRegister 952 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v39|q [952, 989[952 MustHaveRegister 954 ShouldHaveRegister 984 MustHaveRegister 986 MustHaveRegister 988 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q v40|q [954, 982[954 MustHaveRegister 956 MustHaveRegister 982 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q rax|q [1072, 1077[1072 MustHaveRegister 1074 MustHaveRegister 1076 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v37|q [996, 999[996 MustHaveRegister 998 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q v44|q [1000, 1043[1032 ShouldHaveRegister 1042 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q v25|q [1030, 1034[1030 MustHaveRegister 1034 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q v45|q [1032, 1036[1032 MustHaveRegister 1036 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q -1 [480, 604[[896, 922[480 MustHaveRegister 488 ShouldHaveRegister 524 MustHaveRegister 526 MustHaveRegister 528 MustHaveRegister 530 MustHaveRegister 532 MustHaveRegister 534 MustHaveRegister 578 MustHaveRegister 583 LiveAtLoopEnd 604 ShouldHaveRegister 918 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q v35|d [482, 484[482 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q -1 [484, 486[484 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q v50|q [486, 584[486 MustHaveRegister 488 ShouldHaveRegister 524 MustHaveRegister 526 MustHaveRegister 528 MustHaveRegister 536 MustHaveRegister 560 MustHaveRegister 583 LiveAtLoopEnd  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q v51|q [488, 522[488 MustHaveRegister 490 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q rax|q [890, 895[890 MustHaveRegister 892 MustHaveRegister 894 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q -1 [536, 540[[896, 916[536 MustHaveRegister 538 ShouldHaveRegister 916 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q v56|q [550, 580[560 ShouldHaveRegister 578 MustHaveRegister 580 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q v55|q [580, 583[580 MustHaveRegister 582 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q v48|q [604, 607[604 MustHaveRegister 606 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q v58|q [608, 699[686 ShouldHaveRegister 698 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[v60|d]" v60|d v12|d [624, 688[624 MustHaveRegister 626 MustHaveRegister 638 MustHaveRegister 650 MustHaveRegister 688 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q v25|q [684, 690[684 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q v59|q [686, 692[686 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q v60|d [688, 694[688 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q v59|q [700, 823[816 MustHaveRegister 820 MustHaveRegister 822 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q -1 [814, 815[814 MustHaveRegister  "NoDefinitionFound"
  v66|q QWORD "[v66|q]" v66|q -1 [814, 815[814 MustHaveRegister  "NoDefinitionFound"
  v67|d DWORD "[v67|d]" v67|d v64|q [816, 818[816 MustHaveRegister 818 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[v68|q]" v68|q -1 [820, 821[820 MustHaveRegister  "NoDefinitionFound"
  v69|q QWORD "[v69|q]" v69|q -1 [820, 821[820 MustHaveRegister  "NoDefinitionFound"
  v70|q QWORD "[v70|q]" v70|q v25|q [210, 336[288 MustHaveRegister 336 ShouldHaveRegister  "NoSpillStore"
  v71|d DWORD "[v71|d]" v71|d v15|d [270, 272[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v72|d DWORD "[v72|d]" v72|d -1 [288, 290[288 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[v73|d]" v73|d v72|d [290, 292[290 MustHaveRegister 292 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[v74|q]" v74|q v13|d [332, 334[332 MustHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v75|q QWORD "[v75|q]" v75|q v74|q [334, 340[334 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[v76|q]" v76|q v70|q [336, 342[336 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[v77|q]" v77|q v20|d [338, 344[338 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[v78|d]" v78|d -1 [1198, 1214[1214 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[v79|q]" v79|q -1 [1198, 1216[1216 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[v80|q]" v80|q rax|q [858, 859[858 MustHaveRegister  "NoSpillStore"
  v81|d DWORD "[v81|d]" v81|d -1 [1240, 1256[1256 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[v82|q]" v82|q -1 [1240, 1258[1258 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[v83|q]" v83|q -1 [864, 884[864 MustHaveRegister 884 ShouldHaveRegister  "NoSpillStore"
  v84|q QWORD "[v84|q]" v84|q -1 [1046, 1066[1046 MustHaveRegister 1066 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[346, 347[[696, 697[[856, 858[[888, 890[[918, 919[[1040, 1041[[1070, 1072[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v16|d [0, 1[[144, 147[[190, 193[[346, 347[[402, 405[[410, 413[[446, 449[[450, 453[[696, 697[[852, 857[[916, 919[[1040, 1041[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v77|q [0, 60[[344, 347[[694, 697[[850, 857[[886, 888[[1038, 1041[[1068, 1070[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 54[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v10|q [0, 58[[342, 347[[692, 697[[848, 857[[884, 888[[1036, 1041[[1066, 1070[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[340, 347[[690, 697[[856, 857[[918, 919[[1034, 1041[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v4|d [0, 1[[346, 347[[696, 697[[854, 857[[1040, 1041[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  v0|q QWORD "[r10|q]" v0|q rsi|q [58, 126[58 MustHaveRegister 66 MustHaveRegister 68 MustHaveRegister 70 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[r11|q]" v1|q rdx|d [60, 150[60 MustHaveRegister 62 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[r8|d]" v2|d -1 [62, 294[62 MustHaveRegister 64 MustHaveRegister 78 MustHaveRegister 102 MustHaveRegister 180 MustHaveRegister 182 MustHaveRegister  "SpillInDominator"
  v3|d DWORD "[rcx|d]" v3|d -1 [64, 76[64 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [66, 185[66 MustHaveRegister 124 ShouldHaveRegister 148 MustHaveRegister 184 MustHaveRegister  "SpillInDominator"
  v5|d DWORD "[rbx|d]" v5|d -1 [68, 340[[370, 652[68 MustHaveRegister 112 MustHaveRegister 124 MustHaveRegister 184 ShouldHaveRegister 272 MustHaveRegister 340 MustHaveRegister  "OneSpillStore"
  v6|d DWORD "[rdi|d]" v6|d -1 [70, 108[70 MustHaveRegister 72 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|d [72, 150[72 MustHaveRegister  "SpillInDominator"
  v8|q QWORD "[rcx|q]" v8|q v3|d [76, 81[76 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q -1 [74, 77[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rbp|q]" v10|q v2|d [78, 150[78 MustHaveRegister  "SpillInDominator"
  v11|d DWORD "[rsi|d]" v11|d -1 [102, 196[102 MustHaveRegister 104 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r13|d]" v12|d -1 [104, 200[[370, 638[[862, 994[[1044, 1068[104 MustHaveRegister 192 ShouldHaveRegister 406 ShouldHaveRegister 414 ShouldHaveRegister 420 ShouldHaveRegister 454 MustHaveRegister 622 MustHaveRegister 624 ShouldHaveRegister 638 ShouldHaveRegister 948 ShouldHaveRegister 994 MustHaveRegister 1068 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r14|d]" v13|d -1 [106, 332[[370, 652[106 MustHaveRegister 110 MustHaveRegister 332 MustHaveRegister  "OneSpillStore"
  v14|d DWORD "[rdx|d]" v14|d -1 [108, 232[[370, 652[108 MustHaveRegister 142 ShouldHaveRegister 232 MustHaveRegister  "OneSpillStore"
  v15|d DWORD "[rdi|d]" v15|d -1 [110, 270[[370, 652[110 MustHaveRegister 146 ShouldHaveRegister 270 MustHaveRegister  "OneSpillStore"
  v16|d DWORD "[rcx|d]" v16|d -1 [142, 144[142 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[r10|d]" v17|d v15|d [146, 148[146 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r10|d]" v18|d -1 [180, 342[[370, 456[180 MustHaveRegister 186 ShouldHaveRegister 244 MustHaveRegister 292 MustHaveRegister 342 MustHaveRegister  "SpillInDominator"
  v19|d DWORD "[rcx|d]" v19|d -1 [182, 189[182 MustHaveRegister 188 ShouldHaveRegister  "OneSpillStore"
  v20|d DWORD "[r11|d]" v20|d v4|d [184, 338[[370, 652[184 MustHaveRegister 186 ShouldHaveRegister 256 MustHaveRegister 270 ShouldHaveRegister 290 ShouldHaveRegister 338 ShouldHaveRegister  "OneSpillStore"
  v21|d DWORD "[r9|d]" v21|d v20|d [186, 294[186 MustHaveRegister 194 MustHaveRegister  "SpillInDominator"
  v22|d DWORD "[rax|d]" v22|d -1 [188, 191[188 MustHaveRegister 190 ShouldHaveRegister  "OneSpillStore"
  v23|d DWORD "[rax|d]" v23|d v12|d [192, 195[192 MustHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rcx|d]" v24|d v21|d [194, 198[194 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q v11|d [196, 209[196 MustHaveRegister 208 ShouldHaveRegister  "OneSpillStore"
  v26|d DWORD "[rax|d]" v26|d v21|d [404, 406[404 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d v26|d [406, 418[406 MustHaveRegister 416 ShouldHaveRegister 418 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rsi|d]" v28|d v29|d [412, 414[412 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rcx|d]" v29|d -1 [408, 409[408 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rsi|d]" v30|d v28|d [414, 419[414 MustHaveRegister 416 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d v27|d [418, 420[418 MustHaveRegister 420 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rax|d]" v32|d v31|d [420, 448[420 MustHaveRegister 422 ShouldHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rcx|d]" v33|d v32|d [422, 424[422 MustHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[rax|d]" v34|d v32|d [448, 452[448 MustHaveRegister 452 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[rax|d]" v35|d v34|d [452, 650[[862, 887[452 MustHaveRegister 454 ShouldHaveRegister 482 ShouldHaveRegister 534 MustHaveRegister 622 ShouldHaveRegister 624 MustHaveRegister 650 ShouldHaveRegister 886 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q -1 [946, 996[946 MustHaveRegister 954 ShouldHaveRegister 984 MustHaveRegister 986 MustHaveRegister 988 MustHaveRegister 990 MustHaveRegister 992 MustHaveRegister 994 MustHaveRegister 996 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[r10|q]" v38|q v12|d [948, 1038[[1044, 1078[948 MustHaveRegister 950 MustHaveRegister 1038 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rsi|q]" v39|q -1 [950, 952[950 MustHaveRegister 952 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q v39|q [952, 989[952 MustHaveRegister 954 ShouldHaveRegister 984 MustHaveRegister 986 MustHaveRegister 988 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdx|q]" v41|q v40|q [954, 982[954 MustHaveRegister 956 MustHaveRegister 982 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q rax|q [1072, 1077[1072 MustHaveRegister 1074 MustHaveRegister 1076 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rdi|q]" v44|q v37|q [996, 999[996 MustHaveRegister 998 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdi|q]" v45|q v44|q [1000, 1033[1032 ShouldHaveRegister  "OneSpillStore"
  v46|q QWORD "[rsi|q]" v46|q v25|q [1030, 1034[1030 MustHaveRegister 1034 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rdx|q]" v47|q v45|q [1032, 1036[1032 MustHaveRegister 1036 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q -1 [480, 604[[896, 922[480 MustHaveRegister 488 ShouldHaveRegister 524 MustHaveRegister 526 MustHaveRegister 528 MustHaveRegister 530 MustHaveRegister 532 MustHaveRegister 534 MustHaveRegister 578 MustHaveRegister 583 LiveAtLoopEnd 604 ShouldHaveRegister 918 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rcx|q]" v49|q v35|d [482, 484[482 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rcx|q]" v50|q -1 [484, 486[484 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rcx|q]" v51|q v50|q [486, 584[486 MustHaveRegister 488 ShouldHaveRegister 524 MustHaveRegister 526 MustHaveRegister 528 MustHaveRegister 536 MustHaveRegister 560 MustHaveRegister 583 LiveAtLoopEnd  "NoSpillStore"
  v52|q QWORD "[r10|q]" v52|q v51|q [488, 522[488 MustHaveRegister 490 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rax|q]" v53|q rax|q [890, 895[890 MustHaveRegister 892 MustHaveRegister 894 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q -1 [536, 540[[896, 916[536 MustHaveRegister 538 ShouldHaveRegister 916 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[r10|q]" v55|q v56|q [550, 580[560 ShouldHaveRegister 578 MustHaveRegister 580 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[r10|q]" v56|q v55|q [580, 583[580 MustHaveRegister 582 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q v48|q [604, 607[604 MustHaveRegister 606 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rsi|q]" v59|q v58|q [608, 691[686 ShouldHaveRegister  "OneSpillStore"
  v60|d DWORD "[r10|d]" v60|d v12|d [624, 688[624 MustHaveRegister 626 MustHaveRegister 638 MustHaveRegister 650 MustHaveRegister 688 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdi|q]" v61|q v25|q [684, 690[684 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[r11|q]" v62|q v59|q [686, 692[686 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[r10|q]" v63|q v60|d [688, 694[688 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q v59|q [700, 823[816 MustHaveRegister 820 MustHaveRegister 822 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[rdx|q]" v65|q -1 [814, 815[814 MustHaveRegister  "NoDefinitionFound"
  v66|q QWORD "[rcx|q]" v66|q -1 [814, 815[814 MustHaveRegister  "NoDefinitionFound"
  v67|d DWORD "[rdx|d]" v67|d v64|q [816, 818[816 MustHaveRegister 818 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rdx|q]" v68|q -1 [820, 821[820 MustHaveRegister  "NoDefinitionFound"
  v69|q QWORD "[rcx|q]" v69|q -1 [820, 821[820 MustHaveRegister  "NoDefinitionFound"
  v70|q QWORD "[rsi|q]" v70|q v25|q [210, 336[288 MustHaveRegister 336 ShouldHaveRegister  "NoSpillStore"
  v71|d DWORD "[rdi|d]" v71|d v15|d [270, 272[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v72|d DWORD "[rdi|d]" v72|d -1 [288, 290[288 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[rdi|d]" v73|d v72|d [290, 292[290 MustHaveRegister 292 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[r14|q]" v74|q v13|d [332, 334[332 MustHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v75|q QWORD "[r14|q]" v75|q v74|q [334, 340[334 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[rsi|q]" v76|q v70|q [336, 342[336 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[r11|q]" v77|q v20|d [338, 344[338 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[r10|d]" v78|d -1 [1198, 1214[1214 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[r11|q]" v79|q -1 [1198, 1216[1216 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[rax|q]" v80|q rax|q [858, 859[858 MustHaveRegister  "NoSpillStore"
  v81|d DWORD "[r10|d]" v81|d -1 [1240, 1256[1256 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[r11|q]" v82|q -1 [1240, 1258[1258 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rsi|q]" v83|q -1 [864, 884[864 MustHaveRegister 884 ShouldHaveRegister  "NoSpillStore"
  v84|q QWORD "[rsi|q]" v84|q -1 [1046, 1066[1046 MustHaveRegister 1066 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[vstack:6|d]" v2|d v2|d [294, 345[ "SpillInDominator"
  v86|d DWORD "[vstack:2|d]" v4|d v4|d [652, 695[ "SpillInDominator"
  v87|d DWORD "[vstack:15|d]" v5|d v5|d [652, 695[ "OneSpillStore"
  v88|q QWORD "[vstack:3|q]" v7|q v7|q [652, 695[ "SpillInDominator"
  v89|q QWORD "[vstack:4|q]" v10|q v10|q [652, 695[ "SpillInDominator"
  v90|d DWORD "[vstack:12|d]" v13|d v13|d [652, 824[[862, 1078[ "OneSpillStore"
  v91|d DWORD "[vstack:11|d]" v14|d v14|d [652, 824[[862, 1078[ "OneSpillStore"
  v92|d DWORD "[vstack:14|d]" v15|d v15|d [652, 693[ "OneSpillStore"
  v93|q QWORD "[r9|q]" v0|q v0|q [1240, 1261[ "OneSpillStore"
  v94|q QWORD "[vstack:0|q]" v0|q v0|q [126, 200[[370, 652[[862, 958[[1044, 1075[[1078, 1108[[1118, 1138[[1178, 1188[[1220, 1240[ "OneSpillStore"
  v95|d DWORD "[vstack:10|d]" v18|d v18|d [652, 695[ "SpillInDominator"
  v96|d DWORD "[rbp|d]" v19|d v19|d [189, 220[[370, 652[220 MustHaveRegister  "OneSpillStore"
  v97|d DWORD "[vstack:16|d]" v20|d v20|d [652, 695[ "OneSpillStore"
  v98|q QWORD "[r8|q]" v1|q v1|q [1240, 1261[ "OneSpillStore"
  v99|q QWORD "[vstack:1|q]" v1|q v1|q [150, 200[[370, 652[[862, 958[[1044, 1075[[1078, 1108[[1118, 1138[[1178, 1188[[1220, 1240[ "OneSpillStore"
  v100|d DWORD "[vstack:7|d]" v21|d v21|d [294, 345[ "SpillInDominator"
  v101|d DWORD "[vstack:2|d]" v4|d v4|d [185, 294[[370, 652[ "SpillInDominator"
  v102|q QWORD "[vstack:3|q]" v7|q v7|q [150, 294[[370, 652[ "SpillInDominator"
  v103|d DWORD "[vstack:17|d]" v19|d v19|d [652, 695[ "OneSpillStore"
  v104|q QWORD "[vstack:4|q]" v10|q v10|q [150, 294[[370, 652[ "SpillInDominator"
  v105|d DWORD "[rsi|d]" v22|d v22|d [426, 450[446 ShouldHaveRegister 450 ShouldHaveRegister  "OneSpillStore"
  v106|d DWORD "[vstack:5|d]" v22|d v22|d [191, 200[[370, 426[402 ShouldHaveRegister 410 ShouldHaveRegister  "OneSpillStore"
  v107|q QWORD "[r11|q]" v25|q v25|q [862, 1030[[1044, 1078[1030 ShouldHaveRegister  "OneSpillStore"
  v108|d DWORD "[vstack:7|d]" v21|d v21|d [345, 347[ "SpillInDominator"
  v109|d DWORD "[vstack:6|d]" v2|d v2|d [345, 347[ "SpillInDominator"
  v110|d DWORD "[r8|d]" v2|d v2|d [347, 348[[370, 652[348 MustHaveRegister  "SpillInDominator"
  v111|d DWORD "[r9|d]" v21|d v21|d [347, 348[[370, 652[348 MustHaveRegister 404 ShouldHaveRegister  "SpillInDominator"
  v112|d DWORD "[vstack:7|d]" v21|d v21|d [652, 695[ "SpillInDominator"
  v113|d DWORD "[vstack:6|d]" v2|d v2|d [652, 695[ "SpillInDominator"
  v114|d DWORD "[rsi|d]" v29|d v29|d [409, 412[412 ShouldHaveRegister  "NoSpillStore"
  v115|q QWORD "[rdi|q]" v25|q v25|q [652, 684[684 ShouldHaveRegister  "OneSpillStore"
  v116|q QWORD "[vstack:9|q]" v25|q v25|q [370, 652[ "OneSpillStore"
  v117|d DWORD "[r9|d]" v35|d v35|d [887, 922[ "NoSpillStore"
  v118|d DWORD "[vstack:10|d]" v18|d v18|d [456, 652[ "SpillInDominator"
  v119|q QWORD "[vstack:13|q]" v59|q v59|q [691, 699[698 ShouldHaveRegister  "OneSpillStore"
  v120|d DWORD "[vstack:6|d]" v2|d v2|d [695, 700[ "SpillInDominator"
  v121|q QWORD "[vstack:4|q]" v10|q v10|q [695, 700[ "SpillInDominator"
  v122|q QWORD "[vstack:3|q]" v7|q v7|q [695, 850[[862, 1078[[1108, 1118[[1138, 1178[[1188, 1198[850 ShouldHaveRegister  "SpillInDominator"
  v123|d DWORD "[vstack:15|d]" v5|d v5|d [695, 852[[862, 1078[[1108, 1118[[1138, 1178[[1188, 1198[852 ShouldHaveRegister  "OneSpillStore"
  v124|d DWORD "[vstack:2|d]" v4|d v4|d [695, 854[[862, 1078[[1108, 1118[[1138, 1178[[1188, 1198[854 ShouldHaveRegister  "SpillInDominator"
  v125|d DWORD "[vstack:7|d]" v21|d v21|d [695, 824[[862, 1078[ "SpillInDominator"
  v126|d DWORD "[vstack:17|d]" v19|d v19|d [695, 824[[862, 1078[ "OneSpillStore"
  v127|d DWORD "[vstack:16|d]" v20|d v20|d [695, 824[[862, 1078[ "OneSpillStore"
  v128|d DWORD "[vstack:10|d]" v18|d v18|d [695, 824[[862, 1078[ "SpillInDominator"
  v129|d DWORD "[vstack:14|d]" v15|d v15|d [693, 824[[862, 1078[ "OneSpillStore"
  v130|d DWORD "[r8|d]" v2|d v2|d [700, 824[[862, 1000[814 MustHaveRegister 818 MustHaveRegister  "SpillInDominator"
  v131|q QWORD "[rbp|q]" v10|q v10|q [700, 848[[862, 1000[820 MustHaveRegister 848 ShouldHaveRegister  "SpillInDominator"
  v132|q QWORD "[rax|q]" v7|q v7|q [1198, 1219[ "SpillInDominator"
  v133|d DWORD "[rbx|d]" v5|d v5|d [1198, 1219[ "OneSpillStore"
  v134|d DWORD "[r9|d]" v4|d v4|d [1198, 1219[ "SpillInDominator"
  v135|d DWORD "[vstack:6|d]" v2|d v2|d [1000, 1039[ "SpillInDominator"
  v136|q QWORD "[vstack:4|q]" v10|q v10|q [1000, 1039[ "SpillInDominator"
  v137|q QWORD "[vstack:19|q]" v45|q v45|q [1033, 1039[ "OneSpillStore"
  v138|q QWORD "[vstack:4|q]" v10|q v10|q [1039, 1078[[1108, 1118[[1138, 1178[[1188, 1198[ "SpillInDominator"
  v139|d DWORD "[vstack:6|d]" v2|d v2|d [1039, 1078[ "SpillInDominator"
  v140|q QWORD "[vstack:19|q]" v45|q v45|q [1039, 1043[1042 ShouldHaveRegister  "OneSpillStore"
  v141|q QWORD "[rbp|q]" v10|q v10|q [1198, 1219[ "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   70  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   72  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   76  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   78  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v13|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction v14|DWORD = MOVSXB input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v15|DWORD = MOV input: [v13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  112  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction v16|DWORD = MOVSXB value: v14|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction rcx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction v17|DWORD = SHR (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v18|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  182  <|@ instruction v19|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  184  <|@ instruction v20|DWORD = SUB (x: v4|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  186  <|@ instruction v21|DWORD = ADD (x: v20|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction v22|DWORD = MOVSXB value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: v19|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  190  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction v23|DWORD = SHR (x: v12|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction v24|DWORD = SUB (x: v21|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [v25|QWORD[.]] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  210  <|@ instruction [v70|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction TESTBYTEBRANCH (x: v19|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction TESTBYTEBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction v71|DWORD = SUB (x: v15|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction v72|DWORD = MOV input: [v70|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  290  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v73|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction v75|QWORD[*] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction v76|QWORD[*] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction v77|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = LEA address: [v75|QWORD[*] + v5|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = LEA address: [v76|QWORD[*] + v18|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = STACKMOVE (input: v100|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|DWORD[_] = STACKMOVE (input: v85|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[_] = MOVE input: v109|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: v108|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  348  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction v26|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction v27|DWORD = SUB (x: v26|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction v29|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = MOVE input: v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction v28|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  414  <|@ instruction v30|DWORD = ADD (x: v28|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction CMP (x: v30|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction v31|DWORD = CMOVE (falseValue: v27|DWORD, ~trueValue: v30|DWORD) condition: > <|@ <|@
      nr  420  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction v33|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction v34|DWORD = SAR (x: v32|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction v35|DWORD = SHL (x: v34|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v35|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v48|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  482  <|@ instruction v49|QWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction v50|QWORD = LEA address: [v49|QWORD + 23] size: QWORD <|@ <|@
      nr  486  <|@ instruction v51|QWORD = AND x: v50|QWORD y: -8 size: QWORD <|@ <|@
      nr  488  <|@ instruction v52|QWORD = ADD (x: v51|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  526  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  528  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  530  <|@ instruction MOV x: [v48|QWORD] y: 1 size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV x: [v48|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  534  <|@ instruction MOV (x: [v48|QWORD + 12], y: v35|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction v54|QWORD = LEA address: [v51|QWORD - 16] size: QWORD <|@ <|@
      nr  538  <|@ instruction CMPCONSTBRANCH x: v54|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr  550  <|@ instruction [v55|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction CMPBRANCH (x: v51|QWORD, y: v55|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction MOV x: [v48|QWORD + v55|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  580  <|@ instruction v56|QWORD = LEA address: [v55|QWORD + 8] size: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~outgoingValues: [v56|QWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction v58|QWORD[.] = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [v58|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  608  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction CMP (x: v12|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction v60|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v35|DWORD) condition: > <|@ <|@
      nr  626  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v35|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v61|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction v62|QWORD[*] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction v63|QWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = STACKMOVE (input: v92|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction rdx|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = STACKMOVE (input: v112|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = STACKMOVE (input: v103|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = STACKMOVE (input: v97|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = STACKMOVE (input: v95|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = STACKMOVE (input: v86|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = STACKMOVE (input: v87|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = STACKMOVE (input: v88|QWORD[.], ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = STACKMOVE (input: v89|QWORD[.], ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v120|DWORD[_] = STACKMOVE (input: v113|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [v59|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  700  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: v65|QWORD, temp2: v66|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr  816  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  818  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr  820  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v64|QWORD[.]) {temp: v68|QWORD, temp2: v69|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [v64|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction r8|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr  858  <|@ instruction v80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  864  <|@ instruction v83|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction rsi|QWORD = MOVE input: v83|QWORD moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v35|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  888  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  890  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:0] <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction rcx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction ZERO_MEMORY (pointer: [v48|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  948  <|@ instruction v38|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction v39|QWORD = LEA address: [v38|QWORD + 23] size: QWORD <|@ <|@
      nr  952  <|@ instruction v40|QWORD = AND x: v39|QWORD y: -8 size: QWORD <|@ <|@
      nr  954  <|@ instruction v41|QWORD = ADD (x: v40|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr  956  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction MOV (x: [r15|QWORD + 440], y: v41|QWORD) size: QWORD <|@ <|@
      nr  984  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  986  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  988  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  990  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr  992  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  994  <|@ instruction MOV (x: [v37|QWORD + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr  996  <|@ instruction v44|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr 1000  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction v46|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction v47|QWORD[*] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = STACKMOVE (input: v136|QWORD[.], ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD[_] = STACKMOVE (input: v135|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = STACKMOVE (input: v137|QWORD[.], ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1040  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1042  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction v84|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD = MOVE input: v84|QWORD moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1072  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:0] <|@ <|@
      nr 1076  <|@ instruction JUMP ~outgoingValues: [v42|QWORD[.]] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction JUMP ~outgoingValues: [int[-100889|0xfffffffffffe75e7], long[0|0x0]] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction JUMP ~outgoingValues: [int[-99865|0xfffffffffffe79e7], long[0|0x0]] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction JUMP ~outgoingValues: [int[-98841|0xfffffffffffe7de7], long[0|0x0]] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction JUMP ~outgoingValues: [int[-95769|0xfffffffffffe89e7], long[0|0x0]] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [int[-87571|0xfffffffffffea9ed], long[2580|0xa14]] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction JUMP ~outgoingValues: [int[-97811|0xfffffffffffe81ed], long[3860|0xf14]] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [int[-91667|0xfffffffffffe99ed], long[5140|0x1414]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [int[-93721|0xfffffffffffe91e7], long[0|0x0]] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [int[-92697|0xfffffffffffe95e7], long[0|0x0]] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [int[-90643|0xfffffffffffe9ded], long[4500|0x1194]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [int[-88595|0xfffffffffffea5ed], long[2580|0xa14]] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction JUMP ~outgoingValues: [int[-94745|0xfffffffffffe8de7], long[0|0x0]] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1198  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr 1216  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr 1218  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: v10|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction JUMP ~outgoingValues: [int[-89619|0xfffffffffffea1ed], long[2580|0xa14]] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction JUMP ~outgoingValues: [int[-6707|0xffffffffffffe5cd], long[20|0x14]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1240  <|@ instruction [v81|DWORD, v82|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v81|DWORD) size: DWORD <|@ <|@
      nr 1258  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v82|QWORD) size: QWORD <|@ <|@
      nr 1260  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[346, 347[[696, 697[[856, 858[[888, 890[[918, 919[[1040, 1041[[1070, 1072[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v16|d [0, 1[[144, 147[[190, 193[[346, 347[[402, 405[[410, 413[[446, 449[[450, 453[[696, 697[[852, 857[[916, 919[[1040, 1041[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v77|q [0, 60[[344, 347[[694, 697[[850, 857[[886, 888[[1038, 1041[[1068, 1070[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 54[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v10|q [0, 58[[342, 347[[692, 697[[848, 857[[884, 888[[1036, 1041[[1066, 1070[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[340, 347[[690, 697[[856, 857[[918, 919[[1034, 1041[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v4|d [0, 1[[346, 347[[696, 697[[854, 857[[1040, 1041[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  v0|q QWORD "[r10|q]" v0|q rsi|q [58, 126[58 MustHaveRegister 66 MustHaveRegister 68 MustHaveRegister 70 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[r11|q]" v1|q rdx|d [60, 150[60 MustHaveRegister 62 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[r8|d]" v2|d -1 [62, 294[62 MustHaveRegister 64 MustHaveRegister 78 MustHaveRegister 102 MustHaveRegister 180 MustHaveRegister 182 MustHaveRegister  "SpillInDominator"
  v3|d DWORD "[rcx|d]" v3|d -1 [64, 76[64 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [66, 185[66 MustHaveRegister 124 ShouldHaveRegister 148 MustHaveRegister 184 MustHaveRegister  "StoreAtDefinition"
  v5|d DWORD "[rbx|d]" v5|d -1 [68, 340[[370, 652[68 MustHaveRegister 112 MustHaveRegister 124 MustHaveRegister 184 ShouldHaveRegister 272 MustHaveRegister 340 MustHaveRegister  "OneSpillStore"
  v6|d DWORD "[rdi|d]" v6|d -1 [70, 108[70 MustHaveRegister 72 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|d [72, 150[72 MustHaveRegister  "StoreAtDefinition"
  v8|q QWORD "[rcx|q]" v8|q v3|d [76, 81[76 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q -1 [74, 77[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rbp|q]" v10|q v2|d [78, 150[78 MustHaveRegister  "SpillInDominator"
  v11|d DWORD "[rsi|d]" v11|d -1 [102, 196[102 MustHaveRegister 104 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r13|d]" v12|d -1 [104, 200[[370, 638[[862, 994[[1044, 1068[104 MustHaveRegister 192 ShouldHaveRegister 406 ShouldHaveRegister 414 ShouldHaveRegister 420 ShouldHaveRegister 454 MustHaveRegister 622 MustHaveRegister 624 ShouldHaveRegister 638 ShouldHaveRegister 948 ShouldHaveRegister 994 MustHaveRegister 1068 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r14|d]" v13|d -1 [106, 332[[370, 652[106 MustHaveRegister 110 MustHaveRegister 332 MustHaveRegister  "OneSpillStore"
  v14|d DWORD "[rdx|d]" v14|d -1 [108, 232[[370, 652[108 MustHaveRegister 142 ShouldHaveRegister 232 MustHaveRegister  "OneSpillStore"
  v15|d DWORD "[rdi|d]" v15|d -1 [110, 270[[370, 652[110 MustHaveRegister 146 ShouldHaveRegister 270 MustHaveRegister  "OneSpillStore"
  v16|d DWORD "[rcx|d]" v16|d -1 [142, 144[142 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[r10|d]" v17|d v15|d [146, 148[146 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r10|d]" v18|d -1 [180, 342[[370, 456[180 MustHaveRegister 186 ShouldHaveRegister 244 MustHaveRegister 292 MustHaveRegister 342 MustHaveRegister  "SpillInDominator"
  v19|d DWORD "[rcx|d]" v19|d -1 [182, 189[182 MustHaveRegister 188 ShouldHaveRegister  "OneSpillStore"
  v20|d DWORD "[r11|d]" v20|d v4|d [184, 338[[370, 652[184 MustHaveRegister 186 ShouldHaveRegister 256 MustHaveRegister 270 ShouldHaveRegister 290 ShouldHaveRegister 338 ShouldHaveRegister  "OneSpillStore"
  v21|d DWORD "[r9|d]" v21|d v20|d [186, 294[186 MustHaveRegister 194 MustHaveRegister  "StoreAtDefinition"
  v22|d DWORD "[rax|d]" v22|d -1 [188, 191[188 MustHaveRegister 190 ShouldHaveRegister  "OneSpillStore"
  v23|d DWORD "[rax|d]" v23|d v12|d [192, 195[192 MustHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rcx|d]" v24|d v21|d [194, 198[194 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q v11|d [196, 209[196 MustHaveRegister 208 ShouldHaveRegister  "OneSpillStore"
  v26|d DWORD "[rax|d]" v26|d v21|d [404, 406[404 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d v26|d [406, 418[406 MustHaveRegister 416 ShouldHaveRegister 418 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rsi|d]" v28|d v29|d [412, 414[412 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rcx|d]" v29|d -1 [408, 409[408 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rsi|d]" v30|d v28|d [414, 419[414 MustHaveRegister 416 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d v27|d [418, 420[418 MustHaveRegister 420 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rax|d]" v32|d v31|d [420, 448[420 MustHaveRegister 422 ShouldHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rcx|d]" v33|d v32|d [422, 424[422 MustHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[rax|d]" v34|d v32|d [448, 452[448 MustHaveRegister 452 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[rax|d]" v35|d v34|d [452, 650[[862, 887[452 MustHaveRegister 454 ShouldHaveRegister 482 ShouldHaveRegister 534 MustHaveRegister 622 ShouldHaveRegister 624 MustHaveRegister 650 ShouldHaveRegister 886 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q -1 [946, 996[946 MustHaveRegister 954 ShouldHaveRegister 984 MustHaveRegister 986 MustHaveRegister 988 MustHaveRegister 990 MustHaveRegister 992 MustHaveRegister 994 MustHaveRegister 996 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[r10|q]" v38|q v12|d [948, 1038[[1044, 1078[948 MustHaveRegister 950 MustHaveRegister 1038 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rsi|q]" v39|q -1 [950, 952[950 MustHaveRegister 952 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q v39|q [952, 989[952 MustHaveRegister 954 ShouldHaveRegister 984 MustHaveRegister 986 MustHaveRegister 988 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdx|q]" v41|q v40|q [954, 982[954 MustHaveRegister 956 MustHaveRegister 982 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q rax|q [1072, 1077[1072 MustHaveRegister 1074 MustHaveRegister 1076 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rdi|q]" v44|q v37|q [996, 999[996 MustHaveRegister 998 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdi|q]" v45|q v44|q [1000, 1033[1032 ShouldHaveRegister  "OneSpillStore"
  v46|q QWORD "[rsi|q]" v46|q v25|q [1030, 1034[1030 MustHaveRegister 1034 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rdx|q]" v47|q v45|q [1032, 1036[1032 MustHaveRegister 1036 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q -1 [480, 604[[896, 922[480 MustHaveRegister 488 ShouldHaveRegister 524 MustHaveRegister 526 MustHaveRegister 528 MustHaveRegister 530 MustHaveRegister 532 MustHaveRegister 534 MustHaveRegister 578 MustHaveRegister 583 LiveAtLoopEnd 604 ShouldHaveRegister 918 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rcx|q]" v49|q v35|d [482, 484[482 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rcx|q]" v50|q -1 [484, 486[484 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rcx|q]" v51|q v50|q [486, 584[486 MustHaveRegister 488 ShouldHaveRegister 524 MustHaveRegister 526 MustHaveRegister 528 MustHaveRegister 536 MustHaveRegister 560 MustHaveRegister 583 LiveAtLoopEnd  "NoSpillStore"
  v52|q QWORD "[r10|q]" v52|q v51|q [488, 522[488 MustHaveRegister 490 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rax|q]" v53|q rax|q [890, 895[890 MustHaveRegister 892 MustHaveRegister 894 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q -1 [536, 540[[896, 916[536 MustHaveRegister 538 ShouldHaveRegister 916 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[r10|q]" v55|q v56|q [550, 580[560 ShouldHaveRegister 578 MustHaveRegister 580 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[r10|q]" v56|q v55|q [580, 583[580 MustHaveRegister 582 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q v48|q [604, 607[604 MustHaveRegister 606 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rsi|q]" v59|q v58|q [608, 691[686 ShouldHaveRegister  "OneSpillStore"
  v60|d DWORD "[r10|d]" v60|d v12|d [624, 688[624 MustHaveRegister 626 MustHaveRegister 638 MustHaveRegister 650 MustHaveRegister 688 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdi|q]" v61|q v25|q [684, 690[684 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[r11|q]" v62|q v59|q [686, 692[686 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[r10|q]" v63|q v60|d [688, 694[688 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q v59|q [700, 823[816 MustHaveRegister 820 MustHaveRegister 822 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[rdx|q]" v65|q -1 [814, 815[814 MustHaveRegister  "NoDefinitionFound"
  v66|q QWORD "[rcx|q]" v66|q -1 [814, 815[814 MustHaveRegister  "NoDefinitionFound"
  v67|d DWORD "[rdx|d]" v67|d v64|q [816, 818[816 MustHaveRegister 818 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rdx|q]" v68|q -1 [820, 821[820 MustHaveRegister  "NoDefinitionFound"
  v69|q QWORD "[rcx|q]" v69|q -1 [820, 821[820 MustHaveRegister  "NoDefinitionFound"
  v70|q QWORD "[rsi|q]" v70|q v25|q [210, 336[288 MustHaveRegister 336 ShouldHaveRegister  "NoSpillStore"
  v71|d DWORD "[rdi|d]" v71|d v15|d [270, 272[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v72|d DWORD "[rdi|d]" v72|d -1 [288, 290[288 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[rdi|d]" v73|d v72|d [290, 292[290 MustHaveRegister 292 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[r14|q]" v74|q v13|d [332, 334[332 MustHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v75|q QWORD "[r14|q]" v75|q v74|q [334, 340[334 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[rsi|q]" v76|q v70|q [336, 342[336 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[r11|q]" v77|q v20|d [338, 344[338 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[r10|d]" v78|d -1 [1198, 1214[1214 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[r11|q]" v79|q -1 [1198, 1216[1216 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[rax|q]" v80|q rax|q [858, 859[858 MustHaveRegister  "NoSpillStore"
  v81|d DWORD "[r10|d]" v81|d -1 [1240, 1256[1256 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[r11|q]" v82|q -1 [1240, 1258[1258 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rsi|q]" v83|q -1 [864, 884[864 MustHaveRegister 884 ShouldHaveRegister  "NoSpillStore"
  v84|q QWORD "[rsi|q]" v84|q -1 [1046, 1066[1046 MustHaveRegister 1066 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[vstack:6|d]" v2|d v2|d [294, 345[ "SpillInDominator"
  v86|d DWORD "[vstack:2|d]" v4|d v4|d [652, 695[ "StoreAtDefinition"
  v87|d DWORD "[vstack:15|d]" v5|d v5|d [652, 695[ "OneSpillStore"
  v88|q QWORD "[vstack:3|q]" v7|q v7|q [652, 695[ "StoreAtDefinition"
  v89|q QWORD "[vstack:4|q]" v10|q v10|q [652, 695[ "SpillInDominator"
  v90|d DWORD "[vstack:12|d]" v13|d v13|d [652, 824[[862, 1078[ "OneSpillStore"
  v91|d DWORD "[vstack:11|d]" v14|d v14|d [652, 824[[862, 1078[ "OneSpillStore"
  v92|d DWORD "[vstack:14|d]" v15|d v15|d [652, 693[ "OneSpillStore"
  v93|q QWORD "[r9|q]" v0|q v0|q [1240, 1261[ "OneSpillStore"
  v94|q QWORD "[vstack:0|q]" v0|q v0|q [126, 200[[370, 652[[862, 958[[1044, 1075[[1078, 1108[[1118, 1138[[1178, 1188[[1220, 1240[ "OneSpillStore"
  v95|d DWORD "[vstack:10|d]" v18|d v18|d [652, 695[ "SpillInDominator"
  v96|d DWORD "[rbp|d]" v19|d v19|d [189, 220[[370, 652[220 MustHaveRegister  "OneSpillStore"
  v97|d DWORD "[vstack:16|d]" v20|d v20|d [652, 695[ "OneSpillStore"
  v98|q QWORD "[r8|q]" v1|q v1|q [1240, 1261[ "OneSpillStore"
  v99|q QWORD "[vstack:1|q]" v1|q v1|q [150, 200[[370, 652[[862, 958[[1044, 1075[[1078, 1108[[1118, 1138[[1178, 1188[[1220, 1240[ "OneSpillStore"
  v100|d DWORD "[vstack:7|d]" v21|d v21|d [294, 345[ "StoreAtDefinition"
  v101|d DWORD "[vstack:2|d]" v4|d v4|d [185, 294[[370, 652[ "StoreAtDefinition"
  v102|q QWORD "[vstack:3|q]" v7|q v7|q [150, 294[[370, 652[ "StoreAtDefinition"
  v103|d DWORD "[vstack:17|d]" v19|d v19|d [652, 695[ "OneSpillStore"
  v104|q QWORD "[vstack:4|q]" v10|q v10|q [150, 294[[370, 652[ "SpillInDominator"
  v105|d DWORD "[rsi|d]" v22|d v22|d [426, 450[446 ShouldHaveRegister 450 ShouldHaveRegister  "OneSpillStore"
  v106|d DWORD "[vstack:5|d]" v22|d v22|d [191, 200[[370, 426[402 ShouldHaveRegister 410 ShouldHaveRegister  "OneSpillStore"
  v107|q QWORD "[r11|q]" v25|q v25|q [862, 1030[[1044, 1078[1030 ShouldHaveRegister  "OneSpillStore"
  v108|d DWORD "[vstack:7|d]" v21|d v21|d [345, 347[ "StoreAtDefinition"
  v109|d DWORD "[vstack:6|d]" v2|d v2|d [345, 347[ "SpillInDominator"
  v110|d DWORD "[r8|d]" v2|d v2|d [347, 348[[370, 652[348 MustHaveRegister  "SpillInDominator"
  v111|d DWORD "[r9|d]" v21|d v21|d [347, 348[[370, 652[348 MustHaveRegister 404 ShouldHaveRegister  "StoreAtDefinition"
  v112|d DWORD "[vstack:7|d]" v21|d v21|d [652, 695[ "StoreAtDefinition"
  v113|d DWORD "[vstack:6|d]" v2|d v2|d [652, 695[ "SpillInDominator"
  v114|d DWORD "[rsi|d]" v29|d v29|d [409, 412[412 ShouldHaveRegister  "NoSpillStore"
  v115|q QWORD "[rdi|q]" v25|q v25|q [652, 684[684 ShouldHaveRegister  "OneSpillStore"
  v116|q QWORD "[vstack:9|q]" v25|q v25|q [370, 652[ "OneSpillStore"
  v117|d DWORD "[r9|d]" v35|d v35|d [887, 922[ "NoSpillStore"
  v118|d DWORD "[vstack:10|d]" v18|d v18|d [456, 652[ "SpillInDominator"
  v119|q QWORD "[vstack:13|q]" v59|q v59|q [691, 699[698 ShouldHaveRegister  "OneSpillStore"
  v120|d DWORD "[vstack:6|d]" v2|d v2|d [695, 700[ "SpillInDominator"
  v121|q QWORD "[vstack:4|q]" v10|q v10|q [695, 700[ "SpillInDominator"
  v122|q QWORD "[vstack:3|q]" v7|q v7|q [695, 850[[862, 1078[[1108, 1118[[1138, 1178[[1188, 1198[850 ShouldHaveRegister  "StoreAtDefinition"
  v123|d DWORD "[vstack:15|d]" v5|d v5|d [695, 852[[862, 1078[[1108, 1118[[1138, 1178[[1188, 1198[852 ShouldHaveRegister  "OneSpillStore"
  v124|d DWORD "[vstack:2|d]" v4|d v4|d [695, 854[[862, 1078[[1108, 1118[[1138, 1178[[1188, 1198[854 ShouldHaveRegister  "StoreAtDefinition"
  v125|d DWORD "[vstack:7|d]" v21|d v21|d [695, 824[[862, 1078[ "StoreAtDefinition"
  v126|d DWORD "[vstack:17|d]" v19|d v19|d [695, 824[[862, 1078[ "OneSpillStore"
  v127|d DWORD "[vstack:16|d]" v20|d v20|d [695, 824[[862, 1078[ "OneSpillStore"
  v128|d DWORD "[vstack:10|d]" v18|d v18|d [695, 824[[862, 1078[ "SpillInDominator"
  v129|d DWORD "[vstack:14|d]" v15|d v15|d [693, 824[[862, 1078[ "OneSpillStore"
  v130|d DWORD "[r8|d]" v2|d v2|d [700, 824[[862, 1000[814 MustHaveRegister 818 MustHaveRegister  "SpillInDominator"
  v131|q QWORD "[rbp|q]" v10|q v10|q [700, 848[[862, 1000[820 MustHaveRegister 848 ShouldHaveRegister  "SpillInDominator"
  v132|q QWORD "[rax|q]" v7|q v7|q [1198, 1219[ "StoreAtDefinition"
  v133|d DWORD "[rbx|d]" v5|d v5|d [1198, 1219[ "OneSpillStore"
  v134|d DWORD "[r9|d]" v4|d v4|d [1198, 1219[ "StoreAtDefinition"
  v135|d DWORD "[vstack:6|d]" v2|d v2|d [1000, 1039[ "SpillInDominator"
  v136|q QWORD "[vstack:4|q]" v10|q v10|q [1000, 1039[ "SpillInDominator"
  v137|q QWORD "[vstack:19|q]" v45|q v45|q [1033, 1039[ "OneSpillStore"
  v138|q QWORD "[vstack:4|q]" v10|q v10|q [1039, 1078[[1108, 1118[[1138, 1178[[1188, 1198[ "SpillInDominator"
  v139|d DWORD "[vstack:6|d]" v2|d v2|d [1039, 1078[ "SpillInDominator"
  v140|q QWORD "[vstack:19|q]" v45|q v45|q [1039, 1043[1042 ShouldHaveRegister  "OneSpillStore"
  v141|q QWORD "[rbp|q]" v10|q v10|q [1198, 1219[ "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   70  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   72  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   76  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   78  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v13|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction v14|DWORD = MOVSXB input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v15|DWORD = MOV input: [v13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  112  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:4|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction v16|DWORD = MOVSXB value: v14|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction rcx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction v17|DWORD = SHR (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:6|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v18|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  182  <|@ instruction v19|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  184  <|@ instruction v20|DWORD = SUB (x: v4|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  186  <|@ instruction v21|DWORD = ADD (x: v20|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction v22|DWORD = MOVSXB value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: v19|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  190  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction v23|DWORD = SHR (x: v12|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction v24|DWORD = SUB (x: v21|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [v25|QWORD[.]] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  210  <|@ instruction [v70|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction TESTBYTEBRANCH (x: v19|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction TESTBYTEBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction v71|DWORD = SUB (x: v15|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction v72|DWORD = MOV input: [v70|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  290  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v73|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction v75|QWORD[*] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction v76|QWORD[*] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction v77|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = LEA address: [v75|QWORD[*] + v5|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = LEA address: [v76|QWORD[*] + v18|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = STACKMOVE (input: v100|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|DWORD[_] = STACKMOVE (input: v85|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[_] = MOVE input: v109|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: v108|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  348  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction v26|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction v27|DWORD = SUB (x: v26|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction v29|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = MOVE input: v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction v28|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  414  <|@ instruction v30|DWORD = ADD (x: v28|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction CMP (x: v30|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction v31|DWORD = CMOVE (falseValue: v27|DWORD, ~trueValue: v30|DWORD) condition: > <|@ <|@
      nr  420  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction v33|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:10|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction v34|DWORD = SAR (x: v32|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction v35|DWORD = SHL (x: v34|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v35|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v48|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  482  <|@ instruction v49|QWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction v50|QWORD = LEA address: [v49|QWORD + 23] size: QWORD <|@ <|@
      nr  486  <|@ instruction v51|QWORD = AND x: v50|QWORD y: -8 size: QWORD <|@ <|@
      nr  488  <|@ instruction v52|QWORD = ADD (x: v51|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  526  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  528  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  530  <|@ instruction MOV x: [v48|QWORD] y: 1 size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV x: [v48|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  534  <|@ instruction MOV (x: [v48|QWORD + 12], y: v35|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction v54|QWORD = LEA address: [v51|QWORD - 16] size: QWORD <|@ <|@
      nr  538  <|@ instruction CMPCONSTBRANCH x: v54|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr  550  <|@ instruction [v55|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction CMPBRANCH (x: v51|QWORD, y: v55|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction MOV x: [v48|QWORD + v55|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  580  <|@ instruction v56|QWORD = LEA address: [v55|QWORD + 8] size: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~outgoingValues: [v56|QWORD] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction v58|QWORD[.] = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [v58|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  608  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction CMP (x: v12|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction v60|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v35|DWORD) condition: > <|@ <|@
      nr  626  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v35|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v61|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction v62|QWORD[*] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction v63|QWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = STACKMOVE (input: v92|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction rdx|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = STACKMOVE (input: v112|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = STACKMOVE (input: v103|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = STACKMOVE (input: v97|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = STACKMOVE (input: v95|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = STACKMOVE (input: v86|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = STACKMOVE (input: v87|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = STACKMOVE (input: v88|QWORD[.], ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = STACKMOVE (input: v89|QWORD[.], ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v120|DWORD[_] = STACKMOVE (input: v113|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [v59|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  700  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: v65|QWORD, temp2: v66|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr  816  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  818  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr  820  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v64|QWORD[.]) {temp: v68|QWORD, temp2: v69|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [v64|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction r8|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr  858  <|@ instruction v80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  864  <|@ instruction v83|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction rsi|QWORD = MOVE input: v83|QWORD moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v35|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  888  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  890  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:0] <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction rcx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction ZERO_MEMORY (pointer: [v48|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  948  <|@ instruction v38|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction v39|QWORD = LEA address: [v38|QWORD + 23] size: QWORD <|@ <|@
      nr  952  <|@ instruction v40|QWORD = AND x: v39|QWORD y: -8 size: QWORD <|@ <|@
      nr  954  <|@ instruction v41|QWORD = ADD (x: v40|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr  956  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction MOV (x: [r15|QWORD + 440], y: v41|QWORD) size: QWORD <|@ <|@
      nr  984  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  986  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  988  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  990  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr  992  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  994  <|@ instruction MOV (x: [v37|QWORD + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr  996  <|@ instruction v44|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr 1000  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction v46|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction v47|QWORD[*] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = STACKMOVE (input: v136|QWORD[.], ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD[_] = STACKMOVE (input: v135|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = STACKMOVE (input: v137|QWORD[.], ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1040  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1042  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction v84|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD = MOVE input: v84|QWORD moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1072  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:0] <|@ <|@
      nr 1076  <|@ instruction JUMP ~outgoingValues: [v42|QWORD[.]] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction JUMP ~outgoingValues: [int[-100889|0xfffffffffffe75e7], long[0|0x0]] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction JUMP ~outgoingValues: [int[-99865|0xfffffffffffe79e7], long[0|0x0]] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction JUMP ~outgoingValues: [int[-98841|0xfffffffffffe7de7], long[0|0x0]] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction JUMP ~outgoingValues: [int[-95769|0xfffffffffffe89e7], long[0|0x0]] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [int[-87571|0xfffffffffffea9ed], long[2580|0xa14]] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction JUMP ~outgoingValues: [int[-97811|0xfffffffffffe81ed], long[3860|0xf14]] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [int[-91667|0xfffffffffffe99ed], long[5140|0x1414]] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [int[-93721|0xfffffffffffe91e7], long[0|0x0]] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [int[-92697|0xfffffffffffe95e7], long[0|0x0]] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [int[-90643|0xfffffffffffe9ded], long[4500|0x1194]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [int[-88595|0xfffffffffffea5ed], long[2580|0xa14]] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction JUMP ~outgoingValues: [int[-94745|0xfffffffffffe8de7], long[0|0x0]] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1198  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr 1216  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr 1218  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: v10|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction JUMP ~outgoingValues: [int[-89619|0xfffffffffffea1ed], long[2580|0xa14]] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction JUMP ~outgoingValues: [int[-6707|0xffffffffffffe5cd], long[20|0x14]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1240  <|@ instruction [v81|DWORD, v82|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v81|DWORD) size: DWORD <|@ <|@
      nr 1258  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v82|QWORD) size: QWORD <|@ <|@
      nr 1260  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[346, 347[[696, 697[[856, 858[[888, 890[[918, 919[[1040, 1041[[1070, 1072[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v16|d [0, 1[[144, 147[[190, 193[[346, 347[[402, 405[[410, 413[[446, 449[[450, 453[[696, 697[[852, 857[[916, 919[[1040, 1041[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v77|q [0, 60[[344, 347[[694, 697[[850, 857[[886, 888[[1038, 1041[[1068, 1070[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 54[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v10|q [0, 58[[342, 347[[692, 697[[848, 857[[884, 888[[1036, 1041[[1066, 1070[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[340, 347[[690, 697[[856, 857[[918, 919[[1034, 1041[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v4|d [0, 1[[346, 347[[696, 697[[854, 857[[1040, 1041[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[346, 347[[696, 697[[856, 857[[1040, 1041[ "NoDefinitionFound"
  v0|q QWORD "[r10|q]" v0|q rsi|q [58, 126[58 MustHaveRegister 66 MustHaveRegister 68 MustHaveRegister 70 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[r11|q]" v1|q rdx|d [60, 150[60 MustHaveRegister 62 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[r8|d]" v2|d -1 [62, 294[62 MustHaveRegister 64 MustHaveRegister 78 MustHaveRegister 102 MustHaveRegister 180 MustHaveRegister 182 MustHaveRegister  "SpillInDominator"
  v3|d DWORD "[rcx|d]" v3|d -1 [64, 76[64 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [66, 185[66 MustHaveRegister 124 ShouldHaveRegister 148 MustHaveRegister 184 MustHaveRegister  "StoreAtDefinition"
  v5|d DWORD "[rbx|d]" v5|d -1 [68, 340[[370, 652[68 MustHaveRegister 112 MustHaveRegister 124 MustHaveRegister 184 ShouldHaveRegister 272 MustHaveRegister 340 MustHaveRegister  "OneSpillStore"
  v6|d DWORD "[rdi|d]" v6|d -1 [70, 108[70 MustHaveRegister 72 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|d [72, 150[72 MustHaveRegister  "StoreAtDefinition"
  v8|q QWORD "[rcx|q]" v8|q v3|d [76, 81[76 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q -1 [74, 77[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rbp|q]" v10|q v2|d [78, 150[78 MustHaveRegister  "SpillInDominator"
  v11|d DWORD "[rsi|d]" v11|d -1 [102, 196[102 MustHaveRegister 104 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[r13|d]" v12|d -1 [104, 200[[370, 638[[862, 994[[1044, 1068[104 MustHaveRegister 192 ShouldHaveRegister 406 ShouldHaveRegister 414 ShouldHaveRegister 420 ShouldHaveRegister 454 MustHaveRegister 622 MustHaveRegister 624 ShouldHaveRegister 638 ShouldHaveRegister 948 ShouldHaveRegister 994 MustHaveRegister 1068 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r14|d]" v13|d -1 [106, 332[[370, 652[106 MustHaveRegister 110 MustHaveRegister 332 MustHaveRegister  "OneSpillStore"
  v14|d DWORD "[rdx|d]" v14|d -1 [108, 232[[370, 652[108 MustHaveRegister 142 ShouldHaveRegister 232 MustHaveRegister  "OneSpillStore"
  v15|d DWORD "[rdi|d]" v15|d -1 [110, 270[[370, 652[110 MustHaveRegister 146 ShouldHaveRegister 270 MustHaveRegister  "OneSpillStore"
  v16|d DWORD "[rcx|d]" v16|d -1 [142, 144[142 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[r10|d]" v17|d v15|d [146, 148[146 MustHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r10|d]" v18|d -1 [180, 342[[370, 456[180 MustHaveRegister 186 ShouldHaveRegister 244 MustHaveRegister 292 MustHaveRegister 342 MustHaveRegister  "SpillInDominator"
  v19|d DWORD "[rcx|d]" v19|d -1 [182, 189[182 MustHaveRegister 188 ShouldHaveRegister  "OneSpillStore"
  v20|d DWORD "[r11|d]" v20|d v4|d [184, 338[[370, 652[184 MustHaveRegister 186 ShouldHaveRegister 256 MustHaveRegister 270 ShouldHaveRegister 290 ShouldHaveRegister 338 ShouldHaveRegister  "OneSpillStore"
  v21|d DWORD "[r9|d]" v21|d v20|d [186, 294[186 MustHaveRegister 194 MustHaveRegister  "StoreAtDefinition"
  v22|d DWORD "[rax|d]" v22|d -1 [188, 191[188 MustHaveRegister 190 ShouldHaveRegister  "OneSpillStore"
  v23|d DWORD "[rax|d]" v23|d v12|d [192, 195[192 MustHaveRegister 194 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rcx|d]" v24|d v21|d [194, 198[194 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q v11|d [196, 209[196 MustHaveRegister 208 ShouldHaveRegister  "OneSpillStore"
  v26|d DWORD "[rax|d]" v26|d v21|d [404, 406[404 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d v26|d [406, 418[406 MustHaveRegister 416 ShouldHaveRegister 418 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rsi|d]" v28|d v29|d [412, 414[412 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[rcx|d]" v29|d -1 [408, 409[408 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rsi|d]" v30|d v28|d [414, 419[414 MustHaveRegister 416 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d v27|d [418, 420[418 MustHaveRegister 420 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rax|d]" v32|d v31|d [420, 448[420 MustHaveRegister 422 ShouldHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rcx|d]" v33|d v32|d [422, 424[422 MustHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[rax|d]" v34|d v32|d [448, 452[448 MustHaveRegister 452 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[rax|d]" v35|d v34|d [452, 650[[862, 887[452 MustHaveRegister 454 ShouldHaveRegister 482 ShouldHaveRegister 534 MustHaveRegister 622 ShouldHaveRegister 624 MustHaveRegister 650 ShouldHaveRegister 886 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q -1 [946, 996[946 MustHaveRegister 954 ShouldHaveRegister 984 MustHaveRegister 986 MustHaveRegister 988 MustHaveRegister 990 MustHaveRegister 992 MustHaveRegister 994 MustHaveRegister 996 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[r10|q]" v38|q v12|d [948, 1038[[1044, 1078[948 MustHaveRegister 950 MustHaveRegister 1038 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rsi|q]" v39|q -1 [950, 952[950 MustHaveRegister 952 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q v39|q [952, 989[952 MustHaveRegister 954 ShouldHaveRegister 984 MustHaveRegister 986 MustHaveRegister 988 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdx|q]" v41|q v40|q [954, 982[954 MustHaveRegister 956 MustHaveRegister 982 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q rax|q [1072, 1077[1072 MustHaveRegister 1074 MustHaveRegister 1076 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rdi|q]" v44|q v37|q [996, 999[996 MustHaveRegister 998 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdi|q]" v45|q v44|q [1000, 1033[1032 ShouldHaveRegister  "OneSpillStore"
  v46|q QWORD "[rsi|q]" v46|q v25|q [1030, 1034[1030 MustHaveRegister 1034 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rdx|q]" v47|q v45|q [1032, 1036[1032 MustHaveRegister 1036 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q -1 [480, 604[[896, 922[480 MustHaveRegister 488 ShouldHaveRegister 524 MustHaveRegister 526 MustHaveRegister 528 MustHaveRegister 530 MustHaveRegister 532 MustHaveRegister 534 MustHaveRegister 578 MustHaveRegister 583 LiveAtLoopEnd 604 ShouldHaveRegister 918 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rcx|q]" v49|q v35|d [482, 484[482 MustHaveRegister 484 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rcx|q]" v50|q -1 [484, 486[484 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rcx|q]" v51|q v50|q [486, 584[486 MustHaveRegister 488 ShouldHaveRegister 524 MustHaveRegister 526 MustHaveRegister 528 MustHaveRegister 536 MustHaveRegister 560 MustHaveRegister 583 LiveAtLoopEnd  "NoSpillStore"
  v52|q QWORD "[r10|q]" v52|q v51|q [488, 522[488 MustHaveRegister 490 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rax|q]" v53|q rax|q [890, 895[890 MustHaveRegister 892 MustHaveRegister 894 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q -1 [536, 540[[896, 916[536 MustHaveRegister 538 ShouldHaveRegister 916 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[r10|q]" v55|q v56|q [550, 580[560 ShouldHaveRegister 578 MustHaveRegister 580 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[r10|q]" v56|q v55|q [580, 583[580 MustHaveRegister 582 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q v48|q [604, 607[604 MustHaveRegister 606 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rsi|q]" v59|q v58|q [608, 691[686 ShouldHaveRegister  "OneSpillStore"
  v60|d DWORD "[r10|d]" v60|d v12|d [624, 688[624 MustHaveRegister 626 MustHaveRegister 638 MustHaveRegister 650 MustHaveRegister 688 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdi|q]" v61|q v25|q [684, 690[684 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[r11|q]" v62|q v59|q [686, 692[686 MustHaveRegister 692 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[r10|q]" v63|q v60|d [688, 694[688 MustHaveRegister 694 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rsi|q]" v64|q v59|q [700, 823[816 MustHaveRegister 820 MustHaveRegister 822 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[rdx|q]" v65|q -1 [814, 815[814 MustHaveRegister  "NoDefinitionFound"
  v66|q QWORD "[rcx|q]" v66|q -1 [814, 815[814 MustHaveRegister  "NoDefinitionFound"
  v67|d DWORD "[rdx|d]" v67|d v64|q [816, 818[816 MustHaveRegister 818 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rdx|q]" v68|q -1 [820, 821[820 MustHaveRegister  "NoDefinitionFound"
  v69|q QWORD "[rcx|q]" v69|q -1 [820, 821[820 MustHaveRegister  "NoDefinitionFound"
  v70|q QWORD "[rsi|q]" v70|q v25|q [210, 336[288 MustHaveRegister 336 ShouldHaveRegister  "NoSpillStore"
  v71|d DWORD "[rdi|d]" v71|d v15|d [270, 272[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v72|d DWORD "[rdi|d]" v72|d -1 [288, 290[288 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v73|d DWORD "[rdi|d]" v73|d v72|d [290, 292[290 MustHaveRegister 292 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[r14|q]" v74|q v13|d [332, 334[332 MustHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v75|q QWORD "[r14|q]" v75|q v74|q [334, 340[334 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[rsi|q]" v76|q v70|q [336, 342[336 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[r11|q]" v77|q v20|d [338, 344[338 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v78|d DWORD "[r10|d]" v78|d -1 [1198, 1214[1214 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[r11|q]" v79|q -1 [1198, 1216[1216 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[rax|q]" v80|q rax|q [858, 859[858 MustHaveRegister  "NoSpillStore"
  v81|d DWORD "[r10|d]" v81|d -1 [1240, 1256[1256 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[r11|q]" v82|q -1 [1240, 1258[1258 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rsi|q]" v83|q -1 [864, 884[864 MustHaveRegister 884 ShouldHaveRegister  "NoSpillStore"
  v84|q QWORD "[rsi|q]" v84|q -1 [1046, 1066[1046 MustHaveRegister 1066 ShouldHaveRegister  "NoSpillStore"
  v85|d DWORD "[vstack:6|d]" v2|d v2|d [294, 345[ "SpillInDominator"
  v86|d DWORD "[vstack:2|d]" v4|d v4|d [652, 695[ "StoreAtDefinition"
  v87|d DWORD "[vstack:15|d]" v5|d v5|d [652, 695[ "OneSpillStore"
  v88|q QWORD "[vstack:3|q]" v7|q v7|q [652, 695[ "StoreAtDefinition"
  v89|q QWORD "[vstack:4|q]" v10|q v10|q [652, 695[ "SpillInDominator"
  v90|d DWORD "[vstack:12|d]" v13|d v13|d [652, 824[[862, 1078[ "OneSpillStore"
  v91|d DWORD "[vstack:11|d]" v14|d v14|d [652, 824[[862, 1078[ "OneSpillStore"
  v92|d DWORD "[vstack:14|d]" v15|d v15|d [652, 693[ "OneSpillStore"
  v93|q QWORD "[r9|q]" v0|q v0|q [1240, 1261[ "OneSpillStore"
  v94|q QWORD "[vstack:0|q]" v0|q v0|q [126, 200[[370, 652[[862, 958[[1044, 1075[[1078, 1108[[1118, 1138[[1178, 1188[[1220, 1240[ "OneSpillStore"
  v95|d DWORD "[vstack:10|d]" v18|d v18|d [652, 695[ "SpillInDominator"
  v96|d DWORD "[rbp|d]" v19|d v19|d [189, 220[[370, 652[220 MustHaveRegister  "OneSpillStore"
  v97|d DWORD "[vstack:16|d]" v20|d v20|d [652, 695[ "OneSpillStore"
  v98|q QWORD "[r8|q]" v1|q v1|q [1240, 1261[ "OneSpillStore"
  v99|q QWORD "[vstack:1|q]" v1|q v1|q [150, 200[[370, 652[[862, 958[[1044, 1075[[1078, 1108[[1118, 1138[[1178, 1188[[1220, 1240[ "OneSpillStore"
  v100|d DWORD "[vstack:7|d]" v21|d v21|d [294, 345[ "StoreAtDefinition"
  v101|d DWORD "[vstack:2|d]" v4|d v4|d [185, 294[[370, 652[ "StoreAtDefinition"
  v102|q QWORD "[vstack:3|q]" v7|q v7|q [150, 294[[370, 652[ "StoreAtDefinition"
  v103|d DWORD "[vstack:17|d]" v19|d v19|d [652, 695[ "OneSpillStore"
  v104|q QWORD "[vstack:4|q]" v10|q v10|q [150, 294[[370, 652[ "SpillInDominator"
  v105|d DWORD "[rsi|d]" v22|d v22|d [426, 450[446 ShouldHaveRegister 450 ShouldHaveRegister  "OneSpillStore"
  v106|d DWORD "[vstack:5|d]" v22|d v22|d [191, 200[[370, 426[402 ShouldHaveRegister 410 ShouldHaveRegister  "OneSpillStore"
  v107|q QWORD "[r11|q]" v25|q v25|q [862, 1030[[1044, 1078[1030 ShouldHaveRegister  "OneSpillStore"
  v108|d DWORD "[vstack:7|d]" v21|d v21|d [345, 347[ "StoreAtDefinition"
  v109|d DWORD "[vstack:6|d]" v2|d v2|d [345, 347[ "SpillInDominator"
  v110|d DWORD "[r8|d]" v2|d v2|d [347, 348[[370, 652[348 MustHaveRegister  "SpillInDominator"
  v111|d DWORD "[r9|d]" v21|d v21|d [347, 348[[370, 652[348 MustHaveRegister 404 ShouldHaveRegister  "StoreAtDefinition"
  v112|d DWORD "[vstack:7|d]" v21|d v21|d [652, 695[ "StoreAtDefinition"
  v113|d DWORD "[vstack:6|d]" v2|d v2|d [652, 695[ "SpillInDominator"
  v114|d DWORD "[rsi|d]" v29|d v29|d [409, 412[412 ShouldHaveRegister  "NoSpillStore"
  v115|q QWORD "[rdi|q]" v25|q v25|q [652, 684[684 ShouldHaveRegister  "OneSpillStore"
  v116|q QWORD "[vstack:9|q]" v25|q v25|q [370, 652[ "OneSpillStore"
  v117|d DWORD "[r9|d]" v35|d v35|d [887, 922[ "NoSpillStore"
  v118|d DWORD "[vstack:10|d]" v18|d v18|d [456, 652[ "SpillInDominator"
  v119|q QWORD "[vstack:13|q]" v59|q v59|q [691, 699[698 ShouldHaveRegister  "OneSpillStore"
  v120|d DWORD "[vstack:6|d]" v2|d v2|d [695, 700[ "SpillInDominator"
  v121|q QWORD "[vstack:4|q]" v10|q v10|q [695, 700[ "SpillInDominator"
  v122|q QWORD "[vstack:3|q]" v7|q v7|q [695, 850[[862, 1078[[1108, 1118[[1138, 1178[[1188, 1198[850 ShouldHaveRegister  "StoreAtDefinition"
  v123|d DWORD "[vstack:15|d]" v5|d v5|d [695, 852[[862, 1078[[1108, 1118[[1138, 1178[[1188, 1198[852 ShouldHaveRegister  "OneSpillStore"
  v124|d DWORD "[vstack:2|d]" v4|d v4|d [695, 854[[862, 1078[[1108, 1118[[1138, 1178[[1188, 1198[854 ShouldHaveRegister  "StoreAtDefinition"
  v125|d DWORD "[vstack:7|d]" v21|d v21|d [695, 824[[862, 1078[ "StoreAtDefinition"
  v126|d DWORD "[vstack:17|d]" v19|d v19|d [695, 824[[862, 1078[ "OneSpillStore"
  v127|d DWORD "[vstack:16|d]" v20|d v20|d [695, 824[[862, 1078[ "OneSpillStore"
  v128|d DWORD "[vstack:10|d]" v18|d v18|d [695, 824[[862, 1078[ "SpillInDominator"
  v129|d DWORD "[vstack:14|d]" v15|d v15|d [693, 824[[862, 1078[ "OneSpillStore"
  v130|d DWORD "[r8|d]" v2|d v2|d [700, 824[[862, 1000[814 MustHaveRegister 818 MustHaveRegister  "SpillInDominator"
  v131|q QWORD "[rbp|q]" v10|q v10|q [700, 848[[862, 1000[820 MustHaveRegister 848 ShouldHaveRegister  "SpillInDominator"
  v132|q QWORD "[rax|q]" v7|q v7|q [1198, 1219[ "StoreAtDefinition"
  v133|d DWORD "[rbx|d]" v5|d v5|d [1198, 1219[ "OneSpillStore"
  v134|d DWORD "[r9|d]" v4|d v4|d [1198, 1219[ "StoreAtDefinition"
  v135|d DWORD "[vstack:6|d]" v2|d v2|d [1000, 1039[ "SpillInDominator"
  v136|q QWORD "[vstack:4|q]" v10|q v10|q [1000, 1039[ "SpillInDominator"
  v137|q QWORD "[vstack:19|q]" v45|q v45|q [1033, 1039[ "OneSpillStore"
  v138|q QWORD "[vstack:4|q]" v10|q v10|q [1039, 1078[[1108, 1118[[1138, 1178[[1188, 1198[ "SpillInDominator"
  v139|d DWORD "[vstack:6|d]" v2|d v2|d [1039, 1078[ "SpillInDominator"
  v140|q QWORD "[vstack:19|q]" v45|q v45|q [1039, 1043[1042 ShouldHaveRegister  "OneSpillStore"
  v141|q QWORD "[rbp|q]" v10|q v10|q [1198, 1219[ "SpillInDominator"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   70  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   72  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   74  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   76  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   78  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v13|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction v14|DWORD = MOVSXB input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v15|DWORD = MOV input: [v13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  112  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -2  <|@ instruction vstack:4|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction v16|DWORD = MOVSXB value: v14|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction rcx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction v17|DWORD = SHR (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -2  <|@ instruction vstack:6|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v18|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  182  <|@ instruction v19|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  184  <|@ instruction v20|DWORD = SUB (x: v4|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  186  <|@ instruction v21|DWORD = ADD (x: v20|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction v22|DWORD = MOVSXB value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: v19|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  190  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction v23|DWORD = SHR (x: v12|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction v24|DWORD = SUB (x: v21|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  210  <|@ instruction [v70|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction TESTBYTEBRANCH (x: v19|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction TESTBYTEBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction v71|DWORD = SUB (x: v15|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction v72|DWORD = MOV input: [v70|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  290  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v73|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVE input: v21|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v85|DWORD[_] = MOVE input: v2|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction v75|QWORD[*] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction v76|QWORD[*] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction v77|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = LEA address: [v75|QWORD[*] + v5|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = LEA address: [v76|QWORD[*] + v18|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = STACKMOVE (input: v100|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|DWORD[_] = STACKMOVE (input: v85|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  346  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[_] = MOVE input: v109|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: v108|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  348  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = MOVE input: v25|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction v26|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction v27|DWORD = SUB (x: v26|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction v29|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = MOVE input: v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction v28|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  414  <|@ instruction v30|DWORD = ADD (x: v28|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction CMP (x: v30|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction v31|DWORD = CMOVE (falseValue: v27|DWORD, ~trueValue: v30|DWORD) condition: > <|@ <|@
      nr  420  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction v33|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: v106|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -2  <|@ instruction vstack:10|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction v34|DWORD = SAR (x: v32|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction v35|DWORD = SHL (x: v34|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v35|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = MOVE input: v18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v48|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  482  <|@ instruction v49|QWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction v50|QWORD = LEA address: [v49|QWORD + 23] size: QWORD <|@ <|@
      nr  486  <|@ instruction v51|QWORD = AND x: v50|QWORD y: -8 size: QWORD <|@ <|@
      nr  488  <|@ instruction v52|QWORD = ADD (x: v51|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  526  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  528  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  530  <|@ instruction MOV x: [v48|QWORD] y: 1 size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV x: [v48|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  534  <|@ instruction MOV (x: [v48|QWORD + 12], y: v35|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction v54|QWORD = LEA address: [v51|QWORD - 16] size: QWORD <|@ <|@
      nr  538  <|@ instruction CMPCONSTBRANCH x: v54|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr  550  <|@ instruction [v55|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction CMPBRANCH (x: v51|QWORD, y: v55|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction MOV x: [v48|QWORD + v55|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  580  <|@ instruction v56|QWORD = LEA address: [v55|QWORD + 8] size: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction v58|QWORD[.] = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  608  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction CMP (x: v12|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction v60|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v35|DWORD) condition: > <|@ <|@
      nr  626  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v35|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVE input: v111|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: v20|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOVE input: v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE input: v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[_] = MOVE input: v13|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[_] = MOVE input: v110|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = MOVE input: v116|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v61|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction v62|QWORD[*] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction v63|QWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = STACKMOVE (input: v92|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction rdx|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = STACKMOVE (input: v112|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = STACKMOVE (input: v103|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = STACKMOVE (input: v97|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = STACKMOVE (input: v95|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = STACKMOVE (input: v86|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = STACKMOVE (input: v87|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = STACKMOVE (input: v88|QWORD[.], ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = STACKMOVE (input: v89|QWORD[.], ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v120|DWORD[_] = STACKMOVE (input: v113|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  696  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v121|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|DWORD[_] = MOVE input: v120|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  700  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: v65|QWORD, temp2: v66|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr  816  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  818  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr  820  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v64|QWORD[.]) {temp: v68|QWORD, temp2: v69|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: v127|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: v128|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: v129|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v91|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOVE input: v90|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction r8|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr  858  <|@ instruction v80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v111|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVE input: v20|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE input: v15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE input: v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[_] = MOVE input: v13|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v116|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  864  <|@ instruction v83|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction rsi|QWORD = MOVE input: v83|QWORD moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v35|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  888  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  890  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: v117|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = MOVE input: v107|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: v127|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: v129|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v91|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOVE input: v90|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v111|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVE input: v20|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE input: v15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE input: v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[_] = MOVE input: v13|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v35|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v116|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction rcx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction ZERO_MEMORY (pointer: [v48|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: v117|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = MOVE input: v107|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: v127|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: v129|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v91|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOVE input: v90|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOVE input: v111|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVE input: v20|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = MOVE input: v18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE input: v15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE input: v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[_] = MOVE input: v13|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v116|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  948  <|@ instruction v38|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction v39|QWORD = LEA address: [v38|QWORD + 23] size: QWORD <|@ <|@
      nr  952  <|@ instruction v40|QWORD = AND x: v39|QWORD y: -8 size: QWORD <|@ <|@
      nr  954  <|@ instruction v41|QWORD = ADD (x: v40|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr  956  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction MOV (x: [r15|QWORD + 440], y: v41|QWORD) size: QWORD <|@ <|@
      nr  984  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  986  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  988  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  990  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr  992  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  994  <|@ instruction MOV (x: [v37|QWORD + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr  996  <|@ instruction v44|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|DWORD[_] = MOVE input: v130|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr 1000  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction v46|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction v47|QWORD[*] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = STACKMOVE (input: v136|QWORD[.], ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD[_] = STACKMOVE (input: v135|DWORD[_], ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = STACKMOVE (input: v137|QWORD[.], ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1040  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|DWORD[_] = MOVE input: v139|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1042  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD[_] = MOVE input: v130|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1046  <|@ instruction v84|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD = MOVE input: v84|QWORD moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1072  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1076  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[-100889|0xfffffffffffe75e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1086  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[-99865|0xfffffffffffe79e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1096  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[-98841|0xfffffffffffe7de7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1106  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[-95769|0xfffffffffffe89e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = MOVE input: v124|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1116  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[-87571|0xfffffffffffea9ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[-97811|0xfffffffffffe81ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1136  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[-91667|0xfffffffffffe99ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = MOVE input: v124|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[-93721|0xfffffffffffe91e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = MOVE input: v124|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[-92697|0xfffffffffffe95e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = MOVE input: v124|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[-90643|0xfffffffffffe9ded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = MOVE input: v124|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[-88595|0xfffffffffffea5ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[-94745|0xfffffffffffe8de7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = MOVE input: v124|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1196  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1198  <|@ instruction [v78|DWORD, v79|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr 1216  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr 1218  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: v10|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[-89619|0xfffffffffffea1ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1228  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[-6707|0xffffffffffffe5cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1238  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1240  <|@ instruction [v81|DWORD, v82|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v81|DWORD) size: DWORD <|@ <|@
      nr 1258  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v82|QWORD) size: QWORD <|@ <|@
      nr 1260  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r9|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   68  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   70  <|@ instruction v6|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   72  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   74  <|@ instruction v9|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   76  <|@ instruction v8|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   78  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v8|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction v11|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v12|DWORD = MOV input: [v11|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v13|DWORD[_] = MOV input: [v6|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction v14|DWORD = MOVSXB input: [v6|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction v15|DWORD = MOV input: [v13|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  112  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -2  <|@ instruction vstack:4|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction v16|DWORD = MOVSXB value: v14|DWORD size: DWORD <|@ <|@
      nr  144  <|@ instruction rcx|DWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction v17|DWORD = SHR (x: v15|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v17|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -2  <|@ instruction vstack:6|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction v18|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  182  <|@ instruction v19|DWORD = MOVSXB input: [v2|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  184  <|@ instruction v20|DWORD = SUB (x: v4|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  186  <|@ instruction v21|DWORD = ADD (x: v20|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  188  <|@ instruction v22|DWORD = MOVSXB value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: v19|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  190  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = MOVE input: v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction v23|DWORD = SHR (x: v12|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction v24|DWORD = SUB (x: v21|DWORD, ~y: v23|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction CMPCONSTBRANCH x: v24|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction TESTBYTEBRANCH (x: v19|DWORD, y: v19|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction TESTBYTEBRANCH (x: v14|DWORD, y: v14|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: v18|DWORD, y: v18|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: v20|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction v71|DWORD = SUB (x: v15|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: v5|DWORD, y: v71|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction v72|DWORD = MOV input: [v70|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  290  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v20|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: v18|DWORD, y: v73|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction v75|QWORD[*] = MOVE input: v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction v76|QWORD[*] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction v77|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = LEA address: [v75|QWORD[*] + v5|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = LEA address: [v76|QWORD[*] + v18|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD = MOVE input: v77|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  346  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[_] = MOVE input: v109|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: v108|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  348  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = MOVE input: v25|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction v26|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction v27|DWORD = SUB (x: v26|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction v29|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = MOVE input: v29|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction v28|DWORD = SHL (x: v29|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  414  <|@ instruction v30|DWORD = ADD (x: v28|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction CMP (x: v30|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction v31|DWORD = CMOVE (falseValue: v27|DWORD, ~trueValue: v30|DWORD) condition: > <|@ <|@
      nr  420  <|@ instruction v32|DWORD = ADD (x: v31|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction v33|DWORD = DEC value: v32|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v33|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = MOVE input: v106|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -2  <|@ instruction vstack:10|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction v34|DWORD = SAR (x: v32|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: v22|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction v35|DWORD = SHL (x: v34|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction CMPBRANCH (x: v12|DWORD, y: v35|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction v48|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  482  <|@ instruction v49|QWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction v50|QWORD = LEA address: [v49|QWORD + 23] size: QWORD <|@ <|@
      nr  486  <|@ instruction v51|QWORD = AND x: v50|QWORD y: -8 size: QWORD <|@ <|@
      nr  488  <|@ instruction v52|QWORD = ADD (x: v51|QWORD, y: v48|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  526  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  528  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + v48|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  530  <|@ instruction MOV x: [v48|QWORD] y: 1 size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV x: [v48|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  534  <|@ instruction MOV (x: [v48|QWORD + 12], y: v35|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction v54|QWORD = LEA address: [v51|QWORD - 16] size: QWORD <|@ <|@
      nr  538  <|@ instruction CMPCONSTBRANCH x: v54|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction CMPBRANCH (x: v51|QWORD, y: v55|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction MOV x: [v48|QWORD + v55|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  580  <|@ instruction v56|QWORD = LEA address: [v55|QWORD + 8] size: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction v58|QWORD[.] = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction CMP (x: v12|DWORD, y: v35|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction v60|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v35|DWORD) condition: > <|@ <|@
      nr  626  <|@ instruction TESTBRANCH (x: v60|DWORD, y: v60|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v12|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction CMPBRANCH (x: v60|DWORD, y: v35|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: v20|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOVE input: v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOVE input: v15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE input: v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[_] = MOVE input: v13|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = MOVE input: v116|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction v61|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction v62|QWORD[*] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction v63|QWORD = MOVE input: v60|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = STACKMOVE (input: v92|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  694  <|@ instruction rdx|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = STACKMOVE (input: v103|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = STACKMOVE (input: v97|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = STACKMOVE (input: v87|DWORD, ~backupSlot: vstack:8|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  696  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: v119|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v121|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|DWORD[_] = MOVE input: v120|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v2|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: v65|QWORD, temp2: v66|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr  816  <|@ instruction v67|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  818  <|@ instruction MOV (x: [v2|DWORD[_] * 8 + 20], y: v67|DWORD[_]) size: DWORD <|@ <|@
      nr  820  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v10|QWORD[.], ~newValue: v64|QWORD[.]) {temp: v68|QWORD, temp2: v69|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: v127|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: v128|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: v129|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v91|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOVE input: v90|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rsi|QWORD[.] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rdx|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rcx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction r8|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr  858  <|@ instruction v80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVE input: v20|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE input: v15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE input: v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[_] = MOVE input: v13|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v116|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  864  <|@ instruction v83|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction rsi|QWORD = MOVE input: v83|QWORD moveKind: QWORD <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = MOVE input: v35|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v35|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  888  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  890  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: v117|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = MOVE input: v107|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: v127|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: v129|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v91|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOVE input: v90|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVE input: v20|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE input: v15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE input: v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[_] = MOVE input: v13|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: v35|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v116|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction rcx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction ZERO_MEMORY (pointer: [v48|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = MOVE input: v117|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = MOVE input: v107|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = MOVE input: v125|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOVE input: v127|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: v129|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v91|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOVE input: v90|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = MOVE input: v126|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVE input: v20|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOVE input: v96|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOVE input: v15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE input: v14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|DWORD[_] = MOVE input: v13|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v116|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction v37|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  948  <|@ instruction v38|QWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction v39|QWORD = LEA address: [v38|QWORD + 23] size: QWORD <|@ <|@
      nr  952  <|@ instruction v40|QWORD = AND x: v39|QWORD y: -8 size: QWORD <|@ <|@
      nr  954  <|@ instruction v41|QWORD = ADD (x: v40|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr  956  <|@ instruction CMPBRANCH (x: v41|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction MOV (x: [r15|QWORD + 440], y: v41|QWORD) size: QWORD <|@ <|@
      nr  984  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  986  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  988  <|@ instruction AMD64PREFETCH ~address: [v40|QWORD + v37|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  990  <|@ instruction MOV x: [v37|QWORD] y: 1 size: QWORD <|@ <|@
      nr  992  <|@ instruction MOV x: [v37|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  994  <|@ instruction MOV (x: [v37|QWORD + 12], y: v12|DWORD) size: DWORD <|@ <|@
      nr  996  <|@ instruction v44|QWORD[.] = MOVE input: v37|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction v46|QWORD[*] = MOVE input: v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction v47|QWORD[*] = MOVE input: v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v45|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = STACKMOVE (input: v137|QWORD[.], ~backupSlot: vstack:18|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1040  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|DWORD[_] = MOVE input: v139|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1042  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1046  <|@ instruction v84|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD = MOVE input: v84|QWORD moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = MOVE input: v12|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1072  <|@ instruction v42|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [v42|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: v42|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1076  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[-100889|0xfffffffffffe75e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1086  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[-99865|0xfffffffffffe79e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1096  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[-98841|0xfffffffffffe7de7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1106  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[-95769|0xfffffffffffe89e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = MOVE input: v124|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1116  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[-87571|0xfffffffffffea9ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[-97811|0xfffffffffffe81ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1136  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[-91667|0xfffffffffffe99ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = MOVE input: v124|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[-93721|0xfffffffffffe91e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = MOVE input: v124|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[-92697|0xfffffffffffe95e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = MOVE input: v124|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[-90643|0xfffffffffffe9ded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = MOVE input: v124|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[-88595|0xfffffffffffea5ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[-94745|0xfffffffffffe8de7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v138|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVE input: v123|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = MOVE input: v124|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1196  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v78|DWORD) size: DWORD <|@ <|@
      nr 1216  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v79|QWORD) size: QWORD <|@ <|@
      nr 1218  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: v10|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: v10|QWORD[.] v7|QWORD[.] v5|DWORD v4|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[-89619|0xfffffffffffea1ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1228  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = MOVE input: int[-6707|0xffffffffffffe5cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1238  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v81|DWORD) size: DWORD <|@ <|@
      nr 1258  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v82|QWORD) size: QWORD <|@ <|@
      nr 1260  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r9|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   70  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   72  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   74  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   76  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   78  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r13|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  112  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -2  <|@ instruction vstack:4|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rcx|DWORD = MOVSXB value: rdx|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction r10|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -2  <|@ instruction vstack:6|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = MOVSXB input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  184  <|@ instruction r11|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction r9|DWORD = ADD (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  188  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  190  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction rax|DWORD = SHR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction TESTBYTEBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction r14|QWORD[*] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r11|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = LEA address: [r14|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE input: vstack:6|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  348  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction rcx|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = SHL (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr  420  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -2  <|@ instruction vstack:10|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  482  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  486  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  488  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  526  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  528  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  530  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  534  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction r10|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  538  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction MOV x: [rsi|QWORD + r10|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  580  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  626  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:16|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:12|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction r11|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:13|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  694  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE input: vstack:6|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr  816  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  818  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  820  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD[_] = MOVE input: vstack:12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rcx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr  860  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:16|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:12|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  888  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD[_] = MOVE input: vstack:12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:16|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:12|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD[_] = MOVE input: vstack:12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:16|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:12|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  948  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  952  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  954  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  956  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  984  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  986  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  988  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  990  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  992  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  994  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:19|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1040  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE input: vstack:6|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1042  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1076  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-100889|0xfffffffffffe75e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1086  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-99865|0xfffffffffffe79e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1096  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-98841|0xfffffffffffe7de7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1106  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-95769|0xfffffffffffe89e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1116  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-87571|0xfffffffffffea9ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-97811|0xfffffffffffe81ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1136  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-91667|0xfffffffffffe99ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-93721|0xfffffffffffe91e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-92697|0xfffffffffffe95e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-90643|0xfffffffffffe9ded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-88595|0xfffffffffffea5ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-94745|0xfffffffffffe8de7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1196  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1216  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1218  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: rbp|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-89619|0xfffffffffffea1ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1228  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-6707|0xffffffffffffe5cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1238  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1258  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1260  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r9|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: r9|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   68  <|@ instruction rbx|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   70  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   72  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   74  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   76  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   78  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r13|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr  108  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  112  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -2  <|@ instruction vstack:4|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rcx|DWORD = MOVSXB value: rdx|DWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction r10|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -2  <|@ instruction vstack:6|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  182  <|@ instruction rcx|DWORD = MOVSXB input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  184  <|@ instruction r11|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  186  <|@ instruction r9|DWORD = ADD (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  188  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  190  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  192  <|@ instruction rax|DWORD = SHR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  196  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction TESTBYTEBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  334  <|@ instruction r14|QWORD[*] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r11|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = LEA address: [r14|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE input: vstack:6|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  348  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction rcx|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  408  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ instruction rcx|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = SHL (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  418  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr  420  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  422  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -2  <|@ instruction vstack:10|DWORD = MOVE input: r10|DWORD moveKind: DWORD // LSRAOptimizeSpillPos: optimize spill pos <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  450  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  454  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  482  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  486  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  488  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  524  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  526  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  528  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  530  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  532  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  534  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction r10|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  538  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction MOV x: [rsi|QWORD + r10|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  580  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  624  <|@ instruction r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  626  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:16|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:12|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction r11|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  688  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:13|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  694  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  696  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE input: vstack:6|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  698  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr  816  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  818  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  820  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD[_] = MOVE input: vstack:12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  850  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rcx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  856  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr  860  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr  862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:16|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:12|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  864  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  888  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  892  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD[_] = MOVE input: vstack:12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:16|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:12|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  918  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r14|DWORD[_] = MOVE input: vstack:12|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  920  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:16|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:17|DWORD = MOVE input: rbp|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:14|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:12|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  948  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  952  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  954  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  956  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  984  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  986  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  988  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  990  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  992  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  994  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:19|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1034  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1036  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1038  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1040  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:19|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD[_] = MOVE input: vstack:6|DWORD[_] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1042  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr 1044  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1046  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1076  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1078  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-100889|0xfffffffffffe75e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1086  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-99865|0xfffffffffffe79e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1096  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-98841|0xfffffffffffe7de7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1106  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-95769|0xfffffffffffe89e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1116  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-87571|0xfffffffffffea9ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1126  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-97811|0xfffffffffffe81ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1136  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-91667|0xfffffffffffe99ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1146  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-93721|0xfffffffffffe91e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1156  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-92697|0xfffffffffffe95e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-90643|0xfffffffffffe9ded] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1176  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-88595|0xfffffffffffea5ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-94745|0xfffffffffffe8de7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1196  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1216  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1218  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: rbp|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-89619|0xfffffffffffea1ed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1228  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-6707|0xffffffffffffe5cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1238  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1258  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1260  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r9|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction vstack:2|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rbx|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction vstack:3|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   82  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r13|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr  112  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  116  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction vstack:4|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVSXB value: rdx|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r10|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction vstack:6|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVSXB input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction r9|DWORD = ADD (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction vstack:7|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction vstack:5|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rax|DWORD = SHR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction TESTBYTEBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1306  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1308  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1374  <|@ instruction r14|QWORD[*] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1376  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction r11|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1380  <|@ instruction rdi|QWORD = LEA address: [r14|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1384  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1386  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1388  <|@ instruction r8|DWORD[_] = MOVE input: vstack:6|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1390  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction vstack:9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  332  <|@ instruction rsi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rsi|DWORD = SHL (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr  344  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction vstack:10|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  592  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  594  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  702  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  704  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  708  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  710  <|@ instruction r10|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  712  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r10|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction MOV x: [rsi|QWORD + r10|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  756  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  864  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction vstack:16|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction vstack:17|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction vstack:14|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction vstack:11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction vstack:12|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rdi|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction r11|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction vstack:13|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction r8|DWORD[_] = MOVE input: vstack:6|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1130  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1134  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1136  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr 1138  <|@ instruction r11|DWORD = MOVE input: vstack:16|DWORD moveKind: DWORD <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: vstack:10|DWORD moveKind: DWORD <|@ <|@
      nr 1142  <|@ instruction rdi|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction rdx|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD <|@ <|@
      nr 1146  <|@ instruction r14|DWORD[_] = MOVE input: vstack:12|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1148  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction rbp|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1486  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1514  <|@ instruction rcx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD <|@ <|@
      nr 1516  <|@ instruction r8|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction vstack:16|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction vstack:17|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction vstack:14|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction vstack:11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction vstack:12|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction vstack:9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r11|DWORD = MOVE input: vstack:16|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction rdi|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rdx|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction r14|DWORD[_] = MOVE input: vstack:12|DWORD[_] moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction rbp|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction vstack:16|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction vstack:17|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction vstack:14|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction vstack:11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction vstack:12|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  812  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction vstack:9|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction r9|DWORD = MOVE input: vstack:7|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r11|DWORD = MOVE input: vstack:16|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction rdi|DWORD = MOVE input: vstack:14|DWORD moveKind: DWORD <|@ <|@
      nr  822  <|@ instruction rdx|DWORD = MOVE input: vstack:11|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction r14|DWORD[_] = MOVE input: vstack:12|DWORD[_] moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction rbp|DWORD = MOVE input: vstack:17|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction vstack:16|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction vstack:17|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction vstack:14|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction vstack:11|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction vstack:12|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction r11|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  498  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  500  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  502  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  504  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction vstack:19|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:19|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r8|DWORD[_] = MOVE input: vstack:6|DWORD[_] moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: vstack:0|QWORD[.] vstack:1|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-100889|0xfffffffffffe75e7] <|@ <|@
      nr  938  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  906  <|@ instruction r10|DWORD = MOVE input: int[-99865|0xfffffffffffe79e7] <|@ <|@
      nr  908  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  876  <|@ instruction r10|DWORD = MOVE input: int[-98841|0xfffffffffffe7de7] <|@ <|@
      nr  878  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1322  <|@ instruction r10|DWORD = MOVE input: int[-95769|0xfffffffffffe89e7] <|@ <|@
      nr 1324  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1328  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD <|@ <|@
      nr 1330  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOVE input: int[-87571|0xfffffffffffea9ed] <|@ <|@
      nr  134  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1476  <|@ instruction r10|DWORD = MOVE input: int[-97811|0xfffffffffffe81ed] <|@ <|@
      nr 1478  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1480  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1408  <|@ instruction r10|DWORD = MOVE input: int[-91667|0xfffffffffffe99ed] <|@ <|@
      nr 1410  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1412  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD <|@ <|@
      nr 1416  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr 1418  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1238  <|@ instruction r10|DWORD = MOVE input: int[-93721|0xfffffffffffe91e7] <|@ <|@
      nr 1240  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1242  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1202  <|@ instruction r10|DWORD = MOVE input: int[-92697|0xfffffffffffe95e7] <|@ <|@
      nr 1204  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD <|@ <|@
      nr 1210  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1432  <|@ instruction r10|DWORD = MOVE input: int[-90643|0xfffffffffffe9ded] <|@ <|@
      nr 1434  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1436  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1438  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD <|@ <|@
      nr 1440  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr 1442  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  166  <|@ instruction r10|DWORD = MOVE input: int[-88595|0xfffffffffffea5ed] <|@ <|@
      nr  168  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction vstack:15|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOVE input: int[-94745|0xfffffffffffe8de7] <|@ <|@
      nr 1280  <|@ instruction rbp|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction rax|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1284  <|@ instruction rbx|DWORD = MOVE input: vstack:15|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction r9|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: rbp|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[-89619|0xfffffffffffea1ed] <|@ <|@
      nr  214  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1544  <|@ instruction vstack:0|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-6707|0xffffffffffffe5cd] <|@ <|@
      nr 1556  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r9|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [122, 1558[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [120, 1556[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[vstack:2|d]" vstack:2|d -1 [68, 1516[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [76, 1512[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [178, 1434[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [270, 352[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[vstack:6|d]" vstack:6|d -1 [224, 1388[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[vstack:7|d]" vstack:7|d -1 [262, 1390[ "NOT_SUPPORTED"
  vstack:9|q QWORD "[vstack:9|q]" vstack:9|q -1 [292, 958[ "NOT_SUPPORTED"
  vstack:10|d DWORD "[vstack:10|d]" vstack:10|d -1 [354, 1140[ "NOT_SUPPORTED"
  vstack:11|d DWORD "[vstack:11|d]" vstack:11|d -1 [392, 1144[ "NOT_SUPPORTED"
  vstack:12|d DWORD "[vstack:12|d]" vstack:12|d -1 [394, 1146[ "NOT_SUPPORTED"
  vstack:13|q QWORD "[vstack:13|q]" vstack:13|q -1 [998, 1006[ "NOT_SUPPORTED"
  vstack:14|d DWORD "[vstack:14|d]" vstack:14|d -1 [390, 1142[ "NOT_SUPPORTED"
  vstack:15|d DWORD "[vstack:15|d]" vstack:15|d -1 [398, 1514[ "NOT_SUPPORTED"
  vstack:16|d DWORD "[vstack:16|d]" vstack:16|d -1 [386, 1138[ "NOT_SUPPORTED"
  vstack:17|d DWORD "[vstack:17|d]" vstack:17|d -1 [388, 1150[ "NOT_SUPPORTED"
  vstack:19|q QWORD "[vstack:19|q]" vstack:19|q -1 [544, 554[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:80|q]" vstack:0|q -1 [122, 1558[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:72|q]" vstack:1|q -1 [120, 1556[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[stack:28|d]" vstack:2|d -1 [68, 1516[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:64|q]" vstack:3|q -1 [76, 1512[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:88|q]" vstack:4|q -1 [178, 1434[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:36|d]" vstack:5|d -1 [270, 352[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[stack:92|d]" vstack:6|d -1 [224, 1388[ "NOT_SUPPORTED"
  vstack:7|d DWORD "[stack:32|d]" vstack:7|d -1 [262, 1390[ "NOT_SUPPORTED"
  vstack:9|q QWORD "[stack:104|q]" vstack:9|q -1 [292, 958[ "NOT_SUPPORTED"
  vstack:10|d DWORD "[stack:36|d]" vstack:10|d -1 [354, 1140[ "NOT_SUPPORTED"
  vstack:11|d DWORD "[stack:52|d]" vstack:11|d -1 [392, 1144[ "NOT_SUPPORTED"
  vstack:12|d DWORD "[stack:108|d]" vstack:12|d -1 [394, 1146[ "NOT_SUPPORTED"
  vstack:13|q QWORD "[stack:104|q]" vstack:13|q -1 [998, 1006[ "NOT_SUPPORTED"
  vstack:14|d DWORD "[stack:48|d]" vstack:14|d -1 [390, 1142[ "NOT_SUPPORTED"
  vstack:15|d DWORD "[stack:56|d]" vstack:15|d -1 [398, 1514[ "NOT_SUPPORTED"
  vstack:16|d DWORD "[stack:40|d]" vstack:16|d -1 [386, 1138[ "NOT_SUPPORTED"
  vstack:17|d DWORD "[stack:44|d]" vstack:17|d -1 [388, 1150[ "NOT_SUPPORTED"
  vstack:19|q QWORD "[stack:120|q]" vstack:19|q -1 [544, 554[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rbx|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   82  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r13|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr  112  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  116  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction stack:88|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVSXB value: rdx|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r10|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVSXB input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction r9|DWORD = ADD (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rax|DWORD = SHR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction TESTBYTEBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1306  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1308  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1374  <|@ instruction r14|QWORD[*] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1376  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction r11|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1380  <|@ instruction rdi|QWORD = LEA address: [r14|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1384  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1386  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1388  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1390  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  332  <|@ instruction rsi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rsi|DWORD = SHL (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr  344  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  592  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  594  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  702  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  704  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  708  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  710  <|@ instruction r10|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  712  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r10|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction MOV x: [rsi|QWORD + r10|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  756  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  864  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rdi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction r11|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1130  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1134  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1136  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1138  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1142  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1146  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1148  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1486  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1514  <|@ instruction rcx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1516  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  812  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  822  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  498  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  500  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  502  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  504  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction stack:120|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rsi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-100889|0xfffffffffffe75e7] <|@ <|@
      nr  938  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  906  <|@ instruction r10|DWORD = MOVE input: int[-99865|0xfffffffffffe79e7] <|@ <|@
      nr  908  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  876  <|@ instruction r10|DWORD = MOVE input: int[-98841|0xfffffffffffe7de7] <|@ <|@
      nr  878  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1322  <|@ instruction r10|DWORD = MOVE input: int[-95769|0xfffffffffffe89e7] <|@ <|@
      nr 1324  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1328  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1330  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOVE input: int[-87571|0xfffffffffffea9ed] <|@ <|@
      nr  134  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1476  <|@ instruction r10|DWORD = MOVE input: int[-97811|0xfffffffffffe81ed] <|@ <|@
      nr 1478  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1480  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1408  <|@ instruction r10|DWORD = MOVE input: int[-91667|0xfffffffffffe99ed] <|@ <|@
      nr 1410  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1412  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1416  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1418  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1238  <|@ instruction r10|DWORD = MOVE input: int[-93721|0xfffffffffffe91e7] <|@ <|@
      nr 1240  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1242  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1202  <|@ instruction r10|DWORD = MOVE input: int[-92697|0xfffffffffffe95e7] <|@ <|@
      nr 1204  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1210  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1432  <|@ instruction r10|DWORD = MOVE input: int[-90643|0xfffffffffffe9ded] <|@ <|@
      nr 1434  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1436  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1438  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1440  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1442  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  166  <|@ instruction r10|DWORD = MOVE input: int[-88595|0xfffffffffffea5ed] <|@ <|@
      nr  168  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOVE input: int[-94745|0xfffffffffffe8de7] <|@ <|@
      nr 1280  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1284  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: rbp|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[-89619|0xfffffffffffea1ed] <|@ <|@
      nr  214  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1544  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-6707|0xffffffffffffe5cd] <|@ <|@
      nr 1556  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r9|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rbx|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   82  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r13|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr  112  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  116  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction stack:88|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVSXB value: rdx|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r10|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVSXB input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction r9|DWORD = ADD (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rax|DWORD = SHR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction TESTBYTEBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1306  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1308  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1374  <|@ instruction r14|QWORD[*] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1376  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction r11|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1380  <|@ instruction rdi|QWORD = LEA address: [r14|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1384  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1386  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1388  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1390  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  332  <|@ instruction rsi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rsi|DWORD = SHL (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr  344  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  592  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  594  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  702  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  704  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  708  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  710  <|@ instruction r10|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  712  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r10|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction MOV x: [rsi|QWORD + r10|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  756  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  864  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rdi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction r11|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1012  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1130  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1134  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1136  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1138  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1142  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1146  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1148  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1486  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1514  <|@ instruction rcx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1516  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  812  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  822  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  498  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  500  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  502  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  504  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction stack:120|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rsi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-100889|0xfffffffffffe75e7] <|@ <|@
      nr  938  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  906  <|@ instruction r10|DWORD = MOVE input: int[-99865|0xfffffffffffe79e7] <|@ <|@
      nr  908  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  876  <|@ instruction r10|DWORD = MOVE input: int[-98841|0xfffffffffffe7de7] <|@ <|@
      nr  878  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1322  <|@ instruction r10|DWORD = MOVE input: int[-95769|0xfffffffffffe89e7] <|@ <|@
      nr 1324  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1326  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1328  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1330  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOVE input: int[-87571|0xfffffffffffea9ed] <|@ <|@
      nr  134  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1476  <|@ instruction r10|DWORD = MOVE input: int[-97811|0xfffffffffffe81ed] <|@ <|@
      nr 1478  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1480  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1482  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1408  <|@ instruction r10|DWORD = MOVE input: int[-91667|0xfffffffffffe99ed] <|@ <|@
      nr 1410  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1412  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1416  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1418  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1238  <|@ instruction r10|DWORD = MOVE input: int[-93721|0xfffffffffffe91e7] <|@ <|@
      nr 1240  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1242  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1202  <|@ instruction r10|DWORD = MOVE input: int[-92697|0xfffffffffffe95e7] <|@ <|@
      nr 1204  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1210  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1432  <|@ instruction r10|DWORD = MOVE input: int[-90643|0xfffffffffffe9ded] <|@ <|@
      nr 1434  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1436  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1438  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1440  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1442  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  166  <|@ instruction r10|DWORD = MOVE input: int[-88595|0xfffffffffffea5ed] <|@ <|@
      nr  168  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOVE input: int[-94745|0xfffffffffffe8de7] <|@ <|@
      nr 1280  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1282  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1284  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1286  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: rbp|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[-89619|0xfffffffffffea1ed] <|@ <|@
      nr  214  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1544  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-6707|0xffffffffffffe5cd] <|@ <|@
      nr 1556  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r9|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rbx|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   82  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r13|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr  112  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  116  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction stack:88|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVSXB value: rdx|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r10|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVSXB input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction r9|DWORD = ADD (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rax|DWORD = SHR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction TESTBYTEBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1306  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1308  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1374  <|@ instruction r14|QWORD[*] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1376  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction r11|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1380  <|@ instruction rdi|QWORD = LEA address: [r14|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1384  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1386  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1388  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1390  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  332  <|@ instruction rsi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rsi|DWORD = SHL (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr  344  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  592  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  594  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  702  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  704  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  708  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  710  <|@ instruction r10|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  712  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r10|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction MOV x: [rsi|QWORD + r10|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  756  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  864  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rdi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction r11|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  556  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1130  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1134  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1136  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1138  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1142  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1146  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1148  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1486  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1514  <|@ instruction rcx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1516  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  660  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  812  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  822  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  826  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  498  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  500  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  502  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  504  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction stack:120|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rsi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-100889|0xfffffffffffe75e7] <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  906  <|@ instruction r10|DWORD = MOVE input: int[-99865|0xfffffffffffe79e7] <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  876  <|@ instruction r10|DWORD = MOVE input: int[-98841|0xfffffffffffe7de7] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1322  <|@ instruction r10|DWORD = MOVE input: int[-95769|0xfffffffffffe89e7] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOVE input: int[-87571|0xfffffffffffea9ed] <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1476  <|@ instruction r10|DWORD = MOVE input: int[-97811|0xfffffffffffe81ed] <|@ <|@
      nr 1482  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1408  <|@ instruction r10|DWORD = MOVE input: int[-91667|0xfffffffffffe99ed] <|@ <|@
      nr 1418  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1238  <|@ instruction r10|DWORD = MOVE input: int[-93721|0xfffffffffffe91e7] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1202  <|@ instruction r10|DWORD = MOVE input: int[-92697|0xfffffffffffe95e7] <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1432  <|@ instruction r10|DWORD = MOVE input: int[-90643|0xfffffffffffe9ded] <|@ <|@
      nr 1442  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  166  <|@ instruction r10|DWORD = MOVE input: int[-88595|0xfffffffffffea5ed] <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOVE input: int[-94745|0xfffffffffffe8de7] <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1204  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1210  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: rbp|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[-89619|0xfffffffffffea1ed] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1544  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-6707|0xffffffffffffe5cd] <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1556  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r9|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rbx|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   82  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r13|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr  112  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  116  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction stack:88|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVSXB value: rdx|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r10|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVSXB input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction r9|DWORD = ADD (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rax|DWORD = SHR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction TESTBYTEBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1306  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1308  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1374  <|@ instruction r14|QWORD[*] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1376  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction r11|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1380  <|@ instruction rdi|QWORD = LEA address: [r14|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1384  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1386  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1388  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1390  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  332  <|@ instruction rsi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rsi|DWORD = SHL (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr  344  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  592  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  594  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  702  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  704  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  708  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  710  <|@ instruction r10|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  712  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r10|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction MOV x: [rsi|QWORD + r10|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  756  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  864  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rdi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction r11|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  556  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1130  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1134  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1136  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1138  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1142  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1146  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1148  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1486  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1514  <|@ instruction rcx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1516  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  812  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  498  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  500  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  502  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  504  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction stack:120|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rsi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-100889|0xfffffffffffe75e7] <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  906  <|@ instruction r10|DWORD = MOVE input: int[-99865|0xfffffffffffe79e7] <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  876  <|@ instruction r10|DWORD = MOVE input: int[-98841|0xfffffffffffe7de7] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1322  <|@ instruction r10|DWORD = MOVE input: int[-95769|0xfffffffffffe89e7] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOVE input: int[-87571|0xfffffffffffea9ed] <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1476  <|@ instruction r10|DWORD = MOVE input: int[-97811|0xfffffffffffe81ed] <|@ <|@
      nr 1482  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1408  <|@ instruction r10|DWORD = MOVE input: int[-91667|0xfffffffffffe99ed] <|@ <|@
      nr 1418  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1238  <|@ instruction r10|DWORD = MOVE input: int[-93721|0xfffffffffffe91e7] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1202  <|@ instruction r10|DWORD = MOVE input: int[-92697|0xfffffffffffe95e7] <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1432  <|@ instruction r10|DWORD = MOVE input: int[-90643|0xfffffffffffe9ded] <|@ <|@
      nr 1442  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  166  <|@ instruction r10|DWORD = MOVE input: int[-88595|0xfffffffffffea5ed] <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOVE input: int[-94745|0xfffffffffffe8de7] <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1204  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: rbp|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[-89619|0xfffffffffffea1ed] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1544  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-6707|0xffffffffffffe5cd] <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1556  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r9|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rbx|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   82  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r13|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr  112  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  116  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction stack:88|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVSXB value: rdx|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r10|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVSXB input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction r9|DWORD = ADD (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rax|DWORD = SHR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction TESTBYTEBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1306  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1308  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1374  <|@ instruction r14|QWORD[*] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1376  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction r11|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1380  <|@ instruction rdi|QWORD = LEA address: [r14|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1384  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1386  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1388  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1390  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  332  <|@ instruction rsi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rsi|DWORD = SHL (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr  344  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  592  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  594  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  702  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  704  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  708  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  710  <|@ instruction r10|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  712  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r10|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction MOV x: [rsi|QWORD + r10|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  756  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  864  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rdi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction r11|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  556  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1130  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1134  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1136  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1138  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1142  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1146  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1148  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1486  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1514  <|@ instruction rcx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1516  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  812  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  498  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  500  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  502  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  504  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction stack:120|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rsi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-100889|0xfffffffffffe75e7] <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  906  <|@ instruction r10|DWORD = MOVE input: int[-99865|0xfffffffffffe79e7] <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  876  <|@ instruction r10|DWORD = MOVE input: int[-98841|0xfffffffffffe7de7] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1322  <|@ instruction r10|DWORD = MOVE input: int[-95769|0xfffffffffffe89e7] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOVE input: int[-87571|0xfffffffffffea9ed] <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1476  <|@ instruction r10|DWORD = MOVE input: int[-97811|0xfffffffffffe81ed] <|@ <|@
      nr 1482  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1408  <|@ instruction r10|DWORD = MOVE input: int[-91667|0xfffffffffffe99ed] <|@ <|@
      nr 1418  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1238  <|@ instruction r10|DWORD = MOVE input: int[-93721|0xfffffffffffe91e7] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1202  <|@ instruction r10|DWORD = MOVE input: int[-92697|0xfffffffffffe95e7] <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1432  <|@ instruction r10|DWORD = MOVE input: int[-90643|0xfffffffffffe9ded] <|@ <|@
      nr 1442  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  166  <|@ instruction r10|DWORD = MOVE input: int[-88595|0xfffffffffffea5ed] <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOVE input: int[-94745|0xfffffffffffe8de7] <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1204  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: rbp|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[-89619|0xfffffffffffea1ed] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1544  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-6707|0xffffffffffffe5cd] <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1556  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r9|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rbx|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   82  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r13|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr  112  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  116  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction stack:88|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVSXB value: rdx|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r10|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVSXB input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction r9|DWORD = ADD (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rax|DWORD = SHR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction TESTBYTEBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1306  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1308  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1374  <|@ instruction r14|QWORD[*] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1376  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction r11|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1380  <|@ instruction rdi|QWORD = LEA address: [r14|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1384  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1386  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1388  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1390  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  332  <|@ instruction rsi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rsi|DWORD = SHL (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr  344  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  592  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  594  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  702  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  704  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  708  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  710  <|@ instruction r10|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  712  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r10|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction MOV x: [rsi|QWORD + r10|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  756  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  864  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rdi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction r11|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  556  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1130  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1134  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1136  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1138  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1142  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1146  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1148  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1486  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1514  <|@ instruction rcx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1516  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  812  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  498  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  500  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  502  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  504  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction stack:120|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rsi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-100889|0xfffffffffffe75e7] <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  906  <|@ instruction r10|DWORD = MOVE input: int[-99865|0xfffffffffffe79e7] <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  876  <|@ instruction r10|DWORD = MOVE input: int[-98841|0xfffffffffffe7de7] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1322  <|@ instruction r10|DWORD = MOVE input: int[-95769|0xfffffffffffe89e7] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOVE input: int[-87571|0xfffffffffffea9ed] <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1476  <|@ instruction r10|DWORD = MOVE input: int[-97811|0xfffffffffffe81ed] <|@ <|@
      nr 1482  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1408  <|@ instruction r10|DWORD = MOVE input: int[-91667|0xfffffffffffe99ed] <|@ <|@
      nr 1418  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1238  <|@ instruction r10|DWORD = MOVE input: int[-93721|0xfffffffffffe91e7] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1202  <|@ instruction r10|DWORD = MOVE input: int[-92697|0xfffffffffffe95e7] <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1432  <|@ instruction r10|DWORD = MOVE input: int[-90643|0xfffffffffffe9ded] <|@ <|@
      nr 1442  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  166  <|@ instruction r10|DWORD = MOVE input: int[-88595|0xfffffffffffea5ed] <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOVE input: int[-94745|0xfffffffffffe8de7] <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1204  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: rbp|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[-89619|0xfffffffffffea1ed] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1544  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-6707|0xffffffffffffe5cd] <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1556  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r9|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rbx|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   82  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r13|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr  112  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  116  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction stack:88|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVSXB value: rdx|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r10|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVSXB input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction r9|DWORD = ADD (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rax|DWORD = SHR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction TESTBYTEBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1306  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1308  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1374  <|@ instruction r14|QWORD[*] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1376  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction r11|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1380  <|@ instruction rdi|QWORD = LEA address: [r14|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1384  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1386  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1388  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1390  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  332  <|@ instruction rsi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rsi|DWORD = SHL (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr  344  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  592  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  594  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  702  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  704  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  708  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  710  <|@ instruction r10|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  712  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r10|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction MOV x: [rsi|QWORD + r10|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  756  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  864  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rdi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction r11|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  556  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1130  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1134  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1136  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1138  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1142  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1146  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1148  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1486  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1514  <|@ instruction rcx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1516  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  812  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  498  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  500  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  502  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  504  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction stack:120|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rsi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-100889|0xfffffffffffe75e7] <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1556  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r9|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  906  <|@ instruction r10|DWORD = MOVE input: int[-99865|0xfffffffffffe79e7] <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  876  <|@ instruction r10|DWORD = MOVE input: int[-98841|0xfffffffffffe7de7] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1322  <|@ instruction r10|DWORD = MOVE input: int[-95769|0xfffffffffffe89e7] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1204  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: rbp|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOVE input: int[-87571|0xfffffffffffea9ed] <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1476  <|@ instruction r10|DWORD = MOVE input: int[-97811|0xfffffffffffe81ed] <|@ <|@
      nr 1482  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1408  <|@ instruction r10|DWORD = MOVE input: int[-91667|0xfffffffffffe99ed] <|@ <|@
      nr 1418  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1238  <|@ instruction r10|DWORD = MOVE input: int[-93721|0xfffffffffffe91e7] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1202  <|@ instruction r10|DWORD = MOVE input: int[-92697|0xfffffffffffe95e7] <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1432  <|@ instruction r10|DWORD = MOVE input: int[-90643|0xfffffffffffe9ded] <|@ <|@
      nr 1442  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  166  <|@ instruction r10|DWORD = MOVE input: int[-88595|0xfffffffffffea5ed] <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOVE input: int[-94745|0xfffffffffffe8de7] <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[-89619|0xfffffffffffea1ed] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1544  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-6707|0xffffffffffffe5cd] <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rbx|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   82  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r13|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr  112  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  116  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction stack:88|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVSXB value: rdx|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r10|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVSXB input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction r9|DWORD = ADD (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rax|DWORD = SHR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction TESTBYTEBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1306  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1308  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1374  <|@ instruction r14|QWORD[*] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1376  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction r11|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1380  <|@ instruction rdi|QWORD = LEA address: [r14|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1384  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1386  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1388  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1390  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  332  <|@ instruction rsi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rsi|DWORD = SHL (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr  344  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  592  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  594  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  702  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  704  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  708  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  710  <|@ instruction r10|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  712  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r10|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction MOV x: [rsi|QWORD + r10|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  756  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  864  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rdi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction r11|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  556  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1130  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1134  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1136  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1138  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1142  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1146  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1148  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1486  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1514  <|@ instruction rcx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1516  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  812  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  498  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  500  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  502  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  504  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction stack:120|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rsi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-100889|0xfffffffffffe75e7] <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1556  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r9|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  906  <|@ instruction r10|DWORD = MOVE input: int[-99865|0xfffffffffffe79e7] <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  876  <|@ instruction r10|DWORD = MOVE input: int[-98841|0xfffffffffffe7de7] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1322  <|@ instruction r10|DWORD = MOVE input: int[-95769|0xfffffffffffe89e7] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1204  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: rbp|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOVE input: int[-87571|0xfffffffffffea9ed] <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1476  <|@ instruction r10|DWORD = MOVE input: int[-97811|0xfffffffffffe81ed] <|@ <|@
      nr 1482  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1408  <|@ instruction r10|DWORD = MOVE input: int[-91667|0xfffffffffffe99ed] <|@ <|@
      nr 1418  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1238  <|@ instruction r10|DWORD = MOVE input: int[-93721|0xfffffffffffe91e7] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1202  <|@ instruction r10|DWORD = MOVE input: int[-92697|0xfffffffffffe95e7] <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1432  <|@ instruction r10|DWORD = MOVE input: int[-90643|0xfffffffffffe9ded] <|@ <|@
      nr 1442  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  166  <|@ instruction r10|DWORD = MOVE input: int[-88595|0xfffffffffffea5ed] <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOVE input: int[-94745|0xfffffffffffe8de7] <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[-89619|0xfffffffffffea1ed] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1544  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-6707|0xffffffffffffe5cd] <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rbx|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   82  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r13|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr  112  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  116  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction stack:88|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVSXB value: rdx|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r10|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVSXB input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction r9|DWORD = ADD (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rax|DWORD = SHR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction TESTBYTEBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1306  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1308  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1374  <|@ instruction r14|QWORD[*] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1376  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction r11|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1380  <|@ instruction rdi|QWORD = LEA address: [r14|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1384  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1386  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1388  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1390  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  332  <|@ instruction rsi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rsi|DWORD = SHL (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr  344  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  592  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  594  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  702  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  704  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  708  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  710  <|@ instruction r10|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  712  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r10|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction MOV x: [rsi|QWORD + r10|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  756  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  864  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rdi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction r11|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  556  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1130  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1134  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1136  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1138  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1142  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1146  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1148  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1486  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1514  <|@ instruction rcx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1516  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  642  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  812  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  498  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  500  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  502  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  504  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction stack:120|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rsi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-100889|0xfffffffffffe75e7] <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1556  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r9|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  906  <|@ instruction r10|DWORD = MOVE input: int[-99865|0xfffffffffffe79e7] <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  876  <|@ instruction r10|DWORD = MOVE input: int[-98841|0xfffffffffffe7de7] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1322  <|@ instruction r10|DWORD = MOVE input: int[-95769|0xfffffffffffe89e7] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1204  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: rbp|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOVE input: int[-87571|0xfffffffffffea9ed] <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1476  <|@ instruction r10|DWORD = MOVE input: int[-97811|0xfffffffffffe81ed] <|@ <|@
      nr 1482  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1408  <|@ instruction r10|DWORD = MOVE input: int[-91667|0xfffffffffffe99ed] <|@ <|@
      nr 1418  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1238  <|@ instruction r10|DWORD = MOVE input: int[-93721|0xfffffffffffe91e7] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1202  <|@ instruction r10|DWORD = MOVE input: int[-92697|0xfffffffffffe95e7] <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1432  <|@ instruction r10|DWORD = MOVE input: int[-90643|0xfffffffffffe9ded] <|@ <|@
      nr 1442  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  166  <|@ instruction r10|DWORD = MOVE input: int[-88595|0xfffffffffffea5ed] <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOVE input: int[-94745|0xfffffffffffe8de7] <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[-89619|0xfffffffffffea1ed] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1544  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-6707|0xffffffffffffe5cd] <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [r10:0, r11:0]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rbx|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   82  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  108  <|@ st <@st|@reference-map: [rbp:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:64]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r13|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  110  <|@ st <@st|@reference-map: [rbp:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:64]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr  112  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [rbp:0, rsi:0, r8:0, r10:0, r11:0, r14:0, stack:64]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  116  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction stack:88|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVSXB value: rdx|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r10|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVSXB input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction r9|DWORD = ADD (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rax|DWORD = SHR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction TESTBYTEBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1306  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1308  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1374  <|@ instruction r14|QWORD[*] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1376  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction r11|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1380  <|@ instruction rdi|QWORD = LEA address: [r14|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1384  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1386  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1388  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1390  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  332  <|@ instruction rsi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rsi|DWORD = SHL (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr  344  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  592  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  594  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  702  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  704  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  708  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  710  <|@ instruction r10|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  712  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r10|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction MOV x: [rsi|QWORD + r10|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  756  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  864  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rdi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction r11|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  556  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1130  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1134  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1136  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1138  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1142  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1146  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1148  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1486  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1514  <|@ instruction rcx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1516  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@reference-map: [r11:0, stack:20, stack:36, stack:40, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  642  <|@ st <@st|@reference-map: [rax:0, r11:0, stack:20, stack:36, stack:40, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  812  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  498  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  500  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  502  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  504  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction stack:120|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rsi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ st <@st|@reference-map: [r11:0, stack:20, stack:36, stack:40, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  462  <|@ st <@st|@reference-map: [rax:0, r11:0, stack:20, stack:36, stack:40, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-100889|0xfffffffffffe75e7] <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1556  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@reference-map: [r8:0, r9:0]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r9|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  906  <|@ instruction r10|DWORD = MOVE input: int[-99865|0xfffffffffffe79e7] <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  876  <|@ instruction r10|DWORD = MOVE input: int[-98841|0xfffffffffffe7de7] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1322  <|@ instruction r10|DWORD = MOVE input: int[-95769|0xfffffffffffe89e7] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1204  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ st <@st|@reference-map: [rax:0, rbp:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: rbp|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOVE input: int[-87571|0xfffffffffffea9ed] <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1476  <|@ instruction r10|DWORD = MOVE input: int[-97811|0xfffffffffffe81ed] <|@ <|@
      nr 1482  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1408  <|@ instruction r10|DWORD = MOVE input: int[-91667|0xfffffffffffe99ed] <|@ <|@
      nr 1418  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1238  <|@ instruction r10|DWORD = MOVE input: int[-93721|0xfffffffffffe91e7] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1202  <|@ instruction r10|DWORD = MOVE input: int[-92697|0xfffffffffffe95e7] <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1432  <|@ instruction r10|DWORD = MOVE input: int[-90643|0xfffffffffffe9ded] <|@ <|@
      nr 1442  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  166  <|@ instruction r10|DWORD = MOVE input: int[-88595|0xfffffffffffea5ed] <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOVE input: int[-94745|0xfffffffffffe8de7] <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[-89619|0xfffffffffffea1ed] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1544  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-6707|0xffffffffffffe5cd] <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B47" "B49" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD <|@ <|@
      nr   58  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [r10:0, r11:0]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   64  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rcx|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   66  <|@ instruction r9|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   68  <|@ instruction stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction rbx|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ instruction rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   76  <|@ instruction stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   80  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   82  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr   84  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  108  <|@ st <@st|@reference-map: [rbp:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:64]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r13|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  110  <|@ st <@st|@reference-map: [rbp:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:64]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction r14|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr  112  <|@ instruction rdx|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [rbp:0, rsi:0, r8:0, r10:0, r11:0, r14:0, stack:64]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r10|QWORD[.] r11|QWORD[.] - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  116  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction stack:88|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVSXB value: rdx|DWORD size: DWORD <|@ <|@
      nr  196  <|@ instruction r10|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  256  <|@ instruction rcx|DWORD = MOVSXB input: [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  258  <|@ instruction r11|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction r9|DWORD = ADD (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD <|@ <|@
      nr  266  <|@ instruction rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rax|DWORD = SHR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr  278  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281360264679662
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B8" "B31" 
    successors "B33" "B44" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction TESTBYTEBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B43" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1250  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1264  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction rdi|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1306  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1308  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B48" 
    xhandlers
    flags 
    probability 4607080454640689552
    begin_IR
      LIR
      nr 1334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1374  <|@ instruction r14|QWORD[*] = MOVE input: r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1376  <|@ instruction rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ instruction r11|QWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr 1380  <|@ instruction rdi|QWORD = LEA address: [r14|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1382  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr 1384  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1386  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1388  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1390  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B42" "B47" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B46" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  328  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction rcx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  332  <|@ instruction rsi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rsi|DWORD = SHL (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  340  <|@ instruction CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: > <|@ <|@
      nr  344  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  346  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  348  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  382  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  590  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  592  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  594  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B22" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  700  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  702  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  704  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  708  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  710  <|@ instruction r10|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  712  <|@ instruction CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction r10|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621035454618373799
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction MOV x: [rsi|QWORD + r10|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  756  <|@ instruction r10|QWORD = LEA address: [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  758  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" 
    successors "B20" "B21" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621084402462450722
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4590929744705011106
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4590993030806443896
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  844  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B16" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  862  <|@ instruction r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: > <|@ <|@
      nr  864  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591056956161426512
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  946  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  954  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction rdi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction r11|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  994  <|@ instruction r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  996  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  998  <|@ instruction stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1002  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1004  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1006  <|@ instruction rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B14" "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591057175671244048
    begin_IR
      LIR
      nr 1014  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  556  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1130  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3 <|@ <|@
      nr 1132  <|@ instruction MOV (x: [r8|DWORD[_] * 8 + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1134  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc <|@ <|@
      nr 1136  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1138  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1140  <|@ instruction r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1142  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1144  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1146  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr 1148  <|@ instruction rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1150  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr 1152  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B48" 
    xhandlers
    flags 
    probability 4577679327978036232
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1486  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1512  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1514  <|@ instruction rcx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1516  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1518  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:67) [bci: 4]
locals: - - - - 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16] <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B24" 
    xhandlers
    flags 
    probability 4561321668709346291
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  602  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  610  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  612  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  638  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  640  <|@ st <@st|@reference-map: [r11:0, stack:20, stack:36, stack:40, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  642  <|@ st <@st|@reference-map: [rax:0, r11:0, stack:20, stack:36, stack:40, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  644  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  652  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD <|@ <|@
      nr  662  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B23" 
    xhandlers
    flags 
    probability 4561239844254968542
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  774  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  776  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  778  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  780  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  782  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  812  <|@ instruction rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  818  <|@ instruction r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  820  <|@ instruction rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ instruction stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  426  <|@ instruction r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD + 23] size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4524231394976603217
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  496  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  498  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  500  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  502  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  504  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  506  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B12" 
    successors "B31" 
    xhandlers
    flags 
    probability 4524303323953613275
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction stack:120|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  548  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  550  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  554  <|@ instruction rsi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    probability 4494692283017028220
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  460  <|@ st <@st|@reference-map: [r11:0, stack:20, stack:36, stack:40, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  462  <|@ st <@st|@reference-map: [rax:0, r11:0, stack:20, stack:36, stack:40, stack:48, stack:56, stack:64]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: stack:80|QWORD[.] stack:72|QWORD[.] - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  464  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  926  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-100889|0xfffffffffffe75e7] <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B2" "B4" "B6" "B46" "B25" "B27" "B29" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1556  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1558  <|@ instruction r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1580  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ st <@st|@reference-map: [r8:0, r9:0]
live-base-pointers: []
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0]
locals: r9|QWORD[.] r8|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  906  <|@ instruction r10|DWORD = MOVE input: int[-99865|0xfffffffffffe79e7] <|@ <|@
      nr  912  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  876  <|@ instruction r10|DWORD = MOVE input: int[-98841|0xfffffffffffe7de7] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1312  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1322  <|@ instruction r10|DWORD = MOVE input: int[-95769|0xfffffffffffe89e7] <|@ <|@
      nr 1332  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B35" "B44" "B43" "B37" "B39" "B41" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1204  <|@ instruction rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1206  <|@ instruction rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ st <@st|@reference-map: [rax:0, rbp:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD - 
java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4]
locals: rbp|QWORD[.] - - - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4]
locals: rbp|QWORD[.] rax|QWORD[.] rbx|DWORD r9|DWORD 
java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:38, 35, 4, 4, 16] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  132  <|@ instruction r10|DWORD = MOVE input: int[-87571|0xfffffffffffea9ed] <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction r11|QWORD = MOVE input: long[3860|0xf14] <|@ <|@
      nr 1476  <|@ instruction r10|DWORD = MOVE input: int[-97811|0xfffffffffffe81ed] <|@ <|@
      nr 1482  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction r11|QWORD = MOVE input: long[5140|0x1414] <|@ <|@
      nr 1408  <|@ instruction r10|DWORD = MOVE input: int[-91667|0xfffffffffffe99ed] <|@ <|@
      nr 1418  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1238  <|@ instruction r10|DWORD = MOVE input: int[-93721|0xfffffffffffe91e7] <|@ <|@
      nr 1248  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1202  <|@ instruction r10|DWORD = MOVE input: int[-92697|0xfffffffffffe95e7] <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction r11|QWORD = MOVE input: long[4500|0x1194] <|@ <|@
      nr 1432  <|@ instruction r10|DWORD = MOVE input: int[-90643|0xfffffffffffe9ded] <|@ <|@
      nr 1442  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  166  <|@ instruction r10|DWORD = MOVE input: int[-88595|0xfffffffffffea5ed] <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1278  <|@ instruction r10|DWORD = MOVE input: int[-94745|0xfffffffffffe8de7] <|@ <|@
      nr 1288  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction r11|QWORD = MOVE input: long[2580|0xa14] <|@ <|@
      nr  212  <|@ instruction r10|DWORD = MOVE input: int[-89619|0xfffffffffffea1ed] <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B50" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1544  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1554  <|@ instruction r10|DWORD = MOVE input: int[-6707|0xffffffffffffe5cd] <|@ <|@
      nr 1560  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: getfield      #4          // java.util.Formatter.a:java.lang.Appendable
     4: aload_0       
     5: getfield      #1          // s:java.lang.String
     8: aload_0       
     9: getfield      #2          // start:int
    12: aload_0       
    13: getfield      #3          // end:int
    16: invokeinterface#5, 4       // java.lang.Appendable.append:(java.lang.CharSequence, int, int)java.lang.Appendable
    21: pop           
    22: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec789041817f20000000000f8544080000909090909090909090909090909090909090909090909090909048896c24704c8bd64c8bda458b430c428b0cc508000000458b4a1044894c2464418b5a0c418b7a148bc748c1e003488944244048be0000002b787f0000488d0c0e418be848c1e503483b0d000000000f8412000000483b0d000000000f8434040000e9a4070000909090909090909090428b34c514000000448b2cf50c000000448b34fd140000000fbe14fd10000000428b3cf50c00000085db0f8c8406000090909090413bd90f8f0c0700004c8954243048896c2428909090909090900fbeca448bd741d3ea453bca0f8f210700004c895c243844894424249090909090909090909090909090468b14c50c000000420fbe0cc510000000458bd9442bdb458bcb4503ca44894c24600fbec18be98bc88944245c418bc5d3e8418bc92bc848c1e60383f9010f8db6000000909090909090904084ed0f85640600009090909084d20f8510060000909090904585d20f8c32060000909090904585db0f8c0c0600009090909090412bfb3bdf0f8f660600009090909090908b7e0c412bfb443bd70f8f5805000090909090909090909090909090909090909049c1e603498d7c1e104a8d741610498bd3e800000000448b442424448b4c246046890cc50c00000090909090909090488b6c24704883c478493ba7500400000f875c060000c5f877c348897424189090909090909090909090909090908b4c245c418bc1d3e0412bc5b9020000008bf18b4c245cd3e64103f53bf00f4fc64103c58bc8ffc981f9f7ffff7f0f83190500008b74245c448954245c9090909090909090908bced3f8d3e0443be80f84470300009090909090909090909090498bb7b80100008bc8488d49174883e1f84c8bd14c03d64d3b97c80100000f874f02000090909090909090909090909090904d8997b80100000f188431000100000f188431400100000f1884318001000048c70601000000c74608addeadde89460c4c8d51f04981fa000800000f837202000090909049c7c210000000e9270000006666660f1f840000000000666666900f1f440000909090909090904ac70416000000004d8d520890909090493bca77e490909090909090909090909090443be8458bd5440f4fd04585d20f8ca503000090909090453bd50f878603000090909090443bd00f873d03000044895c2458896c2454897c24508954244c4489742414895c2448488b7c24189090909090909090909090909090904c8bde488d7f104889742418498d7310498bd2e800000000488b742418488b6c2428448b442424909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f8432000000428b0cc51400000048c1e1034885c90f841d000000498b57284883fa000f84510400004883ea08498957284903573848890a488bd648c1ea03428914c514000000488bd54833d648c1ea160f8442000000488bd548c1ea0948b900e0368d787f00004803d1803a027429f083042400803a00741fc60200498b4f484885c90f84ff0300004883e90849894f4849034f58488911448b4c2460448b5c2458448b54245c8b7c24508b54244c448b7424148b5c24488b6c2454e999fcffff895c24489090909090909090909090488bf5488b5424408b4c2448448b44246490e8000000000f1f840000000000e9f8fcffff44895c2458896c2454897c24508954244c4489742414488b6c2428895c24484c8b5c241848beaddeaddeaddeadde9090909090909090908bd0448bc8e8000000000f1f8400000000008500488bf0418bc14c895c2418448b4c2460448b5c24588b54244c448b7424148b6c2454e9d4fdffff44895c2458896c2454897c24508954244c4489742414488b6c2428895c2448448bc84c8b5c2418909090909090909090498bca488d7e104833c0f348aa418bc1448b4c2460448b5c24588b7c24508b6c2454e979fdffff44895c2458896c2454897c24508954244c4489742414488b6c2428895c24484c8b5c24189090909090909090909090498bbfb8010000458bd5498d72174883e6f8488bd64803d7493b97c80100000f876f0000009090909090909090909090498997b80100000f18843e000100000f18843e400100000f18843e8001000048c70701000000c74708addeadde44896f0c9090909090909090909090909090498bf3488bd748897c2408488d7e10488d7210498bd2e800000000488b742408e938fdffff48beaddeaddeaddeadde909090909090909090418bd5e8000000000f1f8400000000008500488bf8eba390909049c7c30000000041bae775feff4c8b4424384c8b4c243090909090909090458997840400004d899f90040000e8000000000f1f84000000000090909049c7c30000000041bae779feffebc290909049c7c30000000041bae77dfeffebb0895c244890909049c7c30000000041bae789feff488b6c2428488b442440448b4c246490909090909090458997840400004d899f90040000e8000000000f1f8400000000004c895c24384c8954243090909049c7c3140a000041baeda9feffe94cffffff90909049c7c3140f000041baed81feffe937ffffff895c244890909049c7c31414000041baed99feffeb85895c244890909049c7c30000000041bae791feffe96cffffff895c244890909049c7c30000000041bae795feffe953ffffff895c244890909049c7c39411000041baed9dfeffe93affffff4c895c24384c8954243090909049c7c3140a000041baeda5feffe9b7feffff895c244890909049c7c30000000041bae78dfeffe902ffffff4c895c243890909049c7c3140a000041baeda1feffe984feffff4c895c24384c8954243090909049c7c31400000041bacde5ffffe965feffff48896c2470e800000000e9adf7fffff4488d0d90f9ffff49898f68040000e95ff7fffff448890c24e800000000e9b0fbfffff448891424e800000000e902fcfffff441c78784040000f55cffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f54dffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f53bffff49c7879004000000000000e8000000000f1f84000000000041c78784040000edadfeff49c7879004000014050000e8000000000f1f84000000000041c78784040000f548ffff49c7879004000000000000e8000000000f1f84000000000041c787840400008fadfdff49c7879004000000000000e8000000000f1f84000000000041c787840400008ffdfdff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 NOP  <||@
  Comment 81 48 NOP  <||@
  Comment 82 50 NOP  <||@
  Comment 83 52 NOP  <||@
  Comment 84 54 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 89 56 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD  <||@
  Comment 89 58 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 92 60 r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 95 62 r8|DWORD[_] = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 95 [r10:0, r11:0]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-   <||@
  Comment 95 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 99 64 rcx|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 99 [r8:0, r10:0, r11:0]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-   <||@
  Comment 99 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 107 66 r9|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 111 68 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 116 70 rbx|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 120 72 rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 124 74 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3  <||@
  Comment 130 76 stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 135 78 rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 145 80 rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0  <||@
  Comment 149 82 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3  <||@
  Comment 156 84 AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 156 {DataSection[0x0]}  <||@
  Comment 169 {DataSection[0x8]}  <||@
  Comment 187 block B1 null  <||@
  Comment 187 86 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 187 88 NOP  <||@
  Comment 188 90 NOP  <||@
  Comment 189 92 NOP  <||@
  Comment 190 94 NOP  <||@
  Comment 191 96 NOP  <||@
  Comment 192 98 NOP  <||@
  Comment 193 100 NOP  <||@
  Comment 194 102 NOP  <||@
  Comment 195 104 NOP  <||@
  Comment 196 106 rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 204 108 r13|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 204 [rbp:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-   <||@
  Comment 204 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 212 110 r14|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 212 [rbp:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-   <||@
  Comment 212 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 220 112 rdx|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 228 114 rdi|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 228 [rbp:0, rsi:0, r8:0, r10:0, r11:0, r14:0, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-   <||@
  Comment 228 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 236 116 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD  <||@
  Comment 244 block B3 null  <||@
  Comment 244 140 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 244 142 NOP  <||@
  Comment 245 144 NOP  <||@
  Comment 246 146 NOP  <||@
  Comment 247 148 NOP  <||@
  Comment 248 150 CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 257 block B5 null  <||@
  Comment 257 174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 257 176 stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 262 178 stack:88|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 267 180 NOP  <||@
  Comment 268 182 NOP  <||@
  Comment 269 184 NOP  <||@
  Comment 270 186 NOP  <||@
  Comment 271 188 NOP  <||@
  Comment 272 190 NOP  <||@
  Comment 273 192 NOP  <||@
  Comment 274 194 rcx|DWORD = MOVSXB value: rdx|DWORD size: DWORD  <||@
  Comment 277 196 r10|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 283 198 CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD  <||@
  Comment 292 block B7 null  <||@
  Comment 292 220 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 292 222 stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 297 224 stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD  <||@
  Comment 302 226 NOP  <||@
  Comment 303 228 NOP  <||@
  Comment 304 230 NOP  <||@
  Comment 305 232 NOP  <||@
  Comment 306 234 NOP  <||@
  Comment 307 236 NOP  <||@
  Comment 308 238 NOP  <||@
  Comment 309 240 NOP  <||@
  Comment 310 242 NOP  <||@
  Comment 311 244 NOP  <||@
  Comment 312 246 NOP  <||@
  Comment 313 248 NOP  <||@
  Comment 314 250 NOP  <||@
  Comment 315 252 NOP  <||@
  Comment 316 254 r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 324 256 rcx|DWORD = MOVSXB input: [r8|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 333 258 r11|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 339 260 r9|DWORD = ADD (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 345 262 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 350 264 rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD  <||@
  Comment 353 266 rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 355 268 rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 357 270 stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 361 272 rax|DWORD = SHR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 366 274 rcx|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 371 276 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3  <||@
  Comment 375 278 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null  <||@
  Comment 384 block B8 null  <||@
  Comment 384 280 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 384 282 NOP  <||@
  Comment 385 284 NOP  <||@
  Comment 386 286 NOP  <||@
  Comment 387 288 JUMP ~outgoingValues: [] destination: B8 -> B32  <||@
  Comment 387 block B32 null  <||@
  Comment 387 1154 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 387 1156 NOP  <||@
  Comment 388 1158 NOP  <||@
  Comment 389 1160 NOP  <||@
  Comment 390 1162 NOP  <||@
  Comment 391 1164 TESTBYTEBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44  <||@
  Comment 400 block B33 null  <||@
  Comment 400 1166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 400 1168 NOP  <||@
  Comment 401 1170 NOP  <||@
  Comment 402 1172 NOP  <||@
  Comment 403 1174 NOP  <||@
  Comment 404 1176 TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43  <||@
  Comment 412 block B34 null  <||@
  Comment 412 1178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 412 1180 NOP  <||@
  Comment 413 1182 NOP  <||@
  Comment 414 1184 NOP  <||@
  Comment 415 1186 NOP  <||@
  Comment 416 1188 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD  <||@
  Comment 425 block B36 null  <||@
  Comment 425 1214 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 425 1216 NOP  <||@
  Comment 426 1218 NOP  <||@
  Comment 427 1220 NOP  <||@
  Comment 428 1222 NOP  <||@
  Comment 429 1224 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD  <||@
  Comment 438 block B38 null  <||@
  Comment 438 1250 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 438 1252 NOP  <||@
  Comment 439 1254 NOP  <||@
  Comment 440 1256 NOP  <||@
  Comment 441 1258 NOP  <||@
  Comment 442 1260 NOP  <||@
  Comment 443 1262 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 446 1264 CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD  <||@
  Comment 454 block B40 null  <||@
  Comment 454 1290 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 454 1292 NOP  <||@
  Comment 455 1294 NOP  <||@
  Comment 456 1296 NOP  <||@
  Comment 457 1298 NOP  <||@
  Comment 458 1300 NOP  <||@
  Comment 459 1302 NOP  <||@
  Comment 460 1304 rdi|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 463 1306 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 466 1308 CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD  <||@
  Comment 475 block B42 null  <||@
  Comment 475 1334 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 475 1336 NOP  <||@
  Comment 476 1338 NOP  <||@
  Comment 477 1340 NOP  <||@
  Comment 478 1342 NOP  <||@
  Comment 479 1344 NOP  <||@
  Comment 480 1346 NOP  <||@
  Comment 481 1348 NOP  <||@
  Comment 482 1350 NOP  <||@
  Comment 483 1352 NOP  <||@
  Comment 484 1354 NOP  <||@
  Comment 485 1356 NOP  <||@
  Comment 486 1358 NOP  <||@
  Comment 487 1360 NOP  <||@
  Comment 488 1362 NOP  <||@
  Comment 489 1364 NOP  <||@
  Comment 490 1366 NOP  <||@
  Comment 491 1368 NOP  <||@
  Comment 492 1370 NOP  <||@
  Comment 493 1372 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3  <||@
  Comment 497 1374 r14|QWORD[*] = MOVE input: r14|QWORD[.] moveKind: QWORD  <||@
  Comment 497 1376 rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 497 1378 r11|QWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 497 1380 rdi|QWORD = LEA address: [r14|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD  <||@
  Comment 502 1382 rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|DWORD * 1 + 16] size: QWORD  <||@
  Comment 507 1384 rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 510 1386 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 510 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 515 1388 r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD  <||@
  Comment 520 1390 r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 525 1392 MOV (x: [r8|DWORD[_] * 8 + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 533 1394 JUMP ~outgoingValues: [] destination: B42 -> B48  <||@
  Comment 533 block B48 null  <||@
  Comment 533 1522 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 533 1524 NOP  <||@
  Comment 534 1526 NOP  <||@
  Comment 535 1528 NOP  <||@
  Comment 536 1530 NOP  <||@
  Comment 537 1532 NOP  <||@
  Comment 538 1534 NOP  <||@
  Comment 539 1536 NOP  <||@
  Comment 540 1538 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 549 POLL_RETURN_FAR  <||@
  Comment 566 block B9 null  <||@
  Comment 566 290 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 566 292 stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 571 294 NOP  <||@
  Comment 572 296 NOP  <||@
  Comment 573 298 NOP  <||@
  Comment 574 300 NOP  <||@
  Comment 575 302 NOP  <||@
  Comment 576 304 NOP  <||@
  Comment 577 306 NOP  <||@
  Comment 578 308 NOP  <||@
  Comment 579 310 NOP  <||@
  Comment 580 312 NOP  <||@
  Comment 581 314 NOP  <||@
  Comment 582 316 NOP  <||@
  Comment 583 318 NOP  <||@
  Comment 584 320 NOP  <||@
  Comment 585 322 NOP  <||@
  Comment 586 324 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 590 326 rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 595 328 rax|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 598 330 rcx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 603 332 rsi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 605 334 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 609 336 rsi|DWORD = SHL (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 611 338 rsi|DWORD = ADD (x: rsi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 614 340 CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 616 342 rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: >  <||@
  Comment 619 344 rax|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 622 346 rcx|DWORD = DEC value: rax|DWORD size: DWORD  <||@
  Comment 626 348 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null  <||@
  Comment 638 block B10 null  <||@
  Comment 638 350 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 638 352 rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 642 354 stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 647 356 NOP  <||@
  Comment 648 358 NOP  <||@
  Comment 649 360 NOP  <||@
  Comment 650 362 NOP  <||@
  Comment 651 364 NOP  <||@
  Comment 652 366 NOP  <||@
  Comment 653 368 NOP  <||@
  Comment 654 370 NOP  <||@
  Comment 655 372 NOP  <||@
  Comment 656 374 rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 658 376 rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 660 380 rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 662 382 CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD  <||@
  Comment 671 block B15 null  <||@
  Comment 671 562 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 671 564 NOP  <||@
  Comment 672 566 NOP  <||@
  Comment 673 568 NOP  <||@
  Comment 674 570 NOP  <||@
  Comment 675 572 NOP  <||@
  Comment 676 574 NOP  <||@
  Comment 677 576 NOP  <||@
  Comment 678 578 NOP  <||@
  Comment 679 580 NOP  <||@
  Comment 680 582 NOP  <||@
  Comment 681 584 NOP  <||@
  Comment 682 586 rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 689 588 rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 691 590 rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD  <||@
  Comment 695 592 rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD  <||@
  Comment 699 594 r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 705 596 CMPBRANCH (x: r10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD  <||@
  Comment 718 block B17 null  <||@
  Comment 718 666 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 718 668 NOP  <||@
  Comment 719 670 NOP  <||@
  Comment 720 672 NOP  <||@
  Comment 721 674 NOP  <||@
  Comment 722 676 NOP  <||@
  Comment 723 678 NOP  <||@
  Comment 724 680 NOP  <||@
  Comment 725 682 NOP  <||@
  Comment 726 684 NOP  <||@
  Comment 727 686 NOP  <||@
  Comment 728 688 NOP  <||@
  Comment 729 690 NOP  <||@
  Comment 730 692 NOP  <||@
  Comment 731 694 NOP  <||@
  Comment 732 696 MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD  <||@
  Comment 739 698 AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 747 700 AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 755 702 AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 763 704 MOV x: [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 770 706 MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 770 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 777 708 MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 780 710 r10|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD  <||@
  Comment 784 712 CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 797 block B18 null  <||@
  Comment 797 714 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 797 716 NOP  <||@
  Comment 798 718 NOP  <||@
  Comment 799 720 NOP  <||@
  Comment 800 722 r10|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 807 724 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 812 block B20 loop 0 depth 1 header:546|LoopBegin  <||@
  Comment 812 738 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 832 740 NOP  <||@
  Comment 833 742 NOP  <||@
  Comment 834 744 NOP  <||@
  Comment 835 746 NOP  <||@
  Comment 836 748 NOP  <||@
  Comment 837 750 NOP  <||@
  Comment 838 752 NOP  <||@
  Comment 839 754 MOV x: [rsi|QWORD + r10|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 847 756 r10|QWORD = LEA address: [r10|QWORD + 8] size: QWORD  <||@
  Comment 851 758 JUMP ~outgoingValues: [] destination: B20 -> B19  <||@
  Comment 851 block B19 loop 0 depth 1 header:546|LoopBegin  <||@
  Comment 851 726 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 851 728 NOP  <||@
  Comment 852 730 NOP  <||@
  Comment 853 732 NOP  <||@
  Comment 854 734 NOP  <||@
  Comment 855 736 CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD  <||@
  Comment 860 block B21 null  <||@
  Comment 860 760 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 860 762 NOP  <||@
  Comment 861 764 NOP  <||@
  Comment 862 766 NOP  <||@
  Comment 863 768 JUMP ~outgoingValues: [] destination: B21 -> B23  <||@
  Comment 863 block B23 null  <||@
  Comment 863 832 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 863 834 NOP  <||@
  Comment 864 836 NOP  <||@
  Comment 865 838 NOP  <||@
  Comment 866 840 NOP  <||@
  Comment 867 842 rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD  <||@
  Comment 867 844 JUMP ~outgoingValues: [] destination: B23 -> B24  <||@
  Comment 867 block B24 null  <||@
  Comment 867 846 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 867 848 NOP  <||@
  Comment 868 850 NOP  <||@
  Comment 869 852 NOP  <||@
  Comment 870 854 NOP  <||@
  Comment 871 856 NOP  <||@
  Comment 872 858 NOP  <||@
  Comment 873 860 CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 876 862 r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: >  <||@
  Comment 883 864 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD  <||@
  Comment 892 block B26 null  <||@
  Comment 892 884 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 892 886 NOP  <||@
  Comment 893 888 NOP  <||@
  Comment 894 890 NOP  <||@
  Comment 895 892 NOP  <||@
  Comment 896 894 CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD  <||@
  Comment 905 block B28 null  <||@
  Comment 905 914 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 905 916 NOP  <||@
  Comment 906 918 NOP  <||@
  Comment 907 920 NOP  <||@
  Comment 908 922 NOP  <||@
  Comment 909 924 CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD  <||@
  Comment 918 block B30 null  <||@
  Comment 918 944 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 918 946 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 923 948 stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 927 950 stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 931 952 stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 935 954 stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD  <||@
  Comment 940 956 stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 944 958 rdi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 949 960 NOP  <||@
  Comment 950 962 NOP  <||@
  Comment 951 964 NOP  <||@
  Comment 952 966 NOP  <||@
  Comment 953 968 NOP  <||@
  Comment 954 970 NOP  <||@
  Comment 955 972 NOP  <||@
  Comment 956 974 NOP  <||@
  Comment 957 976 NOP  <||@
  Comment 958 978 NOP  <||@
  Comment 959 980 NOP  <||@
  Comment 960 982 NOP  <||@
  Comment 961 984 NOP  <||@
  Comment 962 986 NOP  <||@
  Comment 963 988 NOP  <||@
  Comment 964 990 rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 964 992 r11|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 967 994 r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 967 996 rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 971 998 stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 976 1000 rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD  <||@
  Comment 980 1002 rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 983 1004 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 983 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 988 1006 rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 993 1012 JUMP ~outgoingValues: [] destination: B30 -> B31  <||@
  Comment 993 block B31 null  <||@
  Comment 993 1014 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 993 556 rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 998 558 r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD  <||@
  Comment 1003 1016 NOP  <||@
  Comment 1004 1018 NOP  <||@
  Comment 1005 1020 NOP  <||@
  Comment 1006 1022 NOP  <||@
  Comment 1007 1024 NOP  <||@
  Comment 1008 1026 NOP  <||@
  Comment 1009 1028 NOP  <||@
  Comment 1010 1030 NOP  <||@
  Comment 1011 1032 NOP  <||@
  Comment 1012 1034 NOP  <||@
  Comment 1013 1036 NOP  <||@
  Comment 1014 1038 NOP  <||@
  Comment 1015 1040 NOP  <||@
  Comment 1016 1042 NOP  <||@
  Comment 1017 1044 NOP  <||@
  Comment 1018 1046 NOP  <||@
  Comment 1019 1048 NOP  <||@
  Comment 1020 1050 NOP  <||@
  Comment 1021 1052 NOP  <||@
  Comment 1022 1054 NOP  <||@
  Comment 1023 1056 NOP  <||@
  Comment 1024 1058 NOP  <||@
  Comment 1025 1060 NOP  <||@
  Comment 1026 1062 NOP  <||@
  Comment 1027 1064 NOP  <||@
  Comment 1028 1066 NOP  <||@
  Comment 1029 1068 NOP  <||@
  Comment 1030 1070 NOP  <||@
  Comment 1031 1072 NOP  <||@
  Comment 1032 1074 NOP  <||@
  Comment 1033 1076 NOP  <||@
  Comment 1034 1078 NOP  <||@
  Comment 1035 1080 NOP  <||@
  Comment 1036 1082 NOP  <||@
  Comment 1037 1084 NOP  <||@
  Comment 1038 1086 NOP  <||@
  Comment 1039 1088 NOP  <||@
  Comment 1040 1090 NOP  <||@
  Comment 1041 1092 NOP  <||@
  Comment 1042 1094 NOP  <||@
  Comment 1043 1096 NOP  <||@
  Comment 1044 1098 NOP  <||@
  Comment 1045 1100 NOP  <||@
  Comment 1046 1102 NOP  <||@
  Comment 1047 1104 NOP  <||@
  Comment 1048 1106 NOP  <||@
  Comment 1049 1108 NOP  <||@
  Comment 1050 1110 NOP  <||@
  Comment 1051 1112 NOP  <||@
  Comment 1052 1114 NOP  <||@
  Comment 1053 1116 NOP  <||@
  Comment 1054 1118 NOP  <||@
  Comment 1055 1120 NOP  <||@
  Comment 1056 1122 NOP  <||@
  Comment 1057 1124 NOP  <||@
  Comment 1058 1126 NOP  <||@
  Comment 1059 1128 AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc  <||@
  Comment 1120 1130 rdx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3  <||@
  Comment 1127 1132 MOV (x: [r8|DWORD[_] * 8 + 20], y: rdx|DWORD[_]) size: DWORD  <||@
  Comment 1135 1134 AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc  <||@
  Comment 1217 1136 r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1222 1138 r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1227 1140 r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1232 1142 rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD  <||@
  Comment 1236 1144 rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD  <||@
  Comment 1240 1146 r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD  <||@
  Comment 1245 1148 rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD  <||@
  Comment 1249 1150 rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1253 1152 JUMP ~outgoingValues: [] destination: B31 -> B32  <||@
  Comment 1258 block B47 null  <||@
  Comment 1258 1484 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1258 1486 stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1262 1488 NOP  <||@
  Comment 1263 1490 NOP  <||@
  Comment 1264 1492 NOP  <||@
  Comment 1265 1494 NOP  <||@
  Comment 1266 1496 NOP  <||@
  Comment 1267 1498 NOP  <||@
  Comment 1268 1500 NOP  <||@
  Comment 1269 1502 NOP  <||@
  Comment 1270 1504 NOP  <||@
  Comment 1271 1506 NOP  <||@
  Comment 1272 1508 NOP  <||@
  Comment 1273 1510 rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1276 1512 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1281 1514 rcx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD  <||@
  Comment 1285 1516 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1290 1518 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16]  <||@
  Comment 1291 {HotSpotMethod<PrintStream.append(CharSequence, int, int)>}  <||@
  Comment 1291 INVOKESPECIAL  <||@
  Comment 1296 []at java.io.PrintStream.append(PrintStream.java:67) [bci: 4, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1304 1520 JUMP ~outgoingValues: [] destination: B47 -> B48  <||@
  Comment 1309 block B16 null  <||@
  Comment 1309 598 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1309 600 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1314 602 stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1318 604 stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1322 606 stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1326 608 stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD  <||@
  Comment 1331 610 rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1336 612 stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1340 614 r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1345 616 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1345 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1355 618 NOP  <||@
  Comment 1356 620 NOP  <||@
  Comment 1357 622 NOP  <||@
  Comment 1358 624 NOP  <||@
  Comment 1359 626 NOP  <||@
  Comment 1360 628 NOP  <||@
  Comment 1361 630 NOP  <||@
  Comment 1362 632 NOP  <||@
  Comment 1363 634 NOP  <||@
  Comment 1364 636 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1366 638 r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1369 640 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1369 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1374 [r11:0, stack:20, stack:36, stack:40, stack:48, stack:56, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |-  |-   <||@
  Comment 1382 642 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1382 [rax:0, r11:0, stack:20, stack:36, stack:40, stack:48, stack:56, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |-  |-   <||@
  Comment 1382 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1384 644 rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1387 646 rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1390 648 stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1395 650 r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1400 652 r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1405 656 rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD  <||@
  Comment 1409 658 r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD  <||@
  Comment 1414 662 rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1418 664 JUMP ~outgoingValues: [] destination: B16 -> B24  <||@
  Comment 1423 block B22 null  <||@
  Comment 1423 770 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1423 772 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1428 774 stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1432 776 stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1436 778 stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1440 780 stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD  <||@
  Comment 1445 782 rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1450 784 stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1454 786 r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1457 788 r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1462 790 NOP  <||@
  Comment 1463 792 NOP  <||@
  Comment 1464 794 NOP  <||@
  Comment 1465 796 NOP  <||@
  Comment 1466 798 NOP  <||@
  Comment 1467 800 NOP  <||@
  Comment 1468 802 NOP  <||@
  Comment 1469 804 NOP  <||@
  Comment 1470 806 NOP  <||@
  Comment 1471 808 rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 1474 810 ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1484 812 rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1487 816 r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1492 818 r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1497 820 rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD  <||@
  Comment 1501 828 rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1505 830 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 1510 block B11 null  <||@
  Comment 1510 384 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1510 386 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1515 388 stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1519 390 stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1523 392 stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1527 394 stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD  <||@
  Comment 1532 396 rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1537 398 stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1541 400 r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1546 402 NOP  <||@
  Comment 1547 404 NOP  <||@
  Comment 1548 406 NOP  <||@
  Comment 1549 408 NOP  <||@
  Comment 1550 410 NOP  <||@
  Comment 1551 412 NOP  <||@
  Comment 1552 414 NOP  <||@
  Comment 1553 416 NOP  <||@
  Comment 1554 418 NOP  <||@
  Comment 1555 420 NOP  <||@
  Comment 1556 422 NOP  <||@
  Comment 1557 424 rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1564 426 r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1567 428 rsi|QWORD = LEA address: [r10|QWORD + 23] size: QWORD  <||@
  Comment 1571 430 rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD  <||@
  Comment 1575 432 rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1581 434 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD  <||@
  Comment 1594 block B13 null  <||@
  Comment 1594 468 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1594 470 NOP  <||@
  Comment 1595 472 NOP  <||@
  Comment 1596 474 NOP  <||@
  Comment 1597 476 NOP  <||@
  Comment 1598 478 NOP  <||@
  Comment 1599 480 NOP  <||@
  Comment 1600 482 NOP  <||@
  Comment 1601 484 NOP  <||@
  Comment 1602 486 NOP  <||@
  Comment 1603 488 NOP  <||@
  Comment 1604 490 NOP  <||@
  Comment 1605 492 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 1612 494 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1620 496 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1628 498 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1636 500 MOV x: [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 1643 502 MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 1643 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 1650 504 MOV (x: [rdi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 1654 506 rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 1654 508 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 1654 block B14 null  <||@
  Comment 1654 510 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1654 512 NOP  <||@
  Comment 1655 514 NOP  <||@
  Comment 1656 516 NOP  <||@
  Comment 1657 518 NOP  <||@
  Comment 1658 520 NOP  <||@
  Comment 1659 522 NOP  <||@
  Comment 1660 524 NOP  <||@
  Comment 1661 526 NOP  <||@
  Comment 1662 528 NOP  <||@
  Comment 1663 530 NOP  <||@
  Comment 1664 532 NOP  <||@
  Comment 1665 534 NOP  <||@
  Comment 1666 536 NOP  <||@
  Comment 1667 538 NOP  <||@
  Comment 1668 540 rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1671 542 rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1674 544 stack:120|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1679 546 rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 1683 548 rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 1687 550 rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 1690 552 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1690 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 1695 554 rsi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 1700 560 JUMP ~outgoingValues: [] destination: B14 -> B31  <||@
  Comment 1705 block B12 null  <||@
  Comment 1705 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1705 438 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1705 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1715 440 NOP  <||@
  Comment 1716 442 NOP  <||@
  Comment 1717 444 NOP  <||@
  Comment 1718 446 NOP  <||@
  Comment 1719 448 NOP  <||@
  Comment 1720 450 NOP  <||@
  Comment 1721 452 NOP  <||@
  Comment 1722 454 NOP  <||@
  Comment 1723 456 NOP  <||@
  Comment 1724 458 rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1727 460 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1727 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1732 [r11:0, stack:20, stack:36, stack:40, stack:48, stack:56, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |-  |-   <||@
  Comment 1740 462 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1740 [rax:0, r11:0, stack:20, stack:36, stack:40, stack:48, stack:56, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |-  |-   <||@
  Comment 1740 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1742 464 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1745 466 JUMP ~outgoingValues: [] destination: B12 -> B14  <||@
  Comment 1747 block B29 null  <||@
  Comment 1747 926 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1747 928 NOP  <||@
  Comment 1748 930 NOP  <||@
  Comment 1749 932 NOP  <||@
  Comment 1750 934 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1757 936 r10|DWORD = MOVE input: int[-100889|0xfffffffffffe75e7]  <||@
  Comment 1763 942 JUMP ~outgoingValues: [] destination: B29 -> B50  <||@
  Comment 1763 block B50 null  <||@
  Comment 1763 1562 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1763 1556 r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1768 1558 r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1773 1564 NOP  <||@
  Comment 1774 1566 NOP  <||@
  Comment 1775 1568 NOP  <||@
  Comment 1776 1570 NOP  <||@
  Comment 1777 1572 NOP  <||@
  Comment 1778 1574 NOP  <||@
  Comment 1779 1576 NOP  <||@
  Comment 1780 1578 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1787 1580 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1794 1582 DEOPT info [bci:0]  <||@
  Comment 1794 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1799 [r8:0, r9:0]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0            |1            |2  |3 
     locals:  |r9|QWORD[.]  |r8|QWORD[.]  |-  |-   <||@
  Comment 1807 block B27 null  <||@
  Comment 1807 896 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1807 898 NOP  <||@
  Comment 1808 900 NOP  <||@
  Comment 1809 902 NOP  <||@
  Comment 1810 904 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1817 906 r10|DWORD = MOVE input: int[-99865|0xfffffffffffe79e7]  <||@
  Comment 1823 912 JUMP ~outgoingValues: [] destination: B27 -> B50  <||@
  Comment 1825 block B25 null  <||@
  Comment 1825 866 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1825 868 NOP  <||@
  Comment 1826 870 NOP  <||@
  Comment 1827 872 NOP  <||@
  Comment 1828 874 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1835 876 r10|DWORD = MOVE input: int[-98841|0xfffffffffffe7de7]  <||@
  Comment 1841 882 JUMP ~outgoingValues: [] destination: B25 -> B50  <||@
  Comment 1843 block B41 null  <||@
  Comment 1843 1310 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1843 1312 stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1847 1314 NOP  <||@
  Comment 1848 1316 NOP  <||@
  Comment 1849 1318 NOP  <||@
  Comment 1850 1320 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1857 1322 r10|DWORD = MOVE input: int[-95769|0xfffffffffffe89e7]  <||@
  Comment 1863 1332 JUMP ~outgoingValues: [] destination: B41 -> B45  <||@
  Comment 1863 block B45 null  <||@
  Comment 1863 1444 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1863 1204 rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1868 1206 rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1873 1210 r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1878 1446 NOP  <||@
  Comment 1879 1448 NOP  <||@
  Comment 1880 1450 NOP  <||@
  Comment 1881 1452 NOP  <||@
  Comment 1882 1454 NOP  <||@
  Comment 1883 1456 NOP  <||@
  Comment 1884 1458 NOP  <||@
  Comment 1885 1460 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1892 1462 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1899 1464 DEOPT info [bci:38, 35, 4, 4, 16]  <||@
  Comment 1899 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1904 [rax:0, rbp:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35, duringCall: true, rethrow: false]
              |0             |1             |2          |3         |4 
     locals:  |rbp|QWORD[.]  |rax|QWORD[.]  |rbx|DWORD  |r9|DWORD  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rbp|QWORD[.]  |-  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4, duringCall: true, rethrow: false]
              |0             |1             |2          |3        
     locals:  |rbp|QWORD[.]  |rax|QWORD[.]  |rbx|DWORD  |r9|DWORD 
  at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1912 block B2 null  <||@
  Comment 1912 118 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1912 120 stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1917 122 stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1922 124 NOP  <||@
  Comment 1923 126 NOP  <||@
  Comment 1924 128 NOP  <||@
  Comment 1925 130 r11|QWORD = MOVE input: long[2580|0xa14]  <||@
  Comment 1932 132 r10|DWORD = MOVE input: int[-87571|0xfffffffffffea9ed]  <||@
  Comment 1938 138 JUMP ~outgoingValues: [] destination: B2 -> B50  <||@
  Comment 1943 block B46 null  <||@
  Comment 1943 1466 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1943 1468 NOP  <||@
  Comment 1944 1470 NOP  <||@
  Comment 1945 1472 NOP  <||@
  Comment 1946 1474 r11|QWORD = MOVE input: long[3860|0xf14]  <||@
  Comment 1953 1476 r10|DWORD = MOVE input: int[-97811|0xfffffffffffe81ed]  <||@
  Comment 1959 1482 JUMP ~outgoingValues: [] destination: B46 -> B50  <||@
  Comment 1964 block B43 null  <||@
  Comment 1964 1396 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1964 1398 stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1968 1400 NOP  <||@
  Comment 1969 1402 NOP  <||@
  Comment 1970 1404 NOP  <||@
  Comment 1971 1406 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1978 1408 r10|DWORD = MOVE input: int[-91667|0xfffffffffffe99ed]  <||@
  Comment 1984 1418 JUMP ~outgoingValues: [] destination: B43 -> B45  <||@
  Comment 1986 block B37 null  <||@
  Comment 1986 1226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1986 1228 stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1990 1230 NOP  <||@
  Comment 1991 1232 NOP  <||@
  Comment 1992 1234 NOP  <||@
  Comment 1993 1236 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2000 1238 r10|DWORD = MOVE input: int[-93721|0xfffffffffffe91e7]  <||@
  Comment 2006 1248 JUMP ~outgoingValues: [] destination: B37 -> B45  <||@
  Comment 2011 block B35 null  <||@
  Comment 2011 1190 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2011 1192 stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 2015 1194 NOP  <||@
  Comment 2016 1196 NOP  <||@
  Comment 2017 1198 NOP  <||@
  Comment 2018 1200 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2025 1202 r10|DWORD = MOVE input: int[-92697|0xfffffffffffe95e7]  <||@
  Comment 2031 1212 JUMP ~outgoingValues: [] destination: B35 -> B45  <||@
  Comment 2036 block B44 null  <||@
  Comment 2036 1420 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2036 1422 stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 2040 1424 NOP  <||@
  Comment 2041 1426 NOP  <||@
  Comment 2042 1428 NOP  <||@
  Comment 2043 1430 r11|QWORD = MOVE input: long[4500|0x1194]  <||@
  Comment 2050 1432 r10|DWORD = MOVE input: int[-90643|0xfffffffffffe9ded]  <||@
  Comment 2056 1442 JUMP ~outgoingValues: [] destination: B44 -> B45  <||@
  Comment 2061 block B4 null  <||@
  Comment 2061 152 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2061 154 stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2066 156 stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2071 158 NOP  <||@
  Comment 2072 160 NOP  <||@
  Comment 2073 162 NOP  <||@
  Comment 2074 164 r11|QWORD = MOVE input: long[2580|0xa14]  <||@
  Comment 2081 166 r10|DWORD = MOVE input: int[-88595|0xfffffffffffea5ed]  <||@
  Comment 2087 172 JUMP ~outgoingValues: [] destination: B4 -> B50  <||@
  Comment 2092 block B39 null  <||@
  Comment 2092 1266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2092 1268 stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 2096 1270 NOP  <||@
  Comment 2097 1272 NOP  <||@
  Comment 2098 1274 NOP  <||@
  Comment 2099 1276 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2106 1278 r10|DWORD = MOVE input: int[-94745|0xfffffffffffe8de7]  <||@
  Comment 2112 1288 JUMP ~outgoingValues: [] destination: B39 -> B45  <||@
  Comment 2117 block B6 null  <||@
  Comment 2117 200 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2117 202 stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2122 204 NOP  <||@
  Comment 2123 206 NOP  <||@
  Comment 2124 208 NOP  <||@
  Comment 2125 210 r11|QWORD = MOVE input: long[2580|0xa14]  <||@
  Comment 2132 212 r10|DWORD = MOVE input: int[-89619|0xfffffffffffea1ed]  <||@
  Comment 2138 218 JUMP ~outgoingValues: [] destination: B6 -> B50  <||@
  Comment 2143 block B49 null  <||@
  Comment 2143 1540 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2143 1542 stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2148 1544 stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2153 1546 NOP  <||@
  Comment 2154 1548 NOP  <||@
  Comment 2155 1550 NOP  <||@
  Comment 2156 1552 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 2163 1554 r10|DWORD = MOVE input: int[-6707|0xffffffffffffe5cd]  <||@
  Comment 2169 1560 JUMP ~outgoingValues: [] destination: B49 -> B50  <||@
  Comment 2179 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2204 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2214 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2229 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2262 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2267 [r10:0, r11:0]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-   <||@
  Comment 2297 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2302 [r8:0, r10:0, r11:0]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-   <||@
  Comment 2332 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2337 [rbp:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-   <||@
  Comment 2367 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2372 [rbp:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-   <||@
  Comment 2402 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2407 [rbp:0, rsi:0, r8:0, r10:0, r11:0, r14:0, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-   <||@
  Comment 2437 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2442 [rax:0, r11:0, stack:20, stack:36, stack:40, stack:48, stack:56, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |-  |-   <||@
  Comment 2472 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2477 [rax:0, r11:0, stack:20, stack:36, stack:40, stack:48, stack:56, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |-  |-   <||@
  Comment 2485 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2485 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2491 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2491 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4863[java.util.Formatter$FixedString.print(Formatter, Object, Locale)]"
  method "HotSpotCompilation-4863[java.util.Formatter$FixedString.print(Formatter, Object, Locale)]"
  date 1724269747336
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ae7e900 448b560849bc0000002b787f00004d03d44d33e4493bc20f85636790fe66669089842400c0feff4883ec789041817f20000000000f8544080000909090909090909090909090909090909090909090909090909048896c24704c8bd64c8bda458b430c428b0cc508000000458b4a1044894c2464418b5a0c418b7a148bc748c1e003488944244048be0000002b787f0000488d0c0e418be848c1e503483b0d3dffffff0f8412000000483b0d38ffffff0f8434040000e9a4070000909090909090909090428b34c514000000448b2cf50c000000448b34fd140000000fbe14fd10000000428b3cf50c00000085db0f8c8406000090909090413bd90f8f0c0700004c8954243048896c2428909090909090900fbeca448bd741d3ea453bca0f8f210700004c895c243844894424249090909090909090909090909090468b14c50c000000420fbe0cc510000000458bd9442bdb458bcb4503ca44894c24600fbec18be98bc88944245c418bc5d3e8418bc92bc848c1e60383f9010f8db6000000909090909090904084ed0f85640600009090909084d20f8510060000909090904585d20f8c32060000909090904585db0f8c0c0600009090909090412bfb3bdf0f8f660600009090909090908b7e0c412bfb443bd70f8f5805000090909090909090909090909090909090909049c1e603498d7c1e104a8d741610498bd3e8fdb28efe448b442424448b4c246046890cc50c00000090909090909090488b6c24704883c478493ba7500400000f875c060000c5f877c348897424189090909090909090909090909090908b4c245c418bc1d3e0412bc5b9020000008bf18b4c245cd3e64103f53bf00f4fc64103c58bc8ffc981f9f7ffff7f0f83190500008b74245c448954245c9090909090909090908bced3f8d3e0443be80f84470300009090909090909090909090498bb7b80100008bc8488d49174883e1f84c8bd14c03d64d3b97c80100000f874f02000090909090909090909090909090904d8997b80100000f188431000100000f188431400100000f1884318001000048c70601000000c74608c022000089460c4c8d51f04981fa000800000f837202000090909049c7c210000000e9270000006666660f1f840000000000666666900f1f440000909090909090904ac70416000000004d8d520890909090493bca77e490909090909090909090909090443be8458bd5440f4fd04585d20f8ca503000090909090453bd50f878603000090909090443bd00f873d03000044895c2458896c2454897c24508954244c4489742414895c2448488b7c24189090909090909090909090909090904c8bde488d7f104889742418498d7310498bd2e864b08efe488b742418488b6c2428448b442424909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f8432000000428b0cc51400000048c1e1034885c90f841d000000498b57284883fa000f84510400004883ea08498957284903573848890a488bd648c1ea03428914c514000000488bd54833d648c1ea160f8442000000488bd548c1ea0948b900e0368d787f00004803d1803a027429f083042400803a00741fc60200498b4f484885c90f84ff0300004883e90849894f4849034f58488911448b4c2460448b5c2458448b54245c8b7c24508b54244c448b7424148b5c24488b6c2454e999fcffff895c24489090909090909090909090488bf5488b5424408b4c2448448b44246490e8706590fe0f1f840000070005e9f8fcffff44895c2458896c2454897c24508954244c4489742414488b6c2428895c24484c8b5c241848bec022002b787f00009090909090909090908bd0448bc8e8a2fda4fe0f1f8400000000008500488bf0418bc14c895c2418448b4c2460448b5c24588b54244c448b7424148b6c2454e9d4fdffff44895c2458896c2454897c24508954244c4489742414488b6c2428895c2448448bc84c8b5c2418909090909090909090498bca488d7e104833c0f348aa418bc1448b4c2460448b5c24588b7c24508b6c2454e979fdffff44895c2458896c2454897c24508954244c4489742414488b6c2428895c24484c8b5c24189090909090909090909090498bbfb8010000458bd5498d72174883e6f8488bd64803d7493b97c80100000f876f0000009090909090909090909090498997b80100000f18843e000100000f18843e400100000f18843e8001000048c70701000000c74708c022000044896f0c9090909090909090909090909090498bf3488bd748897c2408488d7e10488d7210498bd2e8a1ad8efe488b742408e938fdffff48bec022002b787f0000909090909090909090418bd5e83cfca4fe0f1f8400000000008500488bf8eba390909049c7c30000000041bae775feff4c8b4424384c8b4c243090909090909090458997840400004d899f90040000e873c190fe0f1f84000000000090909049c7c30000000041bae779feffebc290909049c7c30000000041bae77dfeffebb0895c244890909049c7c30000000041bae789feff488b6c2428488b442440448b4c246490909090909090458997840400004d899f90040000e80ac190fe0f1f8400000000004c895c24384c8954243090909049c7c3140a000041baeda9feffe94cffffff90909049c7c3140f000041baed81feffe937ffffff895c244890909049c7c31414000041baed99feffeb85895c244890909049c7c30000000041bae791feffe96cffffff895c244890909049c7c30000000041bae795feffe953ffffff895c244890909049c7c39411000041baed9dfeffe93affffff4c895c24384c8954243090909049c7c3140a000041baeda5feffe9b7feffff895c244890909049c7c30000000041bae78dfeffe902ffffff4c895c243890909049c7c3140a000041baeda1feffe984feffff4c895c24384c8954243090909049c7c31400000041bacde5ffffe965feffff48896c2470e898c08efee9adf7fffff4488d0d90f9ffff49898f68040000e95fce90fef448890c24e85590a4fee9b0fbfffff448891424e8c6b1a4fee902fcfffff441c78784040000f55cffff49c7879004000000000000e89fbf90fe0f1f84000000000041c78784040000f54dffff49c7879004000000000000e87cbf90fe0f1f84000000000041c78784040000f53bffff49c7879004000000000000e859bf90fe0f1f84000000000041c78784040000edadfeff49c7879004000014050000e836bf90fe0f1f84000000000041c78784040000f548ffff49c7879004000000000000e813bf90fe0f1f84000000000041c787840400008fadfdff49c7879004000000000000e8f0be90fe0f1f84000000000041c787840400008ffdfdff49c7879004000000000000e8cdbe90fe0f1f840000000000e84660a4fef4e860bc90fef4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 NOP  <||@
  Comment 81 48 NOP  <||@
  Comment 82 50 NOP  <||@
  Comment 83 52 NOP  <||@
  Comment 84 54 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 89 56 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@43a7e04e slotKind: QWORD  <||@
  Comment 89 58 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 92 60 r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 95 62 r8|DWORD[_] = MOV input: [r11|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 95 [r10:0, r11:0]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-   <||@
  Comment 95 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 99 64 rcx|DWORD = MOV input: [r8|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 99 [r8:0, r10:0, r11:0]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-   <||@
  Comment 99 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 107 66 r9|DWORD = MOV input: [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 111 68 stack:28|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 116 70 rbx|DWORD = MOV input: [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 120 72 rdi|DWORD[_] = MOV input: [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 124 74 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3  <||@
  Comment 130 76 stack:64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 135 78 rsi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 145 80 rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: rsi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 140154094223360 shift: 0  <||@
  Comment 149 82 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3  <||@
  Comment 156 84 AMD64HOTSPOTSTRATEGYSWITCH ~key: rcx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B0 -> B1, B0 -> B47] defaultTarget: B0 -> B49 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 156 {DataSection[0x0]}  <||@
  Comment 169 {DataSection[0x8]}  <||@
  Comment 187 block B1 null  <||@
  Comment 187 86 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 187 88 NOP  <||@
  Comment 188 90 NOP  <||@
  Comment 189 92 NOP  <||@
  Comment 190 94 NOP  <||@
  Comment 191 96 NOP  <||@
  Comment 192 98 NOP  <||@
  Comment 193 100 NOP  <||@
  Comment 194 102 NOP  <||@
  Comment 195 104 NOP  <||@
  Comment 196 106 rsi|DWORD[_] = MOV input: [r8|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 204 108 r13|DWORD = MOV input: [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 204 [rbp:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-   <||@
  Comment 204 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 212 110 r14|DWORD[_] = MOV input: [rdi|DWORD[_] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 212 [rbp:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-   <||@
  Comment 212 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 220 112 rdx|DWORD = MOVSXB input: [rdi|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 228 114 rdi|DWORD = MOV input: [r14|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 228 [rbp:0, rsi:0, r8:0, r10:0, r11:0, r14:0, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-   <||@
  Comment 228 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 236 116 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD  <||@
  Comment 244 block B3 null  <||@
  Comment 244 140 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 244 142 NOP  <||@
  Comment 245 144 NOP  <||@
  Comment 246 146 NOP  <||@
  Comment 247 148 NOP  <||@
  Comment 248 150 CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 257 block B5 null  <||@
  Comment 257 174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 257 176 stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 262 178 stack:88|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 267 180 NOP  <||@
  Comment 268 182 NOP  <||@
  Comment 269 184 NOP  <||@
  Comment 270 186 NOP  <||@
  Comment 271 188 NOP  <||@
  Comment 272 190 NOP  <||@
  Comment 273 192 NOP  <||@
  Comment 274 194 rcx|DWORD = MOVSXB value: rdx|DWORD size: DWORD  <||@
  Comment 277 196 r10|DWORD = SHR (x: rdi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 283 198 CMPBRANCH (x: r9|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD  <||@
  Comment 292 block B7 null  <||@
  Comment 292 220 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 292 222 stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 297 224 stack:92|DWORD[_] = MOVE input: r8|DWORD[_] moveKind: DWORD  <||@
  Comment 302 226 NOP  <||@
  Comment 303 228 NOP  <||@
  Comment 304 230 NOP  <||@
  Comment 305 232 NOP  <||@
  Comment 306 234 NOP  <||@
  Comment 307 236 NOP  <||@
  Comment 308 238 NOP  <||@
  Comment 309 240 NOP  <||@
  Comment 310 242 NOP  <||@
  Comment 311 244 NOP  <||@
  Comment 312 246 NOP  <||@
  Comment 313 248 NOP  <||@
  Comment 314 250 NOP  <||@
  Comment 315 252 NOP  <||@
  Comment 316 254 r10|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 324 256 rcx|DWORD = MOVSXB input: [r8|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 333 258 r11|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 339 260 r9|DWORD = ADD (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 345 262 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 350 264 rax|DWORD = MOVSXB value: rcx|DWORD size: DWORD  <||@
  Comment 353 266 rbp|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 355 268 rcx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 357 270 stack:36|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 361 272 rax|DWORD = SHR (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 366 274 rcx|DWORD = SUB (x: r9|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 371 276 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3  <||@
  Comment 375 278 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: 1 size: DWORD inlinedY: null  <||@
  Comment 384 block B8 null  <||@
  Comment 384 280 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 384 282 NOP  <||@
  Comment 385 284 NOP  <||@
  Comment 386 286 NOP  <||@
  Comment 387 288 JUMP ~outgoingValues: [] destination: B8 -> B32  <||@
  Comment 387 block B32 null  <||@
  Comment 387 1154 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 387 1156 NOP  <||@
  Comment 388 1158 NOP  <||@
  Comment 389 1160 NOP  <||@
  Comment 390 1162 NOP  <||@
  Comment 391 1164 TESTBYTEBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B44  <||@
  Comment 400 block B33 null  <||@
  Comment 400 1166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 400 1168 NOP  <||@
  Comment 401 1170 NOP  <||@
  Comment 402 1172 NOP  <||@
  Comment 403 1174 NOP  <||@
  Comment 404 1176 TESTBYTEBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B43  <||@
  Comment 412 block B34 null  <||@
  Comment 412 1178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 412 1180 NOP  <||@
  Comment 413 1182 NOP  <||@
  Comment 414 1184 NOP  <||@
  Comment 415 1186 NOP  <||@
  Comment 416 1188 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: DWORD  <||@
  Comment 425 block B36 null  <||@
  Comment 425 1214 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 425 1216 NOP  <||@
  Comment 426 1218 NOP  <||@
  Comment 427 1220 NOP  <||@
  Comment 428 1222 NOP  <||@
  Comment 429 1224 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD  <||@
  Comment 438 block B38 null  <||@
  Comment 438 1250 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 438 1252 NOP  <||@
  Comment 439 1254 NOP  <||@
  Comment 440 1256 NOP  <||@
  Comment 441 1258 NOP  <||@
  Comment 442 1260 NOP  <||@
  Comment 443 1262 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 446 1264 CMPBRANCH (x: rbx|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: DWORD  <||@
  Comment 454 block B40 null  <||@
  Comment 454 1290 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 454 1292 NOP  <||@
  Comment 455 1294 NOP  <||@
  Comment 456 1296 NOP  <||@
  Comment 457 1298 NOP  <||@
  Comment 458 1300 NOP  <||@
  Comment 459 1302 NOP  <||@
  Comment 460 1304 rdi|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 463 1306 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 466 1308 CMPBRANCH (x: r10|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD  <||@
  Comment 475 block B42 null  <||@
  Comment 475 1334 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 475 1336 NOP  <||@
  Comment 476 1338 NOP  <||@
  Comment 477 1340 NOP  <||@
  Comment 478 1342 NOP  <||@
  Comment 479 1344 NOP  <||@
  Comment 480 1346 NOP  <||@
  Comment 481 1348 NOP  <||@
  Comment 482 1350 NOP  <||@
  Comment 483 1352 NOP  <||@
  Comment 484 1354 NOP  <||@
  Comment 485 1356 NOP  <||@
  Comment 486 1358 NOP  <||@
  Comment 487 1360 NOP  <||@
  Comment 488 1362 NOP  <||@
  Comment 489 1364 NOP  <||@
  Comment 490 1366 NOP  <||@
  Comment 491 1368 NOP  <||@
  Comment 492 1370 NOP  <||@
  Comment 493 1372 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3  <||@
  Comment 497 1374 r14|QWORD[*] = MOVE input: r14|QWORD[.] moveKind: QWORD  <||@
  Comment 497 1376 rsi|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 497 1378 r11|QWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 497 1380 rdi|QWORD = LEA address: [r14|QWORD[*] + rbx|DWORD * 1 + 16] size: QWORD  <||@
  Comment 502 1382 rsi|QWORD = LEA address: [rsi|QWORD[*] + r10|DWORD * 1 + 16] size: QWORD  <||@
  Comment 507 1384 rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 510 1386 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 510 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7f78b1ffa4e8, value=140155947490816]:0x7f7899769e00}  <||@
  Comment 515 1388 r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD  <||@
  Comment 520 1390 r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 525 1392 MOV (x: [r8|DWORD[_] * 8 + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 533 1394 JUMP ~outgoingValues: [] destination: B42 -> B48  <||@
  Comment 533 block B48 null  <||@
  Comment 533 1522 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 533 1524 NOP  <||@
  Comment 534 1526 NOP  <||@
  Comment 535 1528 NOP  <||@
  Comment 536 1530 NOP  <||@
  Comment 537 1532 NOP  <||@
  Comment 538 1534 NOP  <||@
  Comment 539 1536 NOP  <||@
  Comment 540 1538 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 549 POLL_RETURN_FAR  <||@
  Comment 566 block B9 null  <||@
  Comment 566 290 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 566 292 stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 571 294 NOP  <||@
  Comment 572 296 NOP  <||@
  Comment 573 298 NOP  <||@
  Comment 574 300 NOP  <||@
  Comment 575 302 NOP  <||@
  Comment 576 304 NOP  <||@
  Comment 577 306 NOP  <||@
  Comment 578 308 NOP  <||@
  Comment 579 310 NOP  <||@
  Comment 580 312 NOP  <||@
  Comment 581 314 NOP  <||@
  Comment 582 316 NOP  <||@
  Comment 583 318 NOP  <||@
  Comment 584 320 NOP  <||@
  Comment 585 322 NOP  <||@
  Comment 586 324 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 590 326 rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 595 328 rax|DWORD = SUB (x: rax|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 598 330 rcx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 603 332 rsi|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 605 334 rcx|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 609 336 rsi|DWORD = SHL (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 611 338 rsi|DWORD = ADD (x: rsi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 614 340 CMP (x: rsi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 616 342 rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rsi|DWORD) condition: >  <||@
  Comment 619 344 rax|DWORD = ADD (x: rax|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 622 346 rcx|DWORD = DEC value: rax|DWORD size: DWORD  <||@
  Comment 626 348 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B9 -> B10 falseDestination: B9 -> B46 y: 2147483639 size: DWORD inlinedY: null  <||@
  Comment 638 block B10 null  <||@
  Comment 638 350 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 638 352 rsi|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 642 354 stack:36|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 647 356 NOP  <||@
  Comment 648 358 NOP  <||@
  Comment 649 360 NOP  <||@
  Comment 650 362 NOP  <||@
  Comment 651 364 NOP  <||@
  Comment 652 366 NOP  <||@
  Comment 653 368 NOP  <||@
  Comment 654 370 NOP  <||@
  Comment 655 372 NOP  <||@
  Comment 656 374 rcx|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 658 376 rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 660 380 rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 662 382 CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B15 size: DWORD  <||@
  Comment 671 block B15 null  <||@
  Comment 671 562 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 671 564 NOP  <||@
  Comment 672 566 NOP  <||@
  Comment 673 568 NOP  <||@
  Comment 674 570 NOP  <||@
  Comment 675 572 NOP  <||@
  Comment 676 574 NOP  <||@
  Comment 677 576 NOP  <||@
  Comment 678 578 NOP  <||@
  Comment 679 580 NOP  <||@
  Comment 680 582 NOP  <||@
  Comment 681 584 NOP  <||@
  Comment 682 586 rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 689 588 rcx|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 691 590 rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD  <||@
  Comment 695 592 rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD  <||@
  Comment 699 594 r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 705 596 CMPBRANCH (x: r10|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD  <||@
  Comment 718 block B17 null  <||@
  Comment 718 666 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 718 668 NOP  <||@
  Comment 719 670 NOP  <||@
  Comment 720 672 NOP  <||@
  Comment 721 674 NOP  <||@
  Comment 722 676 NOP  <||@
  Comment 723 678 NOP  <||@
  Comment 724 680 NOP  <||@
  Comment 725 682 NOP  <||@
  Comment 726 684 NOP  <||@
  Comment 727 686 NOP  <||@
  Comment 728 688 NOP  <||@
  Comment 729 690 NOP  <||@
  Comment 730 692 NOP  <||@
  Comment 731 694 NOP  <||@
  Comment 732 696 MOV (x: [r15|QWORD + 440], y: r10|QWORD) size: QWORD  <||@
  Comment 739 698 AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 747 700 AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 755 702 AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 763 704 MOV x: [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 770 706 MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 770 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 777 708 MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 780 710 r10|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD  <||@
  Comment 784 712 CMPCONSTBRANCH x: r10|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B22 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 797 block B18 null  <||@
  Comment 797 714 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 797 716 NOP  <||@
  Comment 798 718 NOP  <||@
  Comment 799 720 NOP  <||@
  Comment 800 722 r10|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 807 724 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 812 block B20 loop 0 depth 1 header:546|LoopBegin  <||@
  Comment 812 738 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 832 740 NOP  <||@
  Comment 833 742 NOP  <||@
  Comment 834 744 NOP  <||@
  Comment 835 746 NOP  <||@
  Comment 836 748 NOP  <||@
  Comment 837 750 NOP  <||@
  Comment 838 752 NOP  <||@
  Comment 839 754 MOV x: [rsi|QWORD + r10|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 847 756 r10|QWORD = LEA address: [r10|QWORD + 8] size: QWORD  <||@
  Comment 851 758 JUMP ~outgoingValues: [] destination: B20 -> B19  <||@
  Comment 851 block B19 loop 0 depth 1 header:546|LoopBegin  <||@
  Comment 851 726 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 851 728 NOP  <||@
  Comment 852 730 NOP  <||@
  Comment 853 732 NOP  <||@
  Comment 854 734 NOP  <||@
  Comment 855 736 CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD  <||@
  Comment 860 block B21 null  <||@
  Comment 860 760 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 860 762 NOP  <||@
  Comment 861 764 NOP  <||@
  Comment 862 766 NOP  <||@
  Comment 863 768 JUMP ~outgoingValues: [] destination: B21 -> B23  <||@
  Comment 863 block B23 null  <||@
  Comment 863 832 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 863 834 NOP  <||@
  Comment 864 836 NOP  <||@
  Comment 865 838 NOP  <||@
  Comment 866 840 NOP  <||@
  Comment 867 842 rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD  <||@
  Comment 867 844 JUMP ~outgoingValues: [] destination: B23 -> B24  <||@
  Comment 867 block B24 null  <||@
  Comment 867 846 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 867 848 NOP  <||@
  Comment 868 850 NOP  <||@
  Comment 869 852 NOP  <||@
  Comment 870 854 NOP  <||@
  Comment 871 856 NOP  <||@
  Comment 872 858 NOP  <||@
  Comment 873 860 CMP (x: r13|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 876 862 r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rax|DWORD) condition: >  <||@
  Comment 883 864 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B26 size: DWORD  <||@
  Comment 892 block B26 null  <||@
  Comment 892 884 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 892 886 NOP  <||@
  Comment 893 888 NOP  <||@
  Comment 894 890 NOP  <||@
  Comment 895 892 NOP  <||@
  Comment 896 894 CMPBRANCH (x: r10|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD  <||@
  Comment 905 block B28 null  <||@
  Comment 905 914 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 905 916 NOP  <||@
  Comment 906 918 NOP  <||@
  Comment 907 920 NOP  <||@
  Comment 908 922 NOP  <||@
  Comment 909 924 CMPBRANCH (x: r10|DWORD, y: rax|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD  <||@
  Comment 918 block B30 null  <||@
  Comment 918 944 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 918 946 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 923 948 stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 927 950 stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 931 952 stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 935 954 stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD  <||@
  Comment 940 956 stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 944 958 rdi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 949 960 NOP  <||@
  Comment 950 962 NOP  <||@
  Comment 951 964 NOP  <||@
  Comment 952 966 NOP  <||@
  Comment 953 968 NOP  <||@
  Comment 954 970 NOP  <||@
  Comment 955 972 NOP  <||@
  Comment 956 974 NOP  <||@
  Comment 957 976 NOP  <||@
  Comment 958 978 NOP  <||@
  Comment 959 980 NOP  <||@
  Comment 960 982 NOP  <||@
  Comment 961 984 NOP  <||@
  Comment 962 986 NOP  <||@
  Comment 963 988 NOP  <||@
  Comment 964 990 rdi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 964 992 r11|QWORD[*] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 967 994 r10|QWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 967 996 rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 971 998 stack:104|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 976 1000 rsi|QWORD = LEA address: [r11|QWORD[*] + 16] size: QWORD  <||@
  Comment 980 1002 rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 983 1004 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 983 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 988 1006 rsi|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 993 1012 JUMP ~outgoingValues: [] destination: B30 -> B31  <||@
  Comment 993 block B31 null  <||@
  Comment 993 1014 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 993 556 rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 998 558 r8|DWORD[_] = MOVE input: stack:92|DWORD[_] moveKind: DWORD  <||@
  Comment 1003 1016 NOP  <||@
  Comment 1004 1018 NOP  <||@
  Comment 1005 1020 NOP  <||@
  Comment 1006 1022 NOP  <||@
  Comment 1007 1024 NOP  <||@
  Comment 1008 1026 NOP  <||@
  Comment 1009 1028 NOP  <||@
  Comment 1010 1030 NOP  <||@
  Comment 1011 1032 NOP  <||@
  Comment 1012 1034 NOP  <||@
  Comment 1013 1036 NOP  <||@
  Comment 1014 1038 NOP  <||@
  Comment 1015 1040 NOP  <||@
  Comment 1016 1042 NOP  <||@
  Comment 1017 1044 NOP  <||@
  Comment 1018 1046 NOP  <||@
  Comment 1019 1048 NOP  <||@
  Comment 1020 1050 NOP  <||@
  Comment 1021 1052 NOP  <||@
  Comment 1022 1054 NOP  <||@
  Comment 1023 1056 NOP  <||@
  Comment 1024 1058 NOP  <||@
  Comment 1025 1060 NOP  <||@
  Comment 1026 1062 NOP  <||@
  Comment 1027 1064 NOP  <||@
  Comment 1028 1066 NOP  <||@
  Comment 1029 1068 NOP  <||@
  Comment 1030 1070 NOP  <||@
  Comment 1031 1072 NOP  <||@
  Comment 1032 1074 NOP  <||@
  Comment 1033 1076 NOP  <||@
  Comment 1034 1078 NOP  <||@
  Comment 1035 1080 NOP  <||@
  Comment 1036 1082 NOP  <||@
  Comment 1037 1084 NOP  <||@
  Comment 1038 1086 NOP  <||@
  Comment 1039 1088 NOP  <||@
  Comment 1040 1090 NOP  <||@
  Comment 1041 1092 NOP  <||@
  Comment 1042 1094 NOP  <||@
  Comment 1043 1096 NOP  <||@
  Comment 1044 1098 NOP  <||@
  Comment 1045 1100 NOP  <||@
  Comment 1046 1102 NOP  <||@
  Comment 1047 1104 NOP  <||@
  Comment 1048 1106 NOP  <||@
  Comment 1049 1108 NOP  <||@
  Comment 1050 1110 NOP  <||@
  Comment 1051 1112 NOP  <||@
  Comment 1052 1114 NOP  <||@
  Comment 1053 1116 NOP  <||@
  Comment 1054 1118 NOP  <||@
  Comment 1055 1120 NOP  <||@
  Comment 1056 1122 NOP  <||@
  Comment 1057 1124 NOP  <||@
  Comment 1058 1126 NOP  <||@
  Comment 1059 1128 AMD64G1PREWRITEBARRIER (~address: [r8|DWORD[_] * 8 + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc  <||@
  Comment 1120 1130 rdx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2a1c2fc3 encoding: base: 0 shift: 3  <||@
  Comment 1127 1132 MOV (x: [r8|DWORD[_] * 8 + 20], y: rdx|DWORD[_]) size: DWORD  <||@
  Comment 1135 1134 AMD64G1POSTWRITEBARRIER (~address: rbp|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rdx|QWORD, temp2: rcx|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71cf63bc  <||@
  Comment 1217 1136 r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1222 1138 r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1227 1140 r10|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 1232 1142 rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD  <||@
  Comment 1236 1144 rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD  <||@
  Comment 1240 1146 r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD  <||@
  Comment 1245 1148 rbx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD  <||@
  Comment 1249 1150 rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1253 1152 JUMP ~outgoingValues: [] destination: B31 -> B32  <||@
  Comment 1258 block B47 null  <||@
  Comment 1258 1484 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1258 1486 stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1262 1488 NOP  <||@
  Comment 1263 1490 NOP  <||@
  Comment 1264 1492 NOP  <||@
  Comment 1265 1494 NOP  <||@
  Comment 1266 1496 NOP  <||@
  Comment 1267 1498 NOP  <||@
  Comment 1268 1500 NOP  <||@
  Comment 1269 1502 NOP  <||@
  Comment 1270 1504 NOP  <||@
  Comment 1271 1506 NOP  <||@
  Comment 1272 1508 NOP  <||@
  Comment 1273 1510 rsi|QWORD[.] = MOVE input: rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 1276 1512 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1281 1514 rcx|DWORD = MOVE input: stack:56|DWORD moveKind: DWORD  <||@
  Comment 1285 1516 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1290 1518 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD] temps: [] callTarget: HotSpotMethod<PrintStream.append(CharSequence, int, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:4, 16]  <||@
  Comment 1291 {HotSpotMethod<PrintStream.append(CharSequence, int, int)>}  <||@
  Comment 1291 INVOKESPECIAL  <||@
  Comment 1296 []at java.io.PrintStream.append(PrintStream.java:67) [bci: 4, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1304 1520 JUMP ~outgoingValues: [] destination: B47 -> B48  <||@
  Comment 1309 block B16 null  <||@
  Comment 1309 598 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1309 600 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1314 602 stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1318 604 stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1322 606 stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1326 608 stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD  <||@
  Comment 1331 610 rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1336 612 stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1340 614 r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1345 616 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1345 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1355 618 NOP  <||@
  Comment 1356 620 NOP  <||@
  Comment 1357 622 NOP  <||@
  Comment 1358 624 NOP  <||@
  Comment 1359 626 NOP  <||@
  Comment 1360 628 NOP  <||@
  Comment 1361 630 NOP  <||@
  Comment 1362 632 NOP  <||@
  Comment 1363 634 NOP  <||@
  Comment 1364 636 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1366 638 r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1369 640 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1369 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1374 [r11:0, stack:20, stack:36, stack:40, stack:48, stack:56, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |-  |-   <||@
  Comment 1382 642 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1382 [rax:0, r11:0, stack:20, stack:36, stack:40, stack:48, stack:56, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |-  |-   <||@
  Comment 1382 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1384 644 rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1387 646 rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1390 648 stack:104|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1395 650 r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1400 652 r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1405 656 rdx|DWORD = MOVE input: stack:52|DWORD moveKind: DWORD  <||@
  Comment 1409 658 r14|DWORD[_] = MOVE input: stack:108|DWORD[_] moveKind: DWORD  <||@
  Comment 1414 662 rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1418 664 JUMP ~outgoingValues: [] destination: B16 -> B24  <||@
  Comment 1423 block B22 null  <||@
  Comment 1423 770 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1423 772 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1428 774 stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1432 776 stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1436 778 stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1440 780 stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD  <||@
  Comment 1445 782 rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1450 784 stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1454 786 r9|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1457 788 r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1462 790 NOP  <||@
  Comment 1463 792 NOP  <||@
  Comment 1464 794 NOP  <||@
  Comment 1465 796 NOP  <||@
  Comment 1466 798 NOP  <||@
  Comment 1467 800 NOP  <||@
  Comment 1468 802 NOP  <||@
  Comment 1469 804 NOP  <||@
  Comment 1470 806 NOP  <||@
  Comment 1471 808 rcx|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 1474 810 ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1484 812 rax|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1487 816 r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1492 818 r11|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1497 820 rdi|DWORD = MOVE input: stack:48|DWORD moveKind: DWORD  <||@
  Comment 1501 828 rbp|DWORD = MOVE input: stack:44|DWORD moveKind: DWORD  <||@
  Comment 1505 830 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 1510 block B11 null  <||@
  Comment 1510 384 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1510 386 stack:40|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1515 388 stack:44|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1519 390 stack:48|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 1523 392 stack:52|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1527 394 stack:108|DWORD[_] = MOVE input: r14|DWORD[_] moveKind: DWORD  <||@
  Comment 1532 396 rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1537 398 stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1541 400 r11|QWORD[.] = MOVE input: stack:104|QWORD[.] moveKind: QWORD  <||@
  Comment 1546 402 NOP  <||@
  Comment 1547 404 NOP  <||@
  Comment 1548 406 NOP  <||@
  Comment 1549 408 NOP  <||@
  Comment 1550 410 NOP  <||@
  Comment 1551 412 NOP  <||@
  Comment 1552 414 NOP  <||@
  Comment 1553 416 NOP  <||@
  Comment 1554 418 NOP  <||@
  Comment 1555 420 NOP  <||@
  Comment 1556 422 NOP  <||@
  Comment 1557 424 rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1564 426 r10|QWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1567 428 rsi|QWORD = LEA address: [r10|QWORD + 23] size: QWORD  <||@
  Comment 1571 430 rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD  <||@
  Comment 1575 432 rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1581 434 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: QWORD  <||@
  Comment 1594 block B13 null  <||@
  Comment 1594 468 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1594 470 NOP  <||@
  Comment 1595 472 NOP  <||@
  Comment 1596 474 NOP  <||@
  Comment 1597 476 NOP  <||@
  Comment 1598 478 NOP  <||@
  Comment 1599 480 NOP  <||@
  Comment 1600 482 NOP  <||@
  Comment 1601 484 NOP  <||@
  Comment 1602 486 NOP  <||@
  Comment 1603 488 NOP  <||@
  Comment 1604 490 NOP  <||@
  Comment 1605 492 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 1612 494 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1620 496 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1628 498 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1636 500 MOV x: [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 1643 502 MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 1643 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 1650 504 MOV (x: [rdi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 1654 506 rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 1654 508 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 1654 block B14 null  <||@
  Comment 1654 510 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1654 512 NOP  <||@
  Comment 1655 514 NOP  <||@
  Comment 1656 516 NOP  <||@
  Comment 1657 518 NOP  <||@
  Comment 1658 520 NOP  <||@
  Comment 1659 522 NOP  <||@
  Comment 1660 524 NOP  <||@
  Comment 1661 526 NOP  <||@
  Comment 1662 528 NOP  <||@
  Comment 1663 530 NOP  <||@
  Comment 1664 532 NOP  <||@
  Comment 1665 534 NOP  <||@
  Comment 1666 536 NOP  <||@
  Comment 1667 538 NOP  <||@
  Comment 1668 540 rsi|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1671 542 rdx|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1674 544 stack:120|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1679 546 rdi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 1683 548 rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 1687 550 rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 1690 552 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1690 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 1695 554 rsi|QWORD[.] = MOVE input: stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 1700 560 JUMP ~outgoingValues: [] destination: B14 -> B31  <||@
  Comment 1705 block B12 null  <||@
  Comment 1705 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1705 438 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1705 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1715 440 NOP  <||@
  Comment 1716 442 NOP  <||@
  Comment 1717 444 NOP  <||@
  Comment 1718 446 NOP  <||@
  Comment 1719 448 NOP  <||@
  Comment 1720 450 NOP  <||@
  Comment 1721 452 NOP  <||@
  Comment 1722 454 NOP  <||@
  Comment 1723 456 NOP  <||@
  Comment 1724 458 rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 1727 460 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1727 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1732 [r11:0, stack:20, stack:36, stack:40, stack:48, stack:56, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |-  |-   <||@
  Comment 1740 462 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1740 [rax:0, r11:0, stack:20, stack:36, stack:40, stack:48, stack:56, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |-  |-   <||@
  Comment 1740 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1742 464 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1745 466 JUMP ~outgoingValues: [] destination: B12 -> B14  <||@
  Comment 1747 block B29 null  <||@
  Comment 1747 926 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1747 928 NOP  <||@
  Comment 1748 930 NOP  <||@
  Comment 1749 932 NOP  <||@
  Comment 1750 934 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1757 936 r10|DWORD = MOVE input: int[-100889|0xfffffffffffe75e7]  <||@
  Comment 1763 942 JUMP ~outgoingValues: [] destination: B29 -> B50  <||@
  Comment 1763 block B50 null  <||@
  Comment 1763 1562 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1763 1556 r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1768 1558 r9|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1773 1564 NOP  <||@
  Comment 1774 1566 NOP  <||@
  Comment 1775 1568 NOP  <||@
  Comment 1776 1570 NOP  <||@
  Comment 1777 1572 NOP  <||@
  Comment 1778 1574 NOP  <||@
  Comment 1779 1576 NOP  <||@
  Comment 1780 1578 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1787 1580 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1794 1582 DEOPT info [bci:0]  <||@
  Comment 1794 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1799 [r8:0, r9:0]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0            |1            |2  |3 
     locals:  |r9|QWORD[.]  |r8|QWORD[.]  |-  |-   <||@
  Comment 1807 block B27 null  <||@
  Comment 1807 896 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1807 898 NOP  <||@
  Comment 1808 900 NOP  <||@
  Comment 1809 902 NOP  <||@
  Comment 1810 904 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1817 906 r10|DWORD = MOVE input: int[-99865|0xfffffffffffe79e7]  <||@
  Comment 1823 912 JUMP ~outgoingValues: [] destination: B27 -> B50  <||@
  Comment 1825 block B25 null  <||@
  Comment 1825 866 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1825 868 NOP  <||@
  Comment 1826 870 NOP  <||@
  Comment 1827 872 NOP  <||@
  Comment 1828 874 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1835 876 r10|DWORD = MOVE input: int[-98841|0xfffffffffffe7de7]  <||@
  Comment 1841 882 JUMP ~outgoingValues: [] destination: B25 -> B50  <||@
  Comment 1843 block B41 null  <||@
  Comment 1843 1310 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1843 1312 stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1847 1314 NOP  <||@
  Comment 1848 1316 NOP  <||@
  Comment 1849 1318 NOP  <||@
  Comment 1850 1320 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1857 1322 r10|DWORD = MOVE input: int[-95769|0xfffffffffffe89e7]  <||@
  Comment 1863 1332 JUMP ~outgoingValues: [] destination: B41 -> B45  <||@
  Comment 1863 block B45 null  <||@
  Comment 1863 1444 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1863 1204 rbp|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1868 1206 rax|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1873 1210 r9|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1878 1446 NOP  <||@
  Comment 1879 1448 NOP  <||@
  Comment 1880 1450 NOP  <||@
  Comment 1881 1452 NOP  <||@
  Comment 1882 1454 NOP  <||@
  Comment 1883 1456 NOP  <||@
  Comment 1884 1458 NOP  <||@
  Comment 1885 1460 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1892 1462 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1899 1464 DEOPT info [bci:38, 35, 4, 4, 16]  <||@
  Comment 1899 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1904 [rax:0, rbp:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:686) [bci: 35, duringCall: true, rethrow: false]
              |0             |1             |2          |3         |4 
     locals:  |rbp|QWORD[.]  |rax|QWORD[.]  |rbx|DWORD  |r9|DWORD  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:218) [bci: 4, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |rbp|QWORD[.]  |-  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 4, duringCall: true, rethrow: false]
              |0             |1             |2          |3        
     locals:  |rbp|QWORD[.]  |rax|QWORD[.]  |rbx|DWORD  |r9|DWORD 
  at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 16, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1912 block B2 null  <||@
  Comment 1912 118 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1912 120 stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1917 122 stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1922 124 NOP  <||@
  Comment 1923 126 NOP  <||@
  Comment 1924 128 NOP  <||@
  Comment 1925 130 r11|QWORD = MOVE input: long[2580|0xa14]  <||@
  Comment 1932 132 r10|DWORD = MOVE input: int[-87571|0xfffffffffffea9ed]  <||@
  Comment 1938 138 JUMP ~outgoingValues: [] destination: B2 -> B50  <||@
  Comment 1943 block B46 null  <||@
  Comment 1943 1466 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1943 1468 NOP  <||@
  Comment 1944 1470 NOP  <||@
  Comment 1945 1472 NOP  <||@
  Comment 1946 1474 r11|QWORD = MOVE input: long[3860|0xf14]  <||@
  Comment 1953 1476 r10|DWORD = MOVE input: int[-97811|0xfffffffffffe81ed]  <||@
  Comment 1959 1482 JUMP ~outgoingValues: [] destination: B46 -> B50  <||@
  Comment 1964 block B43 null  <||@
  Comment 1964 1396 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1964 1398 stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1968 1400 NOP  <||@
  Comment 1969 1402 NOP  <||@
  Comment 1970 1404 NOP  <||@
  Comment 1971 1406 r11|QWORD = MOVE input: long[5140|0x1414]  <||@
  Comment 1978 1408 r10|DWORD = MOVE input: int[-91667|0xfffffffffffe99ed]  <||@
  Comment 1984 1418 JUMP ~outgoingValues: [] destination: B43 -> B45  <||@
  Comment 1986 block B37 null  <||@
  Comment 1986 1226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1986 1228 stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1990 1230 NOP  <||@
  Comment 1991 1232 NOP  <||@
  Comment 1992 1234 NOP  <||@
  Comment 1993 1236 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2000 1238 r10|DWORD = MOVE input: int[-93721|0xfffffffffffe91e7]  <||@
  Comment 2006 1248 JUMP ~outgoingValues: [] destination: B37 -> B45  <||@
  Comment 2011 block B35 null  <||@
  Comment 2011 1190 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2011 1192 stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 2015 1194 NOP  <||@
  Comment 2016 1196 NOP  <||@
  Comment 2017 1198 NOP  <||@
  Comment 2018 1200 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2025 1202 r10|DWORD = MOVE input: int[-92697|0xfffffffffffe95e7]  <||@
  Comment 2031 1212 JUMP ~outgoingValues: [] destination: B35 -> B45  <||@
  Comment 2036 block B44 null  <||@
  Comment 2036 1420 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2036 1422 stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 2040 1424 NOP  <||@
  Comment 2041 1426 NOP  <||@
  Comment 2042 1428 NOP  <||@
  Comment 2043 1430 r11|QWORD = MOVE input: long[4500|0x1194]  <||@
  Comment 2050 1432 r10|DWORD = MOVE input: int[-90643|0xfffffffffffe9ded]  <||@
  Comment 2056 1442 JUMP ~outgoingValues: [] destination: B44 -> B45  <||@
  Comment 2061 block B4 null  <||@
  Comment 2061 152 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2061 154 stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2066 156 stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2071 158 NOP  <||@
  Comment 2072 160 NOP  <||@
  Comment 2073 162 NOP  <||@
  Comment 2074 164 r11|QWORD = MOVE input: long[2580|0xa14]  <||@
  Comment 2081 166 r10|DWORD = MOVE input: int[-88595|0xfffffffffffea5ed]  <||@
  Comment 2087 172 JUMP ~outgoingValues: [] destination: B4 -> B50  <||@
  Comment 2092 block B39 null  <||@
  Comment 2092 1266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2092 1268 stack:56|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 2096 1270 NOP  <||@
  Comment 2097 1272 NOP  <||@
  Comment 2098 1274 NOP  <||@
  Comment 2099 1276 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2106 1278 r10|DWORD = MOVE input: int[-94745|0xfffffffffffe8de7]  <||@
  Comment 2112 1288 JUMP ~outgoingValues: [] destination: B39 -> B45  <||@
  Comment 2117 block B6 null  <||@
  Comment 2117 200 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2117 202 stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2122 204 NOP  <||@
  Comment 2123 206 NOP  <||@
  Comment 2124 208 NOP  <||@
  Comment 2125 210 r11|QWORD = MOVE input: long[2580|0xa14]  <||@
  Comment 2132 212 r10|DWORD = MOVE input: int[-89619|0xfffffffffffea1ed]  <||@
  Comment 2138 218 JUMP ~outgoingValues: [] destination: B6 -> B50  <||@
  Comment 2143 block B49 null  <||@
  Comment 2143 1540 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2143 1542 stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2148 1544 stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2153 1546 NOP  <||@
  Comment 2154 1548 NOP  <||@
  Comment 2155 1550 NOP  <||@
  Comment 2156 1552 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 2163 1554 r10|DWORD = MOVE input: int[-6707|0xffffffffffffe5cd]  <||@
  Comment 2169 1560 JUMP ~outgoingValues: [] destination: B49 -> B50  <||@
  Comment 2179 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2204 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2214 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2229 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2262 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2267 [r10:0, r11:0]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-   <||@
  Comment 2297 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2302 [r8:0, r10:0, r11:0]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-   <||@
  Comment 2332 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2337 [rbp:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-   <||@
  Comment 2367 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2372 [rbp:0, rsi:0, rdi:0, r8:0, r10:0, r11:0, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-   <||@
  Comment 2402 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2407 [rbp:0, rsi:0, r8:0, r10:0, r11:0, r14:0, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3 
     locals:  |r10|QWORD[.]  |r11|QWORD[.]  |-  |-   <||@
  Comment 2437 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2442 [rax:0, r11:0, stack:20, stack:36, stack:40, stack:48, stack:56, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |-  |-   <||@
  Comment 2472 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2477 [rax:0, r11:0, stack:20, stack:36, stack:40, stack:48, stack:56, stack:64]at java.util.Formatter$FixedString.print(Formatter.java:2876) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1                  |2  |3 
     locals:  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |-  |-   <||@
  Comment 2485 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2485 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2491 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2491 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
