begin_compilation
  name " HotSpotCompilation-4163[java.lang.StringLatin1.indexOf(byte[], int, int, int)]"
  method "HotSpotCompilation-4163[java.lang.StringLatin1.indexOf(byte[], int, int, int)]"
  date 1724269726045
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i72 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i72  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v73 i35 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i35 v39 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v13 i37 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i46 v44 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_1
code: ResolvedJavaMethodBytecode<StringLatin1.indexOf(byte[], int, int, int)>
localsSize: 4
locksSize: 0
sourceFile: StringLatin1.java
sourceLine: 196
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 i4 
=== Succesors ===
=== Usages ===
v74 i72 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i72 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i72 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-12299|0xffffffffffffcff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:200) [bci: 17]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v73 
lastLocationAccess: - 
=== Succesors ===
next: v61 
=== Usages ===
i46 v44 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v73 lastLocationAccess: - #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.canEncode(StringLatin1.java:51) [bci: 4]
at java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 1]
rawvalue: -256
stableDimension: 0
stamp: i32 [-256]
stampKind: i32
value: int[-256|0xffffffffffffff00]
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.canEncode(StringLatin1.java:51) [bci: 4]
at java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 1]
stamp: void
=== Inputs ===
x: i2 
y: i38 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i2 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 4]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v39 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v60 
=== Usages ===
=== Predecessor ===
i72 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v39 #trueSuccessor: v59 #falseSuccessor: v60  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:199) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 i37 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at java.lang.StringLatin1.indexOf(StringLatin1.java:199) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i9 
=== Succesors ===
=== Usages ===
i37 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at java.lang.StringLatin1.indexOf(StringLatin1.java:199) [bci: 11]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v13 
trueValue: i9 
falseValue: i3 
=== Succesors ===
=== Usages ===
i35 v28 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v13 trueValue: i9 falseValue: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.lang.StringLatin1.indexOf(StringLatin1.java:200) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i72 
y: i4 
=== Succesors ===
=== Usages ===
i46 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i72 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.lang.StringLatin1.indexOf(StringLatin1.java:200) [bci: 18]
stamp: i32
=== Inputs ===
condition: v44 
trueValue: i72 
falseValue: i4 
=== Succesors ===
=== Usages ===
i35 v28 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v44 trueValue: i72 falseValue: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:201) [bci: 24]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i37 
y: i46 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i37 y: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:201) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.9996714772783724
stamp: void
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v30 
falseSuccessor: v29 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v30 #falseSuccessor: v29  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: i35 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i35  <|@  <|@
f <@~|@floating>@ <|@
tid j34 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOfChar(byte[], int, int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 33]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.indexOfChar(byte[], int, int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 33]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: MatchAny
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a1 
arrayOffset: j34 
arrayLength: i46 
fromIndex: i37 
searchValues: i2 
=== Succesors ===
next: v36 
=== Usages ===
v36 
=== Predecessor ===
v30 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a1 arrayOffset: j34 arrayLength: i46 fromIndex: i37 searchValues: i2 #next: v36  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 36]
stamp: void
=== Inputs ===
memoryMap: - 
result: i35 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i35 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i35  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:202) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:202) [bci: 27]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:202) [bci: 28]
stamp: void
=== Inputs ===
memoryMap: - 
result: i32 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i32  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v74  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 58
mayConvertToGuard: true
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:200) [bci: 17]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x367ab67c]: UnreachedCode@6[HotSpotMethod<StringLatin1.indexOf(byte[], int, int, int)>, 7]}
stamp: void
=== Inputs ===
stateBefore: ?5 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?5  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v2|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i72 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i72  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# byte[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v73 i35 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i35 v39 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v13 i37 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i46 v44 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_1
code: ResolvedJavaMethodBytecode<StringLatin1.indexOf(byte[], int, int, int)>
localsSize: 4
locksSize: 0
sourceFile: StringLatin1.java
sourceLine: 196
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 i4 
=== Succesors ===
=== Usages ===
v74 i72 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3 i4  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i72 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i72 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-12299|0xffffffffffffcff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:200) [bci: 17]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v73 
lastLocationAccess: - 
=== Succesors ===
next: v61 
=== Usages ===
i46 v44 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v73 lastLocationAccess: - #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
result int[-256|0xffffffffffffff00] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.canEncode(StringLatin1.java:51) [bci: 4]
at java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 1]
rawvalue: -256
stableDimension: 0
stamp: i32 [-256]
stampKind: i32
value: int[-256|0xffffffffffffff00]
=== Inputs ===
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.canEncode(StringLatin1.java:51) [bci: 4]
at java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 1]
stamp: void
=== Inputs ===
x: i2 
y: i38 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i2 y: i38  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 4]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v39 
=== Succesors ===
trueSuccessor: v59 
falseSuccessor: v60 
=== Usages ===
=== Predecessor ===
i72 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v39 #trueSuccessor: v59 #falseSuccessor: v60  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:199) [bci: 9]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 i37 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at java.lang.StringLatin1.indexOf(StringLatin1.java:199) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i9 
=== Succesors ===
=== Usages ===
i37 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at java.lang.StringLatin1.indexOf(StringLatin1.java:199) [bci: 11]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v13 
trueValue: i9 
falseValue: i3 
=== Succesors ===
=== Usages ===
i35 v28 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v13 trueValue: i9 falseValue: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.lang.StringLatin1.indexOf(StringLatin1.java:200) [bci: 18]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i72 
y: i4 
=== Succesors ===
=== Usages ===
i46 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i72 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.lang.StringLatin1.indexOf(StringLatin1.java:200) [bci: 18]
stamp: i32
=== Inputs ===
condition: v44 
trueValue: i72 
falseValue: i4 
=== Succesors ===
=== Usages ===
i35 v28 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v44 trueValue: i72 falseValue: i4  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:201) [bci: 24]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i37 
y: i46 
=== Succesors ===
=== Usages ===
v31 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i37 y: i46  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:201) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.9996714772783724
stamp: void
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v30 
falseSuccessor: v29 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v30 #falseSuccessor: v29  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v2|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: i35 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i35  <|@  <|@
f <@~|@floating>@ <|@
tid j34 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOfChar(byte[], int, int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 33]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i35 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.indexOfChar(byte[], int, int, int) [bci: -1]
at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 33]
runtimeCheckedCPUFeatures: [null]
stamp: i32
stride: S1
variant: MatchAny
=== Inputs ===
lastLocationAccess: - 
arrayPointer: a1 
arrayOffset: j34 
arrayLength: i46 
fromIndex: i37 
searchValues: i2 
=== Succesors ===
next: v36 
=== Usages ===
v36 
=== Predecessor ===
v30 >@ <|@
instruction <@ArrayIndexOf|@jdk.graal.compiler.replacements.nodes.ArrayIndexOfNode>@ lastLocationAccess: - arrayPointer: a1 arrayOffset: j34 arrayLength: i46 fromIndex: i37 searchValues: i2 #next: v36  <|@  <|@
f <@*|@fixed>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:204) [bci: 36]
stamp: void
=== Inputs ===
memoryMap: - 
result: i35 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i35 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i35  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:202) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v33 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:202) [bci: 27]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:202) [bci: 28]
stamp: void
=== Inputs ===
memoryMap: - 
result: i32 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i32  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v74  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 58
mayConvertToGuard: true
nodeSourcePosition: at java.lang.StringLatin1.indexOf(StringLatin1.java:200) [bci: 17]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x367ab67c]: UnreachedCode@6[HotSpotMethod<StringLatin1.indexOf(byte[], int, int, int)>, 7]}
stamp: void
=== Inputs ===
stateBefore: ?5 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?5  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v2|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v2|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v2|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v2|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v2|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction v6|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction v5|DWORD = CMOVE (falseValue: v2|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction v7|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r9|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  118  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction v6|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction v5|DWORD = CMOVE (falseValue: v2|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction v7|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r9|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  118  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v8|d [0, 1[[116, 118[[120, 122[[142, 144[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v7|d [0, 32[[110, 117[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 30[[108, 117[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 28[[106, 117[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d v5|d [0, 34[[112, 116[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v1|d [0, 1[[114, 116[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [28, 106[[146, 167[28 MustHaveRegister 36 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [30, 114[[146, 167[30 MustHaveRegister 38 ShouldHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|- [32, 64[[146, 167[32 MustHaveRegister 60 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d r8|d [34, 68[[146, 167[34 MustHaveRegister 66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [36, 69[36 MustHaveRegister 66 ShouldHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d v2|d [64, 112[64 MustHaveRegister 70 ShouldHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [62, 65[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d v3|d [68, 110[68 MustHaveRegister 70 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d rax|d [118, 120[118 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v8|d [0, 1[[116, 118[[120, 122[[142, 144[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v7|d [0, 32[[110, 117[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 30[[108, 117[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 28[[106, 117[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d v5|d [0, 34[[112, 116[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v1|d [0, 1[[114, 116[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [28, 106[[146, 167[28 MustHaveRegister 36 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[r10|d]" v1|d rdx|- [30, 114[[146, 167[30 MustHaveRegister 38 ShouldHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [32, 64[[146, 167[32 MustHaveRegister 60 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|d [34, 68[[146, 167[34 MustHaveRegister 66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rdx|d]" v4|d -1 [36, 69[36 MustHaveRegister 66 ShouldHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdi|d]" v5|d v2|d [64, 112[64 MustHaveRegister 70 ShouldHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [62, 65[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r8|d]" v7|d v3|d [68, 110[68 MustHaveRegister 70 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d rax|d [118, 120[118 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction v6|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction v5|DWORD = CMOVE (falseValue: v2|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction v7|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r9|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  118  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v8|d [0, 1[[116, 118[[120, 122[[142, 144[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v7|d [0, 32[[110, 117[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 30[[108, 117[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 28[[106, 117[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d v5|d [0, 34[[112, 116[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v1|d [0, 1[[114, 116[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [28, 106[[146, 167[28 MustHaveRegister 36 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[r10|d]" v1|d rdx|- [30, 114[[146, 167[30 MustHaveRegister 38 ShouldHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [32, 64[[146, 167[32 MustHaveRegister 60 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|d [34, 68[[146, 167[34 MustHaveRegister 66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rdx|d]" v4|d -1 [36, 69[36 MustHaveRegister 66 ShouldHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdi|d]" v5|d v2|d [64, 112[64 MustHaveRegister 70 ShouldHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [62, 65[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r8|d]" v7|d v3|d [68, 110[68 MustHaveRegister 70 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d rax|d [118, 120[118 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction v6|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction v5|DWORD = CMOVE (falseValue: v2|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction v7|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r9|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  118  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v8|d [0, 1[[116, 118[[120, 122[[142, 144[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v7|d [0, 32[[110, 117[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 30[[108, 117[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 24[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 28[[106, 117[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  r8|d fixed "[r8|d]" r8|d v5|d [0, 34[[112, 116[ "NoOptimization"
  r9|d fixed "[r9|d]" r9|d v1|d [0, 1[[114, 116[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[116, 117[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [28, 106[[146, 167[28 MustHaveRegister 36 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[r10|d]" v1|d rdx|- [30, 114[[146, 167[30 MustHaveRegister 38 ShouldHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [32, 64[[146, 167[32 MustHaveRegister 60 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|d [34, 68[[146, 167[34 MustHaveRegister 66 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rdx|d]" v4|d -1 [36, 69[36 MustHaveRegister 66 ShouldHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rdi|d]" v5|d v2|d [64, 112[64 MustHaveRegister 70 ShouldHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[r9|d]" v6|d -1 [62, 65[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r8|d]" v7|d v3|d [68, 110[68 MustHaveRegister 70 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d rax|d [118, 120[118 MustHaveRegister 120 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction v6|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction v5|DWORD = CMOVE (falseValue: v2|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction v7|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r9|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  118  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction v6|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction v5|DWORD = CMOVE (falseValue: v2|DWORD, ~trueValue: v6|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction v7|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: v7|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r9|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  118  <|@ instruction v8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  120  <|@ instruction rax|DWORD = MOVE input: v8|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD v3|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction rdi|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction rdi|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction rdi|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction rdi|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction rdi|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction rdi|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction rdi|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction rdi|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction rdi|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction rdi|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction rdi|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction rdi|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction rdx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   64  <|@ instruction rdi|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: r9|DWORD) condition: < <|@ <|@
      nr   66  <|@ instruction CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: > <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607179459730403998
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  110  <|@ instruction rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r8|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  122  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4554695798212464640
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rax|DWORD = MOVE input: int[-1|0xffffffffffffffff] <|@ <|@
      nr  144  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD <|@ <|@
      nr  164  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  166  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD rcx|DWORD r8|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #20         // canEncode:(int)boolean
     4: ifne          9
     7: iconst_m1     
     8: ireturn       
     9: iload_2       
    10: iconst_0      
    11: invokestatic  #21         // java.lang.Math.max:(int, int)int
    14: istore_2      
    15: iload_3       
    16: aload_0       
    17: arraylength   
    18: invokestatic  #7          // java.lang.Math.min:(int, int)int
    21: istore_3      
    22: iload_2       
    23: iload_3       
    24: if_icmplt     29
    27: iconst_m1     
    28: ireturn       
    29: aload_0       
    30: iload_1       
    31: iload_2       
    32: iload_3       
    33: invokestatic  #22         // indexOfChar:(byte[], int, int, int)int
    36: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec189041817f20000000000f85da000000909090909090909090909048896c2410448bd28b560c41f7c200ffffff0f858d00000090909090909090909085c941b9000000008bf9410f4cf9443bc2440f4fc2443bc70f8e3f0000009090909090909090909090909090909048c7c210000000418bc8448bc7458bcae800000000488b6c24104883c418493ba7500400000f8765000000c5f877c39090909090909090b8ffffffff488b6c24104883c418493ba7500400000f8752000000c5f877c39090909090909041c78784040000edc5ffff49c7879004000014000000e8000000000f1f84000000000048896c2410e800000000e917fffffff4488d0d87ffffff49898f68040000e9e9fefffff4488d0d9affffff49898f68040000e9d5fefffff441c78784040000f5cfffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 42 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD  <||@
  Comment 42 30 r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 45 36 rdx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 45 [rsi:0]at java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3        
     locals:  |rsi|QWORD[.]  |r10|DWORD  |rcx|DWORD  |r8|DWORD   <||@
  Comment 45 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 48 38 TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD  <||@
  Comment 61 block B1 null  <||@
  Comment 61 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 61 42 NOP  <||@
  Comment 62 44 NOP  <||@
  Comment 63 46 NOP  <||@
  Comment 64 48 NOP  <||@
  Comment 65 50 NOP  <||@
  Comment 66 52 NOP  <||@
  Comment 67 54 NOP  <||@
  Comment 68 56 NOP  <||@
  Comment 69 58 NOP  <||@
  Comment 70 60 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 72 62 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 78 64 rdi|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: r9|DWORD) condition: <  <||@
  Comment 84 66 CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 87 68 r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: >  <||@
  Comment 91 70 CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD  <||@
  Comment 100 block B2 null  <||@
  Comment 100 72 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 100 74 NOP  <||@
  Comment 101 76 NOP  <||@
  Comment 102 78 NOP  <||@
  Comment 103 80 NOP  <||@
  Comment 104 82 NOP  <||@
  Comment 105 84 NOP  <||@
  Comment 106 86 NOP  <||@
  Comment 107 88 NOP  <||@
  Comment 108 90 NOP  <||@
  Comment 109 92 NOP  <||@
  Comment 110 94 NOP  <||@
  Comment 111 96 NOP  <||@
  Comment 112 98 NOP  <||@
  Comment 113 100 NOP  <||@
  Comment 114 102 NOP  <||@
  Comment 115 104 NOP  <||@
  Comment 116 108 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 123 110 rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 126 112 r8|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 129 114 r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 132 116 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL  <||@
  Comment 132 {Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 137 122 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 146 POLL_RETURN_FAR  <||@
  Comment 163 block B3 null  <||@
  Comment 163 124 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 163 126 NOP  <||@
  Comment 164 128 NOP  <||@
  Comment 165 130 NOP  <||@
  Comment 166 132 NOP  <||@
  Comment 167 134 NOP  <||@
  Comment 168 136 NOP  <||@
  Comment 169 138 NOP  <||@
  Comment 170 140 NOP  <||@
  Comment 171 142 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 176 144 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 185 POLL_RETURN_FAR  <||@
  Comment 202 block B4 null  <||@
  Comment 202 146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 202 148 NOP  <||@
  Comment 203 150 NOP  <||@
  Comment 204 152 NOP  <||@
  Comment 205 154 NOP  <||@
  Comment 206 156 NOP  <||@
  Comment 207 158 NOP  <||@
  Comment 208 160 NOP  <||@
  Comment 209 162 MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD  <||@
  Comment 220 164 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 231 166 DEOPT info [bci:0]  <||@
  Comment 231 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 236 [rsi:0]at java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3        
     locals:  |rsi|QWORD[.]  |r10|DWORD  |rcx|DWORD  |r8|DWORD   <||@
  Comment 249 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 274 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 294 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 322 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 327 [rsi:0]at java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3        
     locals:  |rsi|QWORD[.]  |r10|DWORD  |rcx|DWORD  |r8|DWORD   <||@
  Comment 335 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 335 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 341 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 341 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4163[java.lang.StringLatin1.indexOf(byte[], int, int, int)]"
  method "HotSpotCompilation-4163[java.lang.StringLatin1.indexOf(byte[], int, int, int)]"
  date 1724269726142
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ad26d80 89842400c0feff4883ec189041817f20000000000f85da000000909090909090909090909048896c2410448bd28b560c41f7c200ffffff0f858d00000090909090909090909085c941b9000000008bf9410f4cf9443bc2440f4fc2443bc70f8e3f0000009090909090909090909090909090909048c7c210000000418bc8448bc7458bcae8f720bbfe488b6c24104883c418493ba7500400000f8765000000c5f877c39090909090909090b8ffffffff488b6c24104883c418493ba7500400000f8752000000c5f877c39090909090909041c78784040000edc5ffff49c7879004000014000000e80e43a6fe0f1f84000000000048896c2410e8a243a4fee917fffffff4488d0d87ffffff49898f68040000e96951a6fef4488d0d9affffff49898f68040000e95551a6fef441c78784040000f5cfffff49c7879004000000000000e8b342a6fe0f1f840000000000e82ce4b9fef4e84640a6fef4f4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 42 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@cf0daa2 slotKind: QWORD  <||@
  Comment 42 30 r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 45 36 rdx|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 45 [rsi:0]at java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3        
     locals:  |rsi|QWORD[.]  |r10|DWORD  |rcx|DWORD  |r8|DWORD   <||@
  Comment 45 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 48 38 TESTCONSTBRANCH x: r10|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 y: -256 size: DWORD  <||@
  Comment 61 block B1 null  <||@
  Comment 61 40 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 61 42 NOP  <||@
  Comment 62 44 NOP  <||@
  Comment 63 46 NOP  <||@
  Comment 64 48 NOP  <||@
  Comment 65 50 NOP  <||@
  Comment 66 52 NOP  <||@
  Comment 67 54 NOP  <||@
  Comment 68 56 NOP  <||@
  Comment 69 58 NOP  <||@
  Comment 70 60 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 72 62 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 78 64 rdi|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: r9|DWORD) condition: <  <||@
  Comment 84 66 CMP (x: r8|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 87 68 r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rdx|DWORD) condition: >  <||@
  Comment 91 70 CMPBRANCH (x: r8|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.9996714772783724 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD  <||@
  Comment 100 block B2 null  <||@
  Comment 100 72 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 100 74 NOP  <||@
  Comment 101 76 NOP  <||@
  Comment 102 78 NOP  <||@
  Comment 103 80 NOP  <||@
  Comment 104 82 NOP  <||@
  Comment 105 84 NOP  <||@
  Comment 106 86 NOP  <||@
  Comment 107 88 NOP  <||@
  Comment 108 90 NOP  <||@
  Comment 109 92 NOP  <||@
  Comment 110 94 NOP  <||@
  Comment 111 96 NOP  <||@
  Comment 112 98 NOP  <||@
  Comment 113 100 NOP  <||@
  Comment 114 102 NOP  <||@
  Comment 115 104 NOP  <||@
  Comment 116 108 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 123 110 rcx|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 126 112 r8|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 129 114 r9|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 132 116 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD] temps: [rax|ILLEGAL, rdx|ILLEGAL, rdi|ILLEGAL, rcx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL  <||@
  Comment 132 {Stub<IntrinsicStubsGen.indexOf1S1>@0x7f78998d8f00:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD, rcx|DWORD, r8|DWORD, r9|DWORD -> rax|DWORD]; temps=rax|ILLEGAL,rdx|ILLEGAL,rdi|ILLEGAL,rcx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 137 122 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 146 POLL_RETURN_FAR  <||@
  Comment 163 block B3 null  <||@
  Comment 163 124 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 163 126 NOP  <||@
  Comment 164 128 NOP  <||@
  Comment 165 130 NOP  <||@
  Comment 166 132 NOP  <||@
  Comment 167 134 NOP  <||@
  Comment 168 136 NOP  <||@
  Comment 169 138 NOP  <||@
  Comment 170 140 NOP  <||@
  Comment 171 142 rax|DWORD = MOVE input: int[-1|0xffffffffffffffff]  <||@
  Comment 176 144 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 185 POLL_RETURN_FAR  <||@
  Comment 202 block B4 null  <||@
  Comment 202 146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 202 148 NOP  <||@
  Comment 203 150 NOP  <||@
  Comment 204 152 NOP  <||@
  Comment 205 154 NOP  <||@
  Comment 206 156 NOP  <||@
  Comment 207 158 NOP  <||@
  Comment 208 160 NOP  <||@
  Comment 209 162 MOV x: [r15|QWORD + 1156] y: -14867 size: DWORD  <||@
  Comment 220 164 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 231 166 DEOPT info [bci:0]  <||@
  Comment 231 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 236 [rsi:0]at java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3        
     locals:  |rsi|QWORD[.]  |r10|DWORD  |rcx|DWORD  |r8|DWORD   <||@
  Comment 249 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 274 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 294 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 322 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 327 [rsi:0]at java.lang.StringLatin1.indexOf(StringLatin1.java:196) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3        
     locals:  |rsi|QWORD[.]  |r10|DWORD  |rcx|DWORD  |r8|DWORD   <||@
  Comment 335 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 335 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 341 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 341 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
