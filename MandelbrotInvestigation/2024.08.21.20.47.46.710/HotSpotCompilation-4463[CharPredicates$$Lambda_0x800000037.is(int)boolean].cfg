begin_compilation
  name " HotSpotCompilation-4463[java.util.regex.CharPredicates$$Lambda/0x800000037.is(int)]"
  method "HotSpotCompilation-4463[java.util.regex.CharPredicates$$Lambda/0x800000037.is(int)]"
  date 1724269748434
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i15 v9 i13 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 1]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
rawvalue: 128
stableDimension: 0
stamp: i32 [128]
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 4]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i8 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 4]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v23 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v22 #falseSuccessor: v23  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 7]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v7  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 3]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
rawvalue: -48
stableDimension: 0
stamp: i32 [-48]
stampKind: i32
value: int[-48|0xffffffffffffffd0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i13 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 3]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
stamp: i32
=== Inputs ===
x: i2 
y: i12 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 4]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
rawvalue: 57
stableDimension: 0
stamp: i32 [57]
stampKind: i32
value: int[57|0x39]
=== Inputs ===
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 7]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
stamp: i32
=== Inputs ===
x: i14 
y: i2 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i14 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 8]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
stamp: i32
=== Inputs ===
x: i13 
y: i15 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i13 y: i15  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 9]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 i20 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 9]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i16 
y: i17 
=== Succesors ===
=== Usages ===
i20 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i16 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 9]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i20 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 9]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v18 
trueValue: i17 
falseValue: i19 
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v18 trueValue: i17 falseValue: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 4]
stamp: void
=== Inputs ===
memoryMap: - 
result: i20 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i20  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 4]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_1
code: ResolvedJavaMethodBytecode<CharPredicates$$Lambda/0x800000037.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i2 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 4]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xe4a8602]: UnreachedCode@6[HotSpotMethod<CharPredicates.lambda$ASCII_DIGIT$18(int)>, 18]}
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v0|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = LEA address: [v0|DWORD - 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SETCC condition: >= <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i15 v9 i13 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 1]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
rawvalue: 128
stableDimension: 0
stamp: i32 [128]
stampKind: i32
value: int[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 4]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i8 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i8  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 4]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v9 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v23 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v9 #trueSuccessor: v22 #falseSuccessor: v23  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v0|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 7]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v7  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[-48|0xffffffffffffffd0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 3]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
rawvalue: -48
stableDimension: 0
stamp: i32 [-48]
stampKind: i32
value: int[-48|0xffffffffffffffd0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i13 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 3]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
stamp: i32
=== Inputs ===
x: i2 
y: i12 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i2 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result int[57|0x39] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 4]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
rawvalue: 57
stableDimension: 0
stamp: i32 [57]
stampKind: i32
value: int[57|0x39]
=== Inputs ===
=== Succesors ===
=== Usages ===
i15 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 7]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
stamp: i32
=== Inputs ===
x: i14 
y: i2 
=== Succesors ===
=== Usages ===
i16 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i14 y: i2  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 8]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
stamp: i32
=== Inputs ===
x: i13 
y: i15 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i13 y: i15  <|@  <|@
f <@~|@floating>@ <|@
tid i17 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 9]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v18 i20 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 9]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i16 
y: i17 
=== Succesors ===
=== Usages ===
i20 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i16 y: i17  <|@  <|@
f <@~|@floating>@ <|@
tid i19 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 9]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i20 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isDigit(ASCII.java:215) [bci: 9]
at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 8]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v18 
trueValue: i17 
falseValue: i19 
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v18 trueValue: i17 falseValue: i19  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 4]
stamp: void
=== Inputs ===
memoryMap: - 
result: i20 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = LEA address: [v0|DWORD - 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SETCC condition: >= <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 4]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_1
code: ResolvedJavaMethodBytecode<CharPredicates$$Lambda/0x800000037.is(int)>
localsSize: 2
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i2 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18(CharPredicates.java:421) [bci: 4]
at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 1]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xe4a8602]: UnreachedCode@6[HotSpotMethod<CharPredicates.lambda$ASCII_DIGIT$18(int)>, 18]}
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v0|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = LEA address: [v0|DWORD - 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SETCC condition: >= <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v0|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = LEA address: [v0|DWORD - 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SETCC condition: >= <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v0|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = LEA address: [v0|DWORD - 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SETCC condition: >= <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v0|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = LEA address: [v0|DWORD - 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SETCC condition: >= <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v0|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = LEA address: [v0|DWORD - 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SETCC condition: >= <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH x: v0|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v1|DWORD = LEA address: [v0|DWORD - 48] size: DWORD <|@ <|@
      nr   62  <|@ instruction v2|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   64  <|@ instruction v3|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction v5|DWORD = SETCC condition: >= <|@ <|@
      nr   72  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH x: v0|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v1|DWORD = LEA address: [v0|DWORD - 48] size: DWORD <|@ <|@
      nr   62  <|@ instruction v2|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   64  <|@ instruction v3|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction v5|DWORD = SETCC condition: >= <|@ <|@
      nr   72  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v5|d [0, 1[[72, 74[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 20[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 16[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  v0|d DWORD "[v0|d]" v0|d rdx|d [20, 65[[76, 97[20 MustHaveRegister 22 ShouldHaveRegister 60 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [60, 66[60 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d v2|d [64, 66[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d v1|d [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [70, 72[70 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v5|d [0, 1[[72, 74[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 20[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 16[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  v0|d DWORD "[rdx|d]" v0|d rdx|d [20, 65[[76, 97[20 MustHaveRegister 22 ShouldHaveRegister 60 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [60, 66[60 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d v2|d [64, 66[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rax|d]" v4|d v1|d [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d -1 [70, 72[70 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH x: v0|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v1|DWORD = LEA address: [v0|DWORD - 48] size: DWORD <|@ <|@
      nr   62  <|@ instruction v2|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   64  <|@ instruction v3|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction v5|DWORD = SETCC condition: >= <|@ <|@
      nr   72  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v5|d [0, 1[[72, 74[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 20[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 16[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  v0|d DWORD "[rdx|d]" v0|d rdx|d [20, 65[[76, 97[20 MustHaveRegister 22 ShouldHaveRegister 60 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [60, 66[60 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d v2|d [64, 66[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rax|d]" v4|d v1|d [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d -1 [70, 72[70 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH x: v0|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v1|DWORD = LEA address: [v0|DWORD - 48] size: DWORD <|@ <|@
      nr   62  <|@ instruction v2|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   64  <|@ instruction v3|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction v5|DWORD = SETCC condition: >= <|@ <|@
      nr   72  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v5|d [0, 1[[72, 74[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 20[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 16[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 1[ "NoSpillStore"
  v0|d DWORD "[rdx|d]" v0|d rdx|d [20, 65[[76, 97[20 MustHaveRegister 22 ShouldHaveRegister 60 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [60, 66[60 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d v2|d [64, 66[64 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[rax|d]" v4|d v1|d [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rax|d]" v5|d -1 [70, 72[70 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH x: v0|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v1|DWORD = LEA address: [v0|DWORD - 48] size: DWORD <|@ <|@
      nr   62  <|@ instruction v2|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   64  <|@ instruction v3|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction v5|DWORD = SETCC condition: >= <|@ <|@
      nr   72  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   20  <|@ instruction v0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH x: v0|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v1|DWORD = LEA address: [v0|DWORD - 48] size: DWORD <|@ <|@
      nr   62  <|@ instruction v2|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   64  <|@ instruction v3|DWORD = SUB (x: v2|DWORD, ~y: v0|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction v4|DWORD = OR (x: v1|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction v5|DWORD = SETCC condition: >= <|@ <|@
      nr   72  <|@ instruction rax|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - v0|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD - 48] size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   64  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: >= <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD - 48] size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   64  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: >= <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD - 48] size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   64  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: >= <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD - 48] size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   64  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: >= <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD - 48] size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   64  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: >= <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD - 48] size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   64  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: >= <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD - 48] size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   64  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: >= <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD - 48] size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   64  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: >= <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD - 48] size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   64  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: >= <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD - 48] size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   64  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: >= <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD - 48] size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   64  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: >= <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD - 48] size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   64  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: >= <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD - 48] size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOVE input: int[57|0x39] <|@ <|@
      nr   64  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction rax|DWORD = SETCC condition: >= <|@ <|@
      nr   74  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   96  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0]
locals: - rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_1       
     1: invokestatic  #1          // java.util.regex.CharPredicates.lambda$ASCII_DIGIT$18:(int)boolean
     4: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f85810000009090909090909048896c241081fa800000000f8d3f00000090909090909090909090909090909090908d42d041ba39000000442bd2410bc285c00f9dc00fb6c0488b6c24104883c418493ba7500400000f873b000000c39090909090909041c78784040000edeaffff49c7879004000014000000e8000000000f1f84000000000048896c2410e800000000e970fffffff4488d0db1ffffff49898f68040000e922fffffff4e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 70 18 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD  <||@
  Comment 70 22 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null  <||@
  Comment 82 block B1 null  <||@
  Comment 82 24 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 82 26 NOP  <||@
  Comment 83 28 NOP  <||@
  Comment 84 30 NOP  <||@
  Comment 85 32 NOP  <||@
  Comment 86 34 NOP  <||@
  Comment 87 36 NOP  <||@
  Comment 88 38 NOP  <||@
  Comment 89 40 NOP  <||@
  Comment 90 42 NOP  <||@
  Comment 91 44 NOP  <||@
  Comment 92 46 NOP  <||@
  Comment 93 48 NOP  <||@
  Comment 94 50 NOP  <||@
  Comment 95 52 NOP  <||@
  Comment 96 54 NOP  <||@
  Comment 97 56 NOP  <||@
  Comment 98 58 NOP  <||@
  Comment 99 60 rax|DWORD = LEA address: [rdx|DWORD - 48] size: DWORD  <||@
  Comment 102 62 r10|DWORD = MOVE input: int[57|0x39]  <||@
  Comment 108 64 r10|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 111 66 rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 114 68 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 116 70 rax|DWORD = SETCC condition: >=  <||@
  Comment 122 74 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 131 POLL_RETURN_FAR  <||@
  Comment 145 block B2 null  <||@
  Comment 145 76 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 145 78 NOP  <||@
  Comment 146 80 NOP  <||@
  Comment 147 82 NOP  <||@
  Comment 148 84 NOP  <||@
  Comment 149 86 NOP  <||@
  Comment 150 88 NOP  <||@
  Comment 151 90 NOP  <||@
  Comment 152 92 MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD  <||@
  Comment 163 94 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 174 96 DEOPT info [bci:0]  <||@
  Comment 174 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 179 []at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0  |1         
     locals:  |-  |rdx|DWORD   <||@
  Comment 192 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 217 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 223 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 223 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 229 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 229 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4463[java.util.regex.CharPredicates$$Lambda/0x800000037.is(int)]"
  method "HotSpotCompilation-4463[java.util.regex.CharPredicates$$Lambda/0x800000037.is(int)]"
  date 1724269748476
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ae8c280 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e38d8ffe66669089842400c0feff4883ec189041817f20000000000f85810000009090909090909048896c241081fa800000000f8d3f00000090909090909090909090909090909090908d42d041ba39000000442bd2410bc285c00f9dc00fb6c0488b6c24104883c418493ba7500400000f873b000000c39090909090909041c78784040000edeaffff49c7879004000014000000e847ee8ffe0f1f84000000000048896c2410e8dbee8dfee970fffffff4488d0db1ffffff49898f68040000e9a2fc8ffef4e89c8fa3fef4e8b6eb8ffef4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 70 18 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6501cd03 slotKind: QWORD  <||@
  Comment 70 22 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 128 size: DWORD inlinedY: null  <||@
  Comment 82 block B1 null  <||@
  Comment 82 24 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 82 26 NOP  <||@
  Comment 83 28 NOP  <||@
  Comment 84 30 NOP  <||@
  Comment 85 32 NOP  <||@
  Comment 86 34 NOP  <||@
  Comment 87 36 NOP  <||@
  Comment 88 38 NOP  <||@
  Comment 89 40 NOP  <||@
  Comment 90 42 NOP  <||@
  Comment 91 44 NOP  <||@
  Comment 92 46 NOP  <||@
  Comment 93 48 NOP  <||@
  Comment 94 50 NOP  <||@
  Comment 95 52 NOP  <||@
  Comment 96 54 NOP  <||@
  Comment 97 56 NOP  <||@
  Comment 98 58 NOP  <||@
  Comment 99 60 rax|DWORD = LEA address: [rdx|DWORD - 48] size: DWORD  <||@
  Comment 102 62 r10|DWORD = MOVE input: int[57|0x39]  <||@
  Comment 108 64 r10|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 111 66 rax|DWORD = OR (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 114 68 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 116 70 rax|DWORD = SETCC condition: >=  <||@
  Comment 122 74 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 131 POLL_RETURN_FAR  <||@
  Comment 145 block B2 null  <||@
  Comment 145 76 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 145 78 NOP  <||@
  Comment 146 80 NOP  <||@
  Comment 147 82 NOP  <||@
  Comment 148 84 NOP  <||@
  Comment 149 86 NOP  <||@
  Comment 150 88 NOP  <||@
  Comment 151 90 NOP  <||@
  Comment 152 92 MOV x: [r15|QWORD + 1156] y: -5395 size: DWORD  <||@
  Comment 163 94 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 174 96 DEOPT info [bci:0]  <||@
  Comment 174 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 179 []at java.util.regex.CharPredicates$$Lambda/0x800000037.is(int) [bci: 0, duringCall: false, rethrow: false]
              |0  |1         
     locals:  |-  |rdx|DWORD   <||@
  Comment 192 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 217 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 223 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 223 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 229 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 229 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
