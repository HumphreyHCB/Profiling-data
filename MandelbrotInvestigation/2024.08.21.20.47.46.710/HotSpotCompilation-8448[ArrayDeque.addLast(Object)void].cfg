begin_compilation
  name " HotSpotCompilation-8448[java.util.ArrayDeque.addLast(Object)]"
  method "HotSpotCompilation-8448[java.util.ArrayDeque.addLast(Object)]"
  date 1724269759270
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a227 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a227  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.ArrayDeque
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v239 v240 ?190 v244 v71 ?184 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a227 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a227 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayDeque.elements
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:303) [bci: 13]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v239 
lastLocationAccess: - 
=== Succesors ===
next: i228 
=== Usages ===
a40 v241 v251 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v239 lastLocationAccess: - #next: i228  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v5 a64 v252 ?190 v218 v238 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<ArrayDeque.addLast(Object)>
localsSize: 3
locksSize: 0
sourceFile: ArrayDeque.java
sourceLine: 301
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v253 i228 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a227 
=== Succesors ===
=== Usages ===
i228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i228 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-11531|0xffffffffffffd2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v241 
lastLocationAccess: - 
=== Succesors ===
next: v229 
=== Usages ===
v50 v33 
=== Predecessor ===
a227 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v241 lastLocationAccess: - #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a227 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v251 
lastLocationAccess: - 
=== Succesors ===
next: i230 
=== Usages ===
v221 
=== Predecessor ===
i228 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v251 lastLocationAccess: - #next: i230  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i230 v70 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i230 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayDeque.tail
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v240 
lastLocationAccess: - 
=== Succesors ===
next: v87 
=== Usages ===
j72 i32 v50 
=== Predecessor ===
v229 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v240 lastLocationAccess: - #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i230 
y: i228 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i230 y: i228  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v86 
=== Usages ===
=== Predecessor ===
i230 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v84 #falseSuccessor: v86  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v150 
=== Usages ===
v65 
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
locations: [SecondarySuperCache]
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 46]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v71 i32 i136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 8]
at java.util.ArrayDeque.addLast(ArrayDeque.java:305) [bci: 35]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i36 i122 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 1]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:200) [bci: 15] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v93 
falseSuccessor: v94 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v93 #falseSuccessor: v94  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:201) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v185  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
v93 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:208) [bci: 35] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v229 
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v229  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: v221 
index: - 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v221 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ObjArrayKlass::_element_klass:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: Klass*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v242 
lastLocationAccess: - 
=== Succesors ===
next: i144 
=== Usages ===
v148 v132 v245 v107 v114 
=== Predecessor ===
v94 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v242 lastLocationAccess: - #next: i144  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: v231 
index: - 
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v231 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i144 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Klass::_super_check_offset:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:76) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v245 
lastLocationAccess: - 
=== Succesors ===
next: v232 
=== Usages ===
v104 j105 
=== Predecessor ===
v231 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v245 lastLocationAccess: - #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:209) [bci: 46] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v252 
lastLocationAccess: - 
=== Succesors ===
next: v233 
=== Usages ===
v224 
=== Predecessor ===
i144 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v252 lastLocationAccess: - #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:209) [bci: 46] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v232 
=== Succesors ===
=== Usages ===
v246 v114 v247 v250 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v232  <|@  <|@
f <@~|@floating>@ <|@
tid j105 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 36]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i144 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i144  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: v224 
index: j105 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v224 index: j105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrimarySupers:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 36]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: Klass*
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v246 
lastLocationAccess: - 
=== Succesors ===
next: v110 
=== Usages ===
v107 
=== Predecessor ===
v232 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v246 lastLocationAccess: - #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 40]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v231 
y: v233 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v231 y: v233  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 43]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v107 
=== Succesors ===
trueSuccessor: v109 
falseSuccessor: v108 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v107 #trueSuccessor: v109 #falseSuccessor: v108  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:81) [bci: 46]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v154  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
v109 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:90) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.secondarySuperCacheOffset(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:77) [bci: 18]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
rawvalue: 32
stableDimension: 0
stamp: i32 [32]
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:77) [bci: 21]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i144 
y: i103 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i144 y: i103  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:90) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v112 
falseSuccessor: v111 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v112 #falseSuccessor: v111  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v117  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:104) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v224 
y: v231 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v224 y: v231  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:104) [bci: 5]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v114 
=== Succesors ===
trueSuccessor: v116 
falseSuccessor: v115 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v114 #trueSuccessor: v116 #falseSuccessor: v115  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:105) [bci: 8]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v161  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
v116 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j145 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j145  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: v224 
index: - 
=== Succesors ===
=== Usages ===
j145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v224 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j145 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: SecondarySupers:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v247 
lastLocationAccess: - 
=== Succesors ===
next: i146 
=== Usages ===
v248 v249 
=== Predecessor ===
v115 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v247 lastLocationAccess: - #next: i146  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j145 
index: - 
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j145 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i146 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: MetaspaceArrayLength:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:112) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v248 
lastLocationAccess: - 
=== Succesors ===
next: v120 
=== Usages ===
v123 
=== Predecessor ===
j145 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v248 lastLocationAccess: - #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
i146 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v121 
values: i34 i136 
=== Succesors ===
=== Usages ===
v123 j127 i136 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v121 values: i34 i136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 42
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v120 
=== Succesors ===
next: v126 
=== Usages ===
i122 v124 v133 v137 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v120 #next: v126  <|@  <|@
f <@~|@floating>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 59]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i122 
y: i146 
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i122 y: i146  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 59]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v123 
=== Succesors ===
trueSuccessor: v125 
falseSuccessor: v124 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v123 #trueSuccessor: v125 #falseSuccessor: v124  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 62]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j147 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j147  <|@  <|@
f <@~|@floating>@ <|@
tid j127 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i122 
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i122  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: j145 
index: j127 
=== Succesors ===
=== Usages ===
j147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j145 index: j127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j147 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: SecondarySupersElement:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.stubs.LookUpSecondarySupersTableStub.loadSecondarySupersElement(LookUpSecondarySupersTableStub.java:107) [bci: 21]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v249 
lastLocationAccess: - 
=== Succesors ===
next: v135 
=== Usages ===
v131 
=== Predecessor ===
v125 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v249 lastLocationAccess: - #next: v135  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.stubs.LookUpSecondarySupersTableStub.loadSecondarySupersElement(LookUpSecondarySupersTableStub.java:107) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: Klass*
=== Inputs ===
input: j147 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@jdk.graal.compiler.hotspot.word.PointerCastNode>@ input: j147  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 73]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v131 
y: v231 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v131 y: v231  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 79]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.4
stamp: void
=== Inputs ===
condition: v132 
=== Succesors ===
trueSuccessor: v133 
falseSuccessor: v134 
=== Usages ===
=== Predecessor ===
j147 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v132 #trueSuccessor: v133 #falseSuccessor: v134  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 105]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 105]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: i32
=== Inputs ===
x: i122 
y: i23 
=== Succesors ===
=== Usages ===
i122 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i122 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
loopBegin: v121 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v121  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:115) [bci: 82]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: v224 
index: - 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v224 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: SecondarySuperCache
location: SecondarySuperCache
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:115) [bci: 93]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v250 
lastLocationAccess: - 
value: v231 
stateAfter: - 
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v250 lastLocationAccess: - value: v231 stateAfter: - #next: v160  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
v148 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:120) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v201  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
v124 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v185 v154 v160 v161 
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v185 v154 v160 v161 #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid a235 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?184 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<ArrayDeque.addLast(Object)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
sourceFile: ArrayDeque.java
sourceLine: 301
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a235 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-43283|0xffffffffffff56ed]
deoptSpeculation: long[20|0x14]
stamp: void
=== Inputs ===
stateBefore: ?184 
object: a2 
=== Succesors ===
next: v216 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?184 object: a2 #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid a40 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:303) [bci: 13]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a227 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a227  <|@  <|@
f <@~|@floating>@ <|@
tid j72 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i230 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i230  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a40 
index: j72 
=== Succesors ===
=== Usages ===
v65 v216 v218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a40 index: j72  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
precise: true
stamp: void
=== Inputs ===
address: v243 
value: - 
stateBefore: - 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v243 value: - stateBefore: - #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid a64 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v84 
address: v243 
lastLocationAccess: - 
value: a64 
stateAfter: - 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v84 address: v243 lastLocationAccess: - value: a64 stateAfter: - #next: v218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
precise: true
stamp: void
=== Inputs ===
address: v243 
value: a2 
object: - 
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v243 value: a2 object: - #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 0]
at java.util.ArrayDeque.addLast(ArrayDeque.java:305) [bci: 35]
stamp: i32
=== Inputs ===
x: i230 
y: i23 
=== Succesors ===
=== Usages ===
v33 i36 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i230 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 5]
at java.util.ArrayDeque.addLast(ArrayDeque.java:305) [bci: 35]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i32 
y: i228 
=== Succesors ===
=== Usages ===
i36 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i32 y: i228  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 5]
at java.util.ArrayDeque.addLast(ArrayDeque.java:305) [bci: 35]
stamp: i32
=== Inputs ===
condition: v33 
trueValue: i32 
falseValue: i34 
=== Succesors ===
=== Usages ===
v19 v70 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v33 trueValue: i32 falseValue: i34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ArrayDeque.tail
location: ArrayDeque.tail
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:305) [bci: 39]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v240 
lastLocationAccess: - 
value: i36 
stateAfter: - 
=== Succesors ===
next: i234 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v240 lastLocationAccess: - value: i36 stateAfter: - #next: i234  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayDeque.head
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:305) [bci: 25]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v244 
lastLocationAccess: - 
=== Succesors ===
next: v22 
=== Usages ===
v19 
=== Predecessor ===
v70 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v244 lastLocationAccess: - #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:305) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i36 
y: i234 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i36 y: i234  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:305) [bci: 42]
profileData: PROFILED designatedSuccessorProbability: 0.009243330097032265
stamp: void
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v21 
falseSuccessor: v20 
=== Usages ===
=== Predecessor ===
i234 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v21 #falseSuccessor: v20  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v25  <|@  <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/ArrayDeque;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ArrayDeque.grow(int)>
=== Inputs ===
arguments: a1 i23 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i23  <|@  <|@
tid ?204 <|@
d <@d|@=== Debug Properties ===
bci: 47
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ArrayDeque.addLast(Object)>
localsSize: 3
locksSize: 0
sourceFile: ArrayDeque.java
sourceLine: 306
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
bci: 47
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
polymorphic: false
stamp: void
targetMethod: Direct#ArrayDeque.grow
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v71 
stateDuring: ?204 
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v71 stateDuring: ?204 #next: v29  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:307) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
v25 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:307) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:307) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:307) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v27 v29 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v27 v29 #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:307) [bci: 50]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:91) [bci: 75]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v196  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
v111 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v196 v201 
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v196 v201 #next: v89  <|@  <|@
tid ?190 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<ArrayDeque.addLast(Object)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
sourceFile: ArrayDeque.java
sourceLine: 301
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 66
mayConvertToGuard: true
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
reason: ArrayStoreException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?190 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?190  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 51
mayConvertToGuard: true
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v6|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV input: [v8|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v10|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVSXD value: v9|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: [v11|QWORD + v13|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v11|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV input: [v11|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV input: [v14|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVSXD value: v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV input: [v14|QWORD + v17|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v18|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD + 32], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v20|QWORD[.] + v5|DWORD * 4 + 16], ~expectedObject: -) {temp: v21|QWORD, temp2: v22|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + v5|DWORD * 4 + 16], y: v23|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.+] = LEA address: [v20|QWORD[.] + v5|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v24|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a227 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a227  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.ArrayDeque
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v239 v240 ?190 v244 v71 ?184 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a227 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a227 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayDeque.elements
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:303) [bci: 13]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v239 
lastLocationAccess: - 
=== Succesors ===
next: i228 
=== Usages ===
a40 v241 v251 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v239 lastLocationAccess: - #next: i228  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v5 a64 v252 ?190 v218 v238 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<ArrayDeque.addLast(Object)>
localsSize: 3
locksSize: 0
sourceFile: ArrayDeque.java
sourceLine: 301
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v253 i228 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a227 
=== Succesors ===
=== Usages ===
i228 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i228 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-11531|0xffffffffffffd2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v241 
lastLocationAccess: - 
=== Succesors ===
next: v229 
=== Usages ===
v50 v33 
=== Predecessor ===
a227 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v241 lastLocationAccess: - #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid v251 <|@
result [v2|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a227 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v229 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v251 
lastLocationAccess: - 
=== Succesors ===
next: i230 
=== Usages ===
v221 
=== Predecessor ===
i228 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v251 lastLocationAccess: - #next: i230  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i230 v70 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i230 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayDeque.tail
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 19]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v240 
lastLocationAccess: - 
=== Succesors ===
next: v87 
=== Usages ===
j72 i32 v50 
=== Predecessor ===
v229 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v240 lastLocationAccess: - #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i230 
y: i228 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i230 y: i228  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v84 
falseSuccessor: v86 
=== Usages ===
=== Predecessor ===
i230 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v84 #falseSuccessor: v86  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v150 
=== Usages ===
v65 
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
locations: [SecondarySuperCache]
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v95  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 46]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v71 i32 i136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 8]
at java.util.ArrayDeque.addLast(ArrayDeque.java:305) [bci: 35]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i36 i122 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 1]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v95 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:200) [bci: 15] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v5 
=== Succesors ===
trueSuccessor: v93 
falseSuccessor: v94 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v5 #trueSuccessor: v93 #falseSuccessor: v94  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:201) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v185  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
v93 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:208) [bci: 35] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v95 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid v221 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v229 
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v229  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
result [v6|QWORD + 208] <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: v221 
index: - 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v221 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ObjArrayKlass::_element_klass:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: Klass*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v242 
lastLocationAccess: - 
=== Succesors ===
next: i144 
=== Usages ===
v148 v132 v245 v107 v114 
=== Predecessor ===
v94 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v242 lastLocationAccess: - #next: i144  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
result [v8|QWORD + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: v231 
index: - 
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v231 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i144 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Klass::_super_check_offset:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:76) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v245 
lastLocationAccess: - 
=== Succesors ===
next: v232 
=== Usages ===
v104 j105 
=== Predecessor ===
v231 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v245 lastLocationAccess: - #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid v252 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v232 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:209) [bci: 46] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v252 
lastLocationAccess: - 
=== Succesors ===
next: v233 
=== Usages ===
v224 
=== Predecessor ===
i144 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v252 lastLocationAccess: - #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:209) [bci: 46] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v232 
=== Succesors ===
=== Usages ===
v246 v114 v247 v250 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v232  <|@  <|@
f <@~|@floating>@ <|@
tid j105 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 36]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i144 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i144  <|@  <|@
f <@~|@floating>@ <|@
tid v246 <|@
result [v11|QWORD + v13|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: v224 
index: j105 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v224 index: j105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrimarySupers:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 36]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: Klass*
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v246 
lastLocationAccess: - 
=== Succesors ===
next: v110 
=== Usages ===
v107 
=== Predecessor ===
v232 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v246 lastLocationAccess: - #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 40]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v231 
y: v233 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v231 y: v233  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 43]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v107 
=== Succesors ===
trueSuccessor: v109 
falseSuccessor: v108 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v107 #trueSuccessor: v109 #falseSuccessor: v108  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v6|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV input: [v8|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v10|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVSXD value: v9|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: [v11|QWORD + v13|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:81) [bci: 46]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v154  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
v109 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:90) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
result int[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.secondarySuperCacheOffset(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:77) [bci: 18]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
rawvalue: 32
stableDimension: 0
stamp: i32 [32]
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:77) [bci: 21]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i144 
y: i103 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i144 y: i103  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:90) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v112 
falseSuccessor: v111 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v112 #falseSuccessor: v111  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v117  <|@  <|@
f <@~|@floating>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:104) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v224 
y: v231 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v224 y: v231  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:104) [bci: 5]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v114 
=== Succesors ===
trueSuccessor: v116 
falseSuccessor: v115 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v114 #trueSuccessor: v116 #falseSuccessor: v115  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v11|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:105) [bci: 8]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v161  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
v116 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j145 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j145  <|@  <|@
f <@~|@floating>@ <|@
tid v247 <|@
result [v11|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: v224 
index: - 
=== Succesors ===
=== Usages ===
j145 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v224 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j145 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: SecondarySupers:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v247 
lastLocationAccess: - 
=== Succesors ===
next: i146 
=== Usages ===
v248 v249 
=== Predecessor ===
v115 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v247 lastLocationAccess: - #next: i146  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
result [v14|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j145 
index: - 
=== Succesors ===
=== Usages ===
i146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j145 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i146 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: MetaspaceArrayLength:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:112) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v248 
lastLocationAccess: - 
=== Succesors ===
next: v120 
=== Usages ===
v123 
=== Predecessor ===
j145 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v248 lastLocationAccess: - #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
i146 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV input: [v11|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV input: [v14|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i122 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v121 
values: i34 i136 
=== Succesors ===
=== Usages ===
v123 j127 i136 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v121 values: i34 i136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 42
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v120 
=== Succesors ===
next: v126 
=== Usages ===
i122 v124 v133 v137 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v120 #next: v126  <|@  <|@
f <@~|@floating>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 59]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i122 
y: i146 
=== Succesors ===
=== Usages ===
v126 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i122 y: i146  <|@  <|@
f <@*|@fixed>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 59]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v123 
=== Succesors ===
trueSuccessor: v125 
falseSuccessor: v124 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v123 #trueSuccessor: v125 #falseSuccessor: v124  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 62]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j147 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j147  <|@  <|@
f <@~|@floating>@ <|@
tid j127 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i122 
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i122  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
result [v14|QWORD + v17|QWORD * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: j145 
index: j127 
=== Succesors ===
=== Usages ===
j147 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j145 index: j127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j147 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: SecondarySupersElement:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.stubs.LookUpSecondarySupersTableStub.loadSecondarySupersElement(LookUpSecondarySupersTableStub.java:107) [bci: 21]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v249 
lastLocationAccess: - 
=== Succesors ===
next: v135 
=== Usages ===
v131 
=== Predecessor ===
v125 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v249 lastLocationAccess: - #next: v135  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.stubs.LookUpSecondarySupersTableStub.loadSecondarySupersElement(LookUpSecondarySupersTableStub.java:107) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: Klass*
=== Inputs ===
input: j147 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@jdk.graal.compiler.hotspot.word.PointerCastNode>@ input: j147  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 73]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v131 
y: v231 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v131 y: v231  <|@  <|@
f <@*|@fixed>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 79]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.4
stamp: void
=== Inputs ===
condition: v132 
=== Succesors ===
trueSuccessor: v133 
falseSuccessor: v134 
=== Usages ===
=== Predecessor ===
j147 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v132 #trueSuccessor: v133 #falseSuccessor: v134  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVSXD value: v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV input: [v14|QWORD + v17|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v18|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 105]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 105]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: i32
=== Inputs ===
x: i122 
y: i23 
=== Succesors ===
=== Usages ===
i122 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i122 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
loopBegin: v121 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v121  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:115) [bci: 82]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v148 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v148  <|@  <|@
f <@~|@floating>@ <|@
tid v250 <|@
result [v11|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: v224 
index: - 
=== Succesors ===
=== Usages ===
v148 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v224 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: SecondarySuperCache
location: SecondarySuperCache
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:115) [bci: 93]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v250 
lastLocationAccess: - 
value: v231 
stateAfter: - 
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v250 lastLocationAccess: - value: v231 stateAfter: - #next: v160  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
v148 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD + 32], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:120) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v121 
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v121 #next: v201  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
v124 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v185 v154 v160 v161 
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v185 v154 v160 v161 #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid a235 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?184 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<ArrayDeque.addLast(Object)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
sourceFile: ArrayDeque.java
sourceLine: 301
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a235 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-43283|0xffffffffffff56ed]
deoptSpeculation: long[20|0x14]
stamp: void
=== Inputs ===
stateBefore: ?184 
object: a2 
=== Succesors ===
next: v216 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?184 object: a2 #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid a40 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:303) [bci: 13]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a227 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a227  <|@  <|@
f <@~|@floating>@ <|@
tid j72 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i230 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i230  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
result [v20|QWORD[.] + v5|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a40 
index: j72 
=== Succesors ===
=== Usages ===
v65 v216 v218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a40 index: j72  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
precise: true
stamp: void
=== Inputs ===
address: v243 
value: - 
stateBefore: - 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v243 value: - stateBefore: - #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid a64 <|@
result v23|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v84 
address: v243 
lastLocationAccess: - 
value: a64 
stateAfter: - 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v84 address: v243 lastLocationAccess: - value: a64 stateAfter: - #next: v218  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
precise: true
stamp: void
=== Inputs ===
address: v243 
value: a2 
object: - 
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v243 value: a2 object: - #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 0]
at java.util.ArrayDeque.addLast(ArrayDeque.java:305) [bci: 35]
stamp: i32
=== Inputs ===
x: i230 
y: i23 
=== Succesors ===
=== Usages ===
v33 i36 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i230 y: i23  <|@  <|@
f <@~|@floating>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 5]
at java.util.ArrayDeque.addLast(ArrayDeque.java:305) [bci: 35]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i32 
y: i228 
=== Succesors ===
=== Usages ===
i36 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i32 y: i228  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.inc(ArrayDeque.java:217) [bci: 5]
at java.util.ArrayDeque.addLast(ArrayDeque.java:305) [bci: 35]
stamp: i32
=== Inputs ===
condition: v33 
trueValue: i32 
falseValue: i34 
=== Succesors ===
=== Usages ===
v19 v70 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v33 trueValue: i32 falseValue: i34  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ArrayDeque.tail
location: ArrayDeque.tail
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:305) [bci: 39]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v240 
lastLocationAccess: - 
value: i36 
stateAfter: - 
=== Succesors ===
next: i234 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v240 lastLocationAccess: - value: i36 stateAfter: - #next: i234  <|@  <|@
f <@~|@floating>@ <|@
tid v244 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayDeque.head
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:305) [bci: 25]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v244 
lastLocationAccess: - 
=== Succesors ===
next: v22 
=== Usages ===
v19 
=== Predecessor ===
v70 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v244 lastLocationAccess: - #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:305) [bci: 42]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i36 
y: i234 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i36 y: i234  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:305) [bci: 42]
profileData: PROFILED designatedSuccessorProbability: 0.009243330097032265
stamp: void
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v21 
falseSuccessor: v20 
=== Usages ===
=== Predecessor ===
i234 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v21 #falseSuccessor: v20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v20|QWORD[.] + v5|DWORD * 4 + 16], ~expectedObject: -) {temp: v21|QWORD, temp2: v22|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + v5|DWORD * 4 + 16], y: v23|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.+] = LEA address: [v20|QWORD[.] + v5|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v24|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v25  <|@  <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/ArrayDeque;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<ArrayDeque.grow(int)>
=== Inputs ===
arguments: a1 i23 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i23  <|@  <|@
tid ?204 <|@
d <@d|@=== Debug Properties ===
bci: 47
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<ArrayDeque.addLast(Object)>
localsSize: 3
locksSize: 0
sourceFile: ArrayDeque.java
sourceLine: 306
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
bci: 47
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
polymorphic: false
stamp: void
targetMethod: Direct#ArrayDeque.grow
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v71 
stateDuring: ?204 
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v71 stateDuring: ?204 #next: v29  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:307) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
v25 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:307) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:307) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:307) [bci: 50]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v27 v29 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v27 v29 #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:307) [bci: 50]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:91) [bci: 75]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v196  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
v111 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v196 v201 
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v196 v201 #next: v89  <|@  <|@
tid ?190 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_1
code: ResolvedJavaMethodBytecode<ArrayDeque.addLast(Object)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
sourceFile: ArrayDeque.java
sourceLine: 301
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 66
mayConvertToGuard: true
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
reason: ArrayStoreException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?190 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?190  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v253  <|@  <|@
f <@*|@fixed>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 51
mayConvertToGuard: true
nodeSourcePosition: at java.util.ArrayDeque.addLast(ArrayDeque.java:304) [bci: 23]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v6|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV input: [v8|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v10|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVSXD value: v9|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: [v11|QWORD + v13|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v11|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV input: [v11|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV input: [v14|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVSXD value: v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV input: [v14|QWORD + v17|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v18|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD + 32], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v20|QWORD[.] + v5|DWORD * 4 + 16], ~expectedObject: -) {temp: v21|QWORD, temp2: v22|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + v5|DWORD * 4 + 16], y: v23|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.+] = LEA address: [v20|QWORD[.] + v5|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v24|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v6|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV input: [v8|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v10|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVSXD value: v9|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: [v11|QWORD + v13|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v11|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV input: [v11|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV input: [v14|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVSXD value: v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV input: [v14|QWORD + v17|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v18|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD + 32], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v20|QWORD[.] + v5|DWORD * 4 + 16], ~expectedObject: -) {temp: v21|QWORD, temp2: v22|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + v5|DWORD * 4 + 16], y: v23|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.+] = LEA address: [v20|QWORD[.] + v5|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v24|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v6|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV input: [v8|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v10|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVSXD value: v9|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: [v11|QWORD + v13|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v11|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV input: [v11|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV input: [v14|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVSXD value: v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV input: [v14|QWORD + v17|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v18|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD + 32], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v20|QWORD[.] + v5|DWORD * 4 + 16], ~expectedObject: -) {temp: v21|QWORD, temp2: v22|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + v5|DWORD * 4 + 16], y: v23|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.+] = LEA address: [v20|QWORD[.] + v5|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v24|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v6|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV input: [v8|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v10|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVSXD value: v9|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: [v11|QWORD + v13|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v11|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV input: [v11|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV input: [v14|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVSXD value: v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV input: [v14|QWORD + v17|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v18|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD + 32], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v20|QWORD[.] + v5|DWORD * 4 + 16], ~expectedObject: -) {temp: v21|QWORD, temp2: v22|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + v5|DWORD * 4 + 16], y: v23|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.+] = LEA address: [v20|QWORD[.] + v5|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v24|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v6|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV input: [v8|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v10|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVSXD value: v9|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: [v11|QWORD + v13|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v11|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV input: [v11|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV input: [v14|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVSXD value: v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV input: [v14|QWORD + v17|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v18|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD + 32], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v20|QWORD[.] + v5|DWORD * 4 + 16], ~expectedObject: -) {temp: v21|QWORD, temp2: v22|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + v5|DWORD * 4 + 16], y: v23|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.+] = LEA address: [v20|QWORD[.] + v5|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v24|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   88  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   90  <|@ instruction v8|QWORD = MOV input: [v6|QWORD + 208] size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|DWORD = MOV input: [v8|QWORD + 20] size: DWORD <|@ <|@
      nr   94  <|@ instruction v10|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   96  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   98  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v10|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  100  <|@ instruction v13|QWORD = MOVSXD value: v9|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: v8|QWORD, y: [v11|QWORD + v13|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v11|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v14|QWORD = MOV input: [v11|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction v15|DWORD = MOV input: [v14|QWORD] size: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  166  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction v17|QWORD = MOVSXD value: v16|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction v18|QWORD = MOV input: [v14|QWORD + v17|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v18|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction v19|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV (x: [v11|QWORD + 32], y: v8|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr  416  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v20|QWORD[.] + v5|DWORD * 4 + 16], ~expectedObject: -) {temp: v21|QWORD, temp2: v22|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  420  <|@ instruction v23|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction MOV (x: [v20|QWORD[.] + v5|DWORD * 4 + 16], y: v23|DWORD[_]) size: DWORD <|@ <|@
      nr  424  <|@ instruction v24|QWORD[.+] = LEA address: [v20|QWORD[.] + v5|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v24|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  428  <|@ instruction v27|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction v28|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr  434  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: v28|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   88  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   90  <|@ instruction v8|QWORD = MOV input: [v6|QWORD + 208] size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|DWORD = MOV input: [v8|QWORD + 20] size: DWORD <|@ <|@
      nr   94  <|@ instruction v10|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   96  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   98  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v10|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  100  <|@ instruction v13|QWORD = MOVSXD value: v9|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: v8|QWORD, y: [v11|QWORD + v13|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v11|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v14|QWORD = MOV input: [v11|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction v15|DWORD = MOV input: [v14|QWORD] size: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  166  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction v17|QWORD = MOVSXD value: v16|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction v18|QWORD = MOV input: [v14|QWORD + v17|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v18|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction v19|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV (x: [v11|QWORD + 32], y: v8|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr  416  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v20|QWORD[.] + v5|DWORD * 4 + 16], ~expectedObject: -) {temp: v21|QWORD, temp2: v22|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  420  <|@ instruction v23|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction MOV (x: [v20|QWORD[.] + v5|DWORD * 4 + 16], y: v23|DWORD[_]) size: DWORD <|@ <|@
      nr  424  <|@ instruction v24|QWORD[.+] = LEA address: [v20|QWORD[.] + v5|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v24|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  428  <|@ instruction v27|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction v28|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr  434  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: v28|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 32[[486, 489[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[488, 489[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 30[[484, 489[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [30, 263[[264, 438[[466, 484[[492, 513[30 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister 434 MustHaveRegister 436 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [32, 263[[264, 427[[492, 513[32 MustHaveRegister 54 MustHaveRegister 94 MustHaveRegister 414 MustHaveRegister 420 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [34, 116[[126, 232[[264, 416[34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [36, 116[[126, 232[[264, 430[36 MustHaveRegister 42 MustHaveRegister 430 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [38, 88[38 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [40, 116[[126, 232[[264, 428[40 MustHaveRegister 42 ShouldHaveRegister 418 MustHaveRegister 422 MustHaveRegister 424 MustHaveRegister 428 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q v4|d [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [86, 89[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [90, 116[[136, 212[[264, 274[90 MustHaveRegister 92 MustHaveRegister 102 MustHaveRegister 146 MustHaveRegister 196 MustHaveRegister 211 LiveAtLoopEnd 274 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [92, 114[92 MustHaveRegister 100 ShouldHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [94, 98[94 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v10|d [98, 116[[136, 212[[264, 274[98 MustHaveRegister 102 MustHaveRegister 146 ShouldHaveRegister 160 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [96, 99[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [100, 102[100 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [160, 212[160 MustHaveRegister 162 MustHaveRegister 194 MustHaveRegister 211 LiveAtLoopEnd  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d -1 [162, 212[162 MustHaveRegister 176 MustHaveRegister 211 LiveAtLoopEnd  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d v19|d [166, 208[176 ShouldHaveRegister 192 ShouldHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q -1 [192, 194[192 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [194, 196[194 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d v16|d [208, 211[208 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v2|d [416, 424[416 MustHaveRegister 418 MustHaveRegister 422 MustHaveRegister 424 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q -1 [418, 419[418 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[v22|q]" v22|q -1 [418, 419[418 MustHaveRegister  "NoDefinitionFound"
  v23|d DWORD "[v23|d]" v23|d v1|q [420, 422[420 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q -1 [424, 427[424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q -1 [426, 427[426 MustHaveRegister  "NoDefinitionFound"
  v26|q QWORD "[v26|q]" v26|q -1 [426, 427[426 MustHaveRegister  "NoDefinitionFound"
  v27|d DWORD "[v27|d]" v27|d v5|d [428, 433[428 MustHaveRegister 430 ShouldHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d -1 [432, 436[432 MustHaveRegister 434 MustHaveRegister 436 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 32[[486, 489[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[488, 489[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 30[[484, 489[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [30, 263[[264, 438[[466, 484[[492, 513[30 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister 434 MustHaveRegister 436 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [32, 263[[264, 427[[492, 513[32 MustHaveRegister 54 MustHaveRegister 94 MustHaveRegister 414 MustHaveRegister 420 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [34, 116[[126, 232[[264, 416[34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [36, 116[[126, 232[[264, 430[36 MustHaveRegister 42 MustHaveRegister 430 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [38, 88[38 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r9|d]" v5|d -1 [40, 116[[126, 232[[264, 428[40 MustHaveRegister 42 ShouldHaveRegister 418 MustHaveRegister 422 MustHaveRegister 424 MustHaveRegister 428 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[r8|q]" v6|q v4|d [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rcx|q]" v7|q -1 [86, 89[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r8|q]" v8|q -1 [90, 116[[136, 212[[264, 274[90 MustHaveRegister 92 MustHaveRegister 102 MustHaveRegister 146 MustHaveRegister 196 MustHaveRegister 211 LiveAtLoopEnd 274 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d -1 [92, 114[92 MustHaveRegister 100 ShouldHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rbx|d]" v10|d -1 [94, 98[94 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rbx|q]" v11|q v10|d [98, 116[[136, 212[[264, 274[98 MustHaveRegister 102 MustHaveRegister 146 ShouldHaveRegister 160 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdi|q]" v12|q -1 [96, 99[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdi|q]" v13|q -1 [100, 102[100 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rcx|q]" v14|q -1 [160, 212[160 MustHaveRegister 162 MustHaveRegister 194 MustHaveRegister 211 LiveAtLoopEnd  "NoSpillStore"
  v15|d DWORD "[rdi|d]" v15|d -1 [162, 212[162 MustHaveRegister 176 MustHaveRegister 211 LiveAtLoopEnd  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d v19|d [166, 208[176 ShouldHaveRegister 192 ShouldHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbp|q]" v17|q -1 [192, 194[192 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbp|q]" v18|q -1 [194, 196[194 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d v16|d [208, 211[208 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[r10|q]" v20|q v2|d [416, 424[416 MustHaveRegister 418 MustHaveRegister 422 MustHaveRegister 424 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[r8|q]" v21|q -1 [418, 419[418 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[rcx|q]" v22|q -1 [418, 419[418 MustHaveRegister  "NoDefinitionFound"
  v23|d DWORD "[r8|d]" v23|d v1|q [420, 422[420 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[r10|q]" v24|q -1 [424, 427[424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[r8|q]" v25|q -1 [426, 427[426 MustHaveRegister  "NoDefinitionFound"
  v26|q QWORD "[rcx|q]" v26|q -1 [426, 427[426 MustHaveRegister  "NoDefinitionFound"
  v27|d DWORD "[r9|d]" v27|d v5|d [428, 433[428 MustHaveRegister 430 ShouldHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rdx|d]" v28|d -1 [432, 436[432 MustHaveRegister 434 MustHaveRegister 436 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   88  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   90  <|@ instruction v8|QWORD = MOV input: [v6|QWORD + 208] size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|DWORD = MOV input: [v8|QWORD + 20] size: DWORD <|@ <|@
      nr   94  <|@ instruction v10|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   96  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   98  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v10|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  100  <|@ instruction v13|QWORD = MOVSXD value: v9|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: v8|QWORD, y: [v11|QWORD + v13|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v11|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v14|QWORD = MOV input: [v11|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction v15|DWORD = MOV input: [v14|QWORD] size: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  166  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction v17|QWORD = MOVSXD value: v16|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction v18|QWORD = MOV input: [v14|QWORD + v17|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v18|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction v19|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV (x: [v11|QWORD + 32], y: v8|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr  416  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v20|QWORD[.] + v5|DWORD * 4 + 16], ~expectedObject: -) {temp: v21|QWORD, temp2: v22|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  420  <|@ instruction v23|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction MOV (x: [v20|QWORD[.] + v5|DWORD * 4 + 16], y: v23|DWORD[_]) size: DWORD <|@ <|@
      nr  424  <|@ instruction v24|QWORD[.+] = LEA address: [v20|QWORD[.] + v5|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v24|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  428  <|@ instruction v27|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction v28|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr  434  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: v28|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 32[[486, 489[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[488, 489[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 30[[484, 489[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [30, 263[[264, 438[[466, 484[[492, 513[30 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister 434 MustHaveRegister 436 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [32, 263[[264, 427[[492, 513[32 MustHaveRegister 54 MustHaveRegister 94 MustHaveRegister 414 MustHaveRegister 420 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [34, 116[[126, 232[[264, 416[34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [36, 116[[126, 232[[264, 430[36 MustHaveRegister 42 MustHaveRegister 430 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [38, 88[38 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r9|d]" v5|d -1 [40, 116[[126, 232[[264, 428[40 MustHaveRegister 42 ShouldHaveRegister 418 MustHaveRegister 422 MustHaveRegister 424 MustHaveRegister 428 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[r8|q]" v6|q v4|d [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rcx|q]" v7|q -1 [86, 89[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r8|q]" v8|q -1 [90, 116[[136, 212[[264, 274[90 MustHaveRegister 92 MustHaveRegister 102 MustHaveRegister 146 MustHaveRegister 196 MustHaveRegister 211 LiveAtLoopEnd 274 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d -1 [92, 114[92 MustHaveRegister 100 ShouldHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rbx|d]" v10|d -1 [94, 98[94 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rbx|q]" v11|q v10|d [98, 116[[136, 212[[264, 274[98 MustHaveRegister 102 MustHaveRegister 146 ShouldHaveRegister 160 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdi|q]" v12|q -1 [96, 99[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdi|q]" v13|q -1 [100, 102[100 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rcx|q]" v14|q -1 [160, 212[160 MustHaveRegister 162 MustHaveRegister 194 MustHaveRegister 211 LiveAtLoopEnd  "NoSpillStore"
  v15|d DWORD "[rdi|d]" v15|d -1 [162, 212[162 MustHaveRegister 176 MustHaveRegister 211 LiveAtLoopEnd  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d v19|d [166, 208[176 ShouldHaveRegister 192 ShouldHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbp|q]" v17|q -1 [192, 194[192 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbp|q]" v18|q -1 [194, 196[194 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d v16|d [208, 211[208 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[r10|q]" v20|q v2|d [416, 424[416 MustHaveRegister 418 MustHaveRegister 422 MustHaveRegister 424 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[r8|q]" v21|q -1 [418, 419[418 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[rcx|q]" v22|q -1 [418, 419[418 MustHaveRegister  "NoDefinitionFound"
  v23|d DWORD "[r8|d]" v23|d v1|q [420, 422[420 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[r10|q]" v24|q -1 [424, 427[424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[r8|q]" v25|q -1 [426, 427[426 MustHaveRegister  "NoDefinitionFound"
  v26|q QWORD "[rcx|q]" v26|q -1 [426, 427[426 MustHaveRegister  "NoDefinitionFound"
  v27|d DWORD "[r9|d]" v27|d v5|d [428, 433[428 MustHaveRegister 430 ShouldHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rdx|d]" v28|d -1 [432, 436[432 MustHaveRegister 434 MustHaveRegister 436 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   88  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   90  <|@ instruction v8|QWORD = MOV input: [v6|QWORD + 208] size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|DWORD = MOV input: [v8|QWORD + 20] size: DWORD <|@ <|@
      nr   94  <|@ instruction v10|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   96  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   98  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v10|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  100  <|@ instruction v13|QWORD = MOVSXD value: v9|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: v8|QWORD, y: [v11|QWORD + v13|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v11|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v14|QWORD = MOV input: [v11|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction v15|DWORD = MOV input: [v14|QWORD] size: DWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  166  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction v17|QWORD = MOVSXD value: v16|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction v18|QWORD = MOV input: [v14|QWORD + v17|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v18|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction v19|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [v19|DWORD] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV (x: [v11|QWORD + 32], y: v8|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr  416  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v20|QWORD[.] + v5|DWORD * 4 + 16], ~expectedObject: -) {temp: v21|QWORD, temp2: v22|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  420  <|@ instruction v23|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction MOV (x: [v20|QWORD[.] + v5|DWORD * 4 + 16], y: v23|DWORD[_]) size: DWORD <|@ <|@
      nr  424  <|@ instruction v24|QWORD[.+] = LEA address: [v20|QWORD[.] + v5|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v24|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  428  <|@ instruction v27|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction v28|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr  434  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: v28|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 32[[486, 489[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[488, 489[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 30[[484, 489[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[488, 489[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [30, 263[[264, 438[[466, 484[[492, 513[30 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister 434 MustHaveRegister 436 MustHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [32, 263[[264, 427[[492, 513[32 MustHaveRegister 54 MustHaveRegister 94 MustHaveRegister 414 MustHaveRegister 420 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [34, 116[[126, 232[[264, 416[34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r11|d]" v3|d -1 [36, 116[[126, 232[[264, 430[36 MustHaveRegister 42 MustHaveRegister 430 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [38, 88[38 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r9|d]" v5|d -1 [40, 116[[126, 232[[264, 428[40 MustHaveRegister 42 ShouldHaveRegister 418 MustHaveRegister 422 MustHaveRegister 424 MustHaveRegister 428 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[r8|q]" v6|q v4|d [88, 90[88 MustHaveRegister 90 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rcx|q]" v7|q -1 [86, 89[86 MustHaveRegister 88 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r8|q]" v8|q -1 [90, 116[[136, 212[[264, 274[90 MustHaveRegister 92 MustHaveRegister 102 MustHaveRegister 146 MustHaveRegister 196 MustHaveRegister 211 LiveAtLoopEnd 274 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d -1 [92, 114[92 MustHaveRegister 100 ShouldHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[rbx|d]" v10|d -1 [94, 98[94 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rbx|q]" v11|q v10|d [98, 116[[136, 212[[264, 274[98 MustHaveRegister 102 MustHaveRegister 146 ShouldHaveRegister 160 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdi|q]" v12|q -1 [96, 99[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdi|q]" v13|q -1 [100, 102[100 MustHaveRegister 102 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rcx|q]" v14|q -1 [160, 212[160 MustHaveRegister 162 MustHaveRegister 194 MustHaveRegister 211 LiveAtLoopEnd  "NoSpillStore"
  v15|d DWORD "[rdi|d]" v15|d -1 [162, 212[162 MustHaveRegister 176 MustHaveRegister 211 LiveAtLoopEnd  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d v19|d [166, 208[176 ShouldHaveRegister 192 ShouldHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rbp|q]" v17|q -1 [192, 194[192 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbp|q]" v18|q -1 [194, 196[194 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d v16|d [208, 211[208 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[r10|q]" v20|q v2|d [416, 424[416 MustHaveRegister 418 MustHaveRegister 422 MustHaveRegister 424 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[r8|q]" v21|q -1 [418, 419[418 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[rcx|q]" v22|q -1 [418, 419[418 MustHaveRegister  "NoDefinitionFound"
  v23|d DWORD "[r8|d]" v23|d v1|q [420, 422[420 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[r10|q]" v24|q -1 [424, 427[424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[r8|q]" v25|q -1 [426, 427[426 MustHaveRegister  "NoDefinitionFound"
  v26|q QWORD "[rcx|q]" v26|q -1 [426, 427[426 MustHaveRegister  "NoDefinitionFound"
  v27|d DWORD "[r9|d]" v27|d v5|d [428, 433[428 MustHaveRegister 430 ShouldHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rdx|d]" v28|d -1 [432, 436[432 MustHaveRegister 434 MustHaveRegister 436 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   88  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   90  <|@ instruction v8|QWORD = MOV input: [v6|QWORD + 208] size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|DWORD = MOV input: [v8|QWORD + 20] size: DWORD <|@ <|@
      nr   94  <|@ instruction v10|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   96  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   98  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v10|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  100  <|@ instruction v13|QWORD = MOVSXD value: v9|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: v8|QWORD, y: [v11|QWORD + v13|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v11|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v14|QWORD = MOV input: [v11|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction v15|DWORD = MOV input: [v14|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  166  <|@ instruction [v16|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction v17|QWORD = MOVSXD value: v16|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction v18|QWORD = MOV input: [v14|QWORD + v17|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v18|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction v19|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV (x: [v11|QWORD + 32], y: v8|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr  416  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v20|QWORD[.] + v5|DWORD * 4 + 16], ~expectedObject: -) {temp: v21|QWORD, temp2: v22|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  420  <|@ instruction v23|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction MOV (x: [v20|QWORD[.] + v5|DWORD * 4 + 16], y: v23|DWORD[_]) size: DWORD <|@ <|@
      nr  424  <|@ instruction v24|QWORD[.+] = LEA address: [v20|QWORD[.] + v5|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v24|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  428  <|@ instruction v27|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction v28|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr  434  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: v28|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v4|DWORD = MOV input: [v2|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction v5|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   88  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   90  <|@ instruction v8|QWORD = MOV input: [v6|QWORD + 208] size: QWORD <|@ <|@
      nr   92  <|@ instruction v9|DWORD = MOV input: [v8|QWORD + 20] size: DWORD <|@ <|@
      nr   94  <|@ instruction v10|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   96  <|@ instruction v12|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   98  <|@ instruction v11|QWORD = UNCOMPRESSPOINTER (input: v10|DWORD, ~baseRegister: v12|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  100  <|@ instruction v13|QWORD = MOVSXD value: v9|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: v8|QWORD, y: [v11|QWORD + v13|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v11|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction v14|QWORD = MOV input: [v11|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction v15|DWORD = MOV input: [v14|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: v15|DWORD, y: v16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction v17|QWORD = MOVSXD value: v16|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction v18|QWORD = MOV input: [v14|QWORD + v17|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v18|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction v19|DWORD = INC value: v16|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV (x: [v11|QWORD + 32], y: v8|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [v1|QWORD[.]] state [bci:0] <|@ <|@
      nr  416  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v20|QWORD[.] + v5|DWORD * 4 + 16], ~expectedObject: -) {temp: v21|QWORD, temp2: v22|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  420  <|@ instruction v23|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction MOV (x: [v20|QWORD[.] + v5|DWORD * 4 + 16], y: v23|DWORD[_]) size: DWORD <|@ <|@
      nr  424  <|@ instruction v24|QWORD[.+] = LEA address: [v20|QWORD[.] + v5|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v24|QWORD[.+], ~newValue: v1|QWORD[.]) {temp: v25|QWORD, temp2: v26|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  428  <|@ instruction v27|DWORD = INC value: v5|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: v3|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction v28|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr  434  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v28|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: v28|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   88  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   90  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOV input: [r8|QWORD + 20] size: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   98  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  100  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOV input: [rcx|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r8|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr  416  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  420  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  424  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r8|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  428  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  434  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   88  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   90  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOV input: [r8|QWORD + 20] size: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   98  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  100  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOV input: [rcx|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r8|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr  416  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  420  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  424  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r8|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  428  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  434  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   88  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   90  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOV input: [r8|QWORD + 20] size: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   98  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  100  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOV input: [rcx|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r8|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr  416  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  420  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  424  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r8|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  428  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  434  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   88  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   90  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOV input: [r8|QWORD + 20] size: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   98  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  100  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOV input: [rcx|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r8|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr  416  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  420  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  424  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r8|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  428  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  434  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   88  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   90  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOV input: [r8|QWORD + 20] size: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   98  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  100  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOV input: [rcx|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r8|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr  416  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  420  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  424  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r8|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  428  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  434  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   88  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   90  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOV input: [r8|QWORD + 20] size: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   98  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  100  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOV input: [rcx|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r8|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr  416  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  420  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  424  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r8|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  428  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  434  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   88  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   90  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOV input: [r8|QWORD + 20] size: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   98  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  100  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOV input: [rcx|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r8|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr  416  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  420  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  424  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r8|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  428  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  434  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   88  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   90  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOV input: [r8|QWORD + 20] size: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   98  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  100  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOV input: [rcx|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r8|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr  416  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  420  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  424  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r8|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  428  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  434  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   88  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   90  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOV input: [r8|QWORD + 20] size: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   98  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  100  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr  416  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  420  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  424  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r8|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  428  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  434  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOV input: [rcx|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r8|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   88  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   90  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOV input: [r8|QWORD + 20] size: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   98  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  100  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr  416  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  420  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  424  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r8|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  428  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  434  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOV input: [rcx|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r8|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   88  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   90  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOV input: [r8|QWORD + 20] size: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   98  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  100  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr  416  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  420  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  424  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r8|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  428  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  434  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOV input: [rcx|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r8|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   88  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   90  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOV input: [r8|QWORD + 20] size: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   98  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  100  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr  416  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  420  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  424  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r8|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  428  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  434  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOV input: [rcx|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r8|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  488  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   88  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   90  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr   92  <|@ instruction rcx|DWORD = MOV input: [r8|QWORD + 20] size: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   98  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  100  <|@ instruction rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B18" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B19" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B13" 
    successors 
    xhandlers
    flags 
    probability 4599172445177051312
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4601778099247172813
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B2" "B4" "B12" "B7" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] Object[null] - 
>@ <|@ instruction NULLCHECK address: [rdx|QWORD[.]] state [bci:0] <|@ <|@
      nr  416  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  418  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  420  <|@ instruction r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  424  <|@ instruction r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  426  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r8|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab <|@ <|@
      nr  428  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  430  <|@ instruction CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  432  <|@ instruction rdx|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  434  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4604374172626321586
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors 
    xhandlers
    flags 
    probability 4604432006170444713
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4597274499619802317
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD <|@ <|@
      nr  162  <|@ instruction rdi|DWORD = MOV input: [rcx|QWORD] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  164  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590454763041212709
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr  194  <|@ instruction rbp|QWORD = MOV input: [rcx|QWORD + rbp|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  196  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4587109231889451769
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B11" 
    successors "B10" "B13" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594958362668583205
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592770899992431821
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B14" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B19" 
    xhandlers
    flags 
    probability 4590454763041212709
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4584793094938232657
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction MOV (x: [rbx|QWORD + 32], y: r8|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4574052715801443207
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  488  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47] <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD <|@ <|@
      nr  510  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  512  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_1       
     1: ifnonnull     12
     4: new           #65         // java.lang.NullPointerException
     7: dup           
     8: invokespecial #12         // java.lang.NullPointerException.<init>:()void
    11: athrow        
    12: aload_0       
    13: getfield      #0          // elements:java.lang.Object[]
    16: astore_2      
    17: aload_2       
    18: aload_0       
    19: getfield      #3          // tail:int
    22: aload_1       
    23: aastore       
    24: aload_0       
    25: getfield      #4          // head:int
    28: aload_0       
    29: aload_0       
    30: getfield      #3          // tail:int
    33: aload_2       
    34: arraylength   
    35: invokestatic  #15         // inc:(int, int)int
    38: dup_x1        
    39: putfield      #3          // tail:int
    42: if_icmpne     50
    45: aload_0       
    46: iconst_1      
    47: invokevirtual #14         // grow:(int)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f85c102000090909090909090909090909048896c2410448b5614468b1cd50c000000468b04d508000000448b4e10453bd90f8665020000909090904885d20f8419020000909090909090909090909090909048b90000002b787f00004e8d04014d8b80d0000000418b48148b5a0848bf0000002b787f0000488d1c1f4863f94c3b043b0f843a0000009090909083f9200f845e0100009090909090909090909041c78784040000d5bdffff49c7879004000000000000e8000000000f1f84000000000090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090850249c1e20341807f40000f842f000000438b4c8a1048c1e1034885c90f841d0000004d8b47284983f8000f849c0100004983e8084d8947284d0347384989084c8bc249c1e8034789448a104f8d548a104d8bc24c33c249c1e8160f844e0000004885d20f84450000004d8bc249c1e80948b900e0368d787f00004c03c141803802742bf08304240041803800742041c60000498b4f484885c90f843c0100004883e90849894f4849034f584c890141ffc1453bd9ba00000000410f4fd18956103b560c0f84a700000090909090909090909090488b6c24104883c418493ba7500400000f8701010000c3909090904c3bc30f84540000009090909090488b4b288b39b800000000e9320000006666660f1f84000000000066666690660f1f4400009090909090904863e8488b6ce9084c3bc50f842b00000090909090ffc0909090903bf87fdbe910000000909090e969feffff909090e961feffff909090e92cfeffff909090904c894320e94cfeffff9090909090909090ba01000000666690e8000000000f1f840000000000e93affffff9090909090909041c78784040000e5ccffff49c7879004000000000000e8000000000f1f84000000000048896c2410e800000000e930fdfffff448890c24e800000000e965fefffff44c890424e800000000e9c5fefffff4488d0debfeffff49898f68040000e9c4fcfffff441c78784040000f5d2ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000ed56ffff49c7879004000014000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 75 28 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD  <||@
  Comment 75 34 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 79 36 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 79 [rdx:0, rsi:0, r10:0]at java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 79 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 87 38 r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD  <||@
  Comment 95 40 r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 99 42 CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD  <||@
  Comment 108 block B1 null  <||@
  Comment 108 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 108 46 NOP  <||@
  Comment 109 48 NOP  <||@
  Comment 110 50 NOP  <||@
  Comment 111 52 NOP  <||@
  Comment 112 54 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD  <||@
  Comment 121 block B3 null  <||@
  Comment 121 56 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 121 58 NOP  <||@
  Comment 122 60 NOP  <||@
  Comment 123 62 NOP  <||@
  Comment 124 64 NOP  <||@
  Comment 125 66 NOP  <||@
  Comment 126 68 NOP  <||@
  Comment 127 70 NOP  <||@
  Comment 128 72 NOP  <||@
  Comment 129 74 NOP  <||@
  Comment 130 76 NOP  <||@
  Comment 131 78 NOP  <||@
  Comment 132 80 NOP  <||@
  Comment 133 82 NOP  <||@
  Comment 134 84 NOP  <||@
  Comment 135 86 rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 145 88 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0  <||@
  Comment 149 90 r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD  <||@
  Comment 156 92 rcx|DWORD = MOV input: [r8|QWORD + 20] size: DWORD  <||@
  Comment 160 94 rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 163 96 rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 173 98 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0  <||@
  Comment 177 100 rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD  <||@
  Comment 180 102 CMPBRANCH (x: r8|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD  <||@
  Comment 190 block B5 null  <||@
  Comment 190 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 190 106 NOP  <||@
  Comment 191 108 NOP  <||@
  Comment 192 110 NOP  <||@
  Comment 193 112 NOP  <||@
  Comment 194 114 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null  <||@
  Comment 203 block B18 null  <||@
  Comment 203 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 203 118 NOP  <||@
  Comment 204 120 NOP  <||@
  Comment 205 122 NOP  <||@
  Comment 206 124 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 206 block B19 null  <||@
  Comment 206 242 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 206 244 NOP  <||@
  Comment 207 246 NOP  <||@
  Comment 208 248 NOP  <||@
  Comment 209 250 NOP  <||@
  Comment 210 252 NOP  <||@
  Comment 211 254 NOP  <||@
  Comment 212 256 NOP  <||@
  Comment 213 258 MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD  <||@
  Comment 224 260 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 235 262 DEOPT info [bci:0]  <||@
  Comment 235 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 240 [rdx:0, rsi:0]at java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 248 block B4 null  <||@
  Comment 248 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 248 128 NOP  <||@
  Comment 249 130 NOP  <||@
  Comment 250 132 NOP  <||@
  Comment 251 134 JUMP ~outgoingValues: [] destination: B4 -> B14  <||@
  Comment 251 block B14 null  <||@
  Comment 251 278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 251 280 NOP  <||@
  Comment 252 282 NOP  <||@
  Comment 253 284 NOP  <||@
  Comment 254 286 NOP  <||@
  Comment 255 288 NOP  <||@
  Comment 256 290 NOP  <||@
  Comment 257 292 NOP  <||@
  Comment 258 294 NOP  <||@
  Comment 259 296 NOP  <||@
  Comment 260 298 NOP  <||@
  Comment 261 300 NOP  <||@
  Comment 262 302 NOP  <||@
  Comment 263 304 NOP  <||@
  Comment 264 306 NOP  <||@
  Comment 265 308 NOP  <||@
  Comment 266 310 NOP  <||@
  Comment 267 312 NOP  <||@
  Comment 268 314 NOP  <||@
  Comment 269 316 NOP  <||@
  Comment 270 318 NOP  <||@
  Comment 271 320 NOP  <||@
  Comment 272 322 NOP  <||@
  Comment 273 324 NOP  <||@
  Comment 274 326 NOP  <||@
  Comment 275 328 NOP  <||@
  Comment 276 330 NOP  <||@
  Comment 277 332 NOP  <||@
  Comment 278 334 NOP  <||@
  Comment 279 336 NOP  <||@
  Comment 280 338 NOP  <||@
  Comment 281 340 NOP  <||@
  Comment 282 342 NOP  <||@
  Comment 283 344 NOP  <||@
  Comment 284 346 NOP  <||@
  Comment 285 348 NOP  <||@
  Comment 286 350 NOP  <||@
  Comment 287 352 NOP  <||@
  Comment 288 354 NOP  <||@
  Comment 289 356 NOP  <||@
  Comment 290 358 NOP  <||@
  Comment 291 360 NOP  <||@
  Comment 292 362 NOP  <||@
  Comment 293 364 NOP  <||@
  Comment 294 366 NOP  <||@
  Comment 295 368 NOP  <||@
  Comment 296 370 NOP  <||@
  Comment 297 372 NOP  <||@
  Comment 298 374 NOP  <||@
  Comment 299 376 NOP  <||@
  Comment 300 378 NOP  <||@
  Comment 301 380 NOP  <||@
  Comment 302 382 NOP  <||@
  Comment 303 384 NOP  <||@
  Comment 304 386 NOP  <||@
  Comment 305 388 NOP  <||@
  Comment 306 390 NOP  <||@
  Comment 307 392 NOP  <||@
  Comment 308 394 NOP  <||@
  Comment 309 396 NOP  <||@
  Comment 310 398 NOP  <||@
  Comment 311 400 NOP  <||@
  Comment 312 402 NOP  <||@
  Comment 313 404 NOP  <||@
  Comment 314 406 NOP  <||@
  Comment 315 408 NOP  <||@
  Comment 316 410 NOP  <||@
  Comment 317 412 NOP  <||@
  Comment 318 414 NULLCHECK address: [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 318 [rdx:0, rsi:0, r10:0]at java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |Object[null]  |-   <||@
  Comment 318 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 320 416 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3  <||@
  Comment 324 418 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab  <||@
  Comment 382 420 r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3  <||@
  Comment 389 422 MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 394 424 r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD  <||@
  Comment 399 426 AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r8|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab  <||@
  Comment 493 428 r9|DWORD = INC value: r9|DWORD size: DWORD  <||@
  Comment 496 430 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 499 432 rdx|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r9|DWORD) condition: >  <||@
  Comment 508 434 MOV (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: DWORD  <||@
  Comment 511 436 CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD  <||@
  Comment 520 block B16 null  <||@
  Comment 520 438 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 520 440 NOP  <||@
  Comment 521 442 NOP  <||@
  Comment 522 444 NOP  <||@
  Comment 523 446 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 523 block B17 null  <||@
  Comment 523 448 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 523 450 NOP  <||@
  Comment 524 452 NOP  <||@
  Comment 525 454 NOP  <||@
  Comment 526 456 NOP  <||@
  Comment 527 458 NOP  <||@
  Comment 528 460 NOP  <||@
  Comment 529 462 NOP  <||@
  Comment 530 464 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 539 POLL_RETURN_FAR  <||@
  Comment 553 block B6 null  <||@
  Comment 553 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 553 138 NOP  <||@
  Comment 554 140 NOP  <||@
  Comment 555 142 NOP  <||@
  Comment 556 144 NOP  <||@
  Comment 557 146 CMPBRANCH (x: r8|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD  <||@
  Comment 566 block B8 null  <||@
  Comment 566 148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 566 150 NOP  <||@
  Comment 567 152 NOP  <||@
  Comment 568 154 NOP  <||@
  Comment 569 156 NOP  <||@
  Comment 570 158 NOP  <||@
  Comment 571 160 rcx|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD  <||@
  Comment 575 162 rdi|DWORD = MOV input: [rcx|QWORD] size: DWORD  <||@
  Comment 577 -1 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 582 164 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 587 block B10 loop 0 depth 1 header:121|LoopBegin  <||@
  Comment 587 178 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 608 180 NOP  <||@
  Comment 609 182 NOP  <||@
  Comment 610 184 NOP  <||@
  Comment 611 186 NOP  <||@
  Comment 612 188 NOP  <||@
  Comment 613 190 NOP  <||@
  Comment 614 192 rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD  <||@
  Comment 617 194 rbp|QWORD = MOV input: [rcx|QWORD + rbp|QWORD * 8 + 8] size: QWORD  <||@
  Comment 622 196 CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD  <||@
  Comment 631 block B11 loop 0 depth 1 header:121|LoopBegin  <||@
  Comment 631 198 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 631 200 NOP  <||@
  Comment 632 202 NOP  <||@
  Comment 633 204 NOP  <||@
  Comment 634 206 NOP  <||@
  Comment 635 208 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 637 210 JUMP ~outgoingValues: [] destination: B11 -> B9  <||@
  Comment 637 block B9 loop 0 depth 1 header:121|LoopBegin  <||@
  Comment 637 166 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 637 168 NOP  <||@
  Comment 638 170 NOP  <||@
  Comment 639 172 NOP  <||@
  Comment 640 174 NOP  <||@
  Comment 641 176 CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD  <||@
  Comment 650 block B7 null  <||@
  Comment 650 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 650 214 NOP  <||@
  Comment 651 216 NOP  <||@
  Comment 652 218 NOP  <||@
  Comment 653 220 JUMP ~outgoingValues: [] destination: B7 -> B14  <||@
  Comment 658 block B2 null  <||@
  Comment 658 222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 658 224 NOP  <||@
  Comment 659 226 NOP  <||@
  Comment 660 228 NOP  <||@
  Comment 661 230 JUMP ~outgoingValues: [] destination: B2 -> B14  <||@
  Comment 666 block B13 null  <||@
  Comment 666 232 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 666 234 NOP  <||@
  Comment 667 236 NOP  <||@
  Comment 668 238 NOP  <||@
  Comment 669 240 JUMP ~outgoingValues: [] destination: B13 -> B19  <||@
  Comment 674 block B12 null  <||@
  Comment 674 264 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 674 266 NOP  <||@
  Comment 675 268 NOP  <||@
  Comment 676 270 NOP  <||@
  Comment 677 272 NOP  <||@
  Comment 678 274 MOV (x: [rbx|QWORD + 32], y: r8|QWORD) size: QWORD  <||@
  Comment 682 276 JUMP ~outgoingValues: [] destination: B12 -> B14  <||@
  Comment 687 block B15 null  <||@
  Comment 687 466 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 687 468 NOP  <||@
  Comment 688 470 NOP  <||@
  Comment 689 472 NOP  <||@
  Comment 690 474 NOP  <||@
  Comment 691 476 NOP  <||@
  Comment 692 478 NOP  <||@
  Comment 693 480 NOP  <||@
  Comment 694 482 NOP  <||@
  Comment 695 486 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 700 488 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47]  <||@
  Comment 703 {HotSpotMethod<ArrayDeque.grow(int)>}  <||@
  Comment 703 INVOKESPECIAL  <||@
  Comment 708 []at java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 716 490 JUMP ~outgoingValues: [] destination: B15 -> B17  <||@
  Comment 721 block B20 null  <||@
  Comment 721 492 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 721 494 NOP  <||@
  Comment 722 496 NOP  <||@
  Comment 723 498 NOP  <||@
  Comment 724 500 NOP  <||@
  Comment 725 502 NOP  <||@
  Comment 726 504 NOP  <||@
  Comment 727 506 NOP  <||@
  Comment 728 508 MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD  <||@
  Comment 739 510 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 750 512 DEOPT info [bci:0]  <||@
  Comment 750 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 755 [rdx:0, rsi:0]at java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 768 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 783 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 798 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 823 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 851 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 856 [rdx:0, rsi:0, r10:0]at java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 886 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 891 [rdx:0, rsi:0, r10:0]at java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |Object[null]  |-   <||@
  Comment 899 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 899 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 905 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 905 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8448[java.util.ArrayDeque.addLast(Object)]"
  method "HotSpotCompilation-8448[java.util.ArrayDeque.addLast(Object)]"
  date 1724269759455
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af321a0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85c32e85fe66669089842400c0feff4883ec189041817f20000000000f85c102000090909090909090909090909048896c2410448b5614468b1cd50c000000468b04d508000000448b4e10453bd90f8665020000909090904885d20f8419020000909090909090909090909090909048b90000002b787f00004e8d04014d8b80d0000000418b48148b5a0848bf0000002b787f0000488d1c1f4863f94c3b043b0f843a0000009090909083f9200f845e0100009090909090909090909041c78784040000d5bdffff49c7879004000000000000e8ea8e85fe0f1f84000000000090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090850249c1e20341807f40000f842f000000438b4c8a1048c1e1034885c90f841d0000004d8b47284983f8000f849c0100004983e8084d8947284d0347384989084c8bc249c1e8034789448a104f8d548a104d8bc24c33c249c1e8160f844e0000004885d20f84450000004d8bc249c1e80948b900e0368d787f00004c03c141803802742bf08304240041803800742041c60000498b4f484885c90f843c0100004883e90849894f4849034f584c890141ffc1453bd9ba00000000410f4fd18956103b560c0f84a700000090909090909090909090488b6c24104883c418493ba7500400000f8701010000c3909090904c3bc30f84540000009090909090488b4b288b39b800000000e9320000006666660f1f84000000000066666690660f1f4400009090909090904863e8488b6ce9084c3bc50f842b00000090909090ffc0909090903bf87fdbe910000000909090e969feffff909090e961feffff909090e92cfeffff909090904c894320e94cfeffff9090909090909090ba01000000666690e81c2f85fe0f1f840054040003e93affffff9090909090909041c78784040000e5ccffff49c7879004000000000000e8e78c85fe0f1f84000000000048896c2410e87b8d83fee930fdfffff448890c24e84c5d99fee965fefffff44c890424e8bd7e99fee9c5fefffff4488d0debfeffff49898f68040000e9249b85fef441c78784040000f5d2ffff49c7879004000000000000e8828c85fe0f1f84000000000041c78784040000ed56ffff49c7879004000014000000e85f8c85fe0f1f840000000000e8d82d99fef4e8f28985fef4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 75 28 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@1d23a8a0 slotKind: QWORD  <||@
  Comment 75 34 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 79 36 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 79 [rdx:0, rsi:0, r10:0]at java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 79 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 87 38 r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD  <||@
  Comment 95 40 r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 99 42 CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: DWORD  <||@
  Comment 108 block B1 null  <||@
  Comment 108 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 108 46 NOP  <||@
  Comment 109 48 NOP  <||@
  Comment 110 50 NOP  <||@
  Comment 111 52 NOP  <||@
  Comment 112 54 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD  <||@
  Comment 121 block B3 null  <||@
  Comment 121 56 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 121 58 NOP  <||@
  Comment 122 60 NOP  <||@
  Comment 123 62 NOP  <||@
  Comment 124 64 NOP  <||@
  Comment 125 66 NOP  <||@
  Comment 126 68 NOP  <||@
  Comment 127 70 NOP  <||@
  Comment 128 72 NOP  <||@
  Comment 129 74 NOP  <||@
  Comment 130 76 NOP  <||@
  Comment 131 78 NOP  <||@
  Comment 132 80 NOP  <||@
  Comment 133 82 NOP  <||@
  Comment 134 84 NOP  <||@
  Comment 135 86 rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 145 88 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0  <||@
  Comment 149 90 r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD  <||@
  Comment 156 92 rcx|DWORD = MOV input: [r8|QWORD + 20] size: DWORD  <||@
  Comment 160 94 rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 163 96 rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 173 98 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 140154094223360 shift: 0  <||@
  Comment 177 100 rdi|QWORD = MOVSXD value: rcx|DWORD size: QWORD  <||@
  Comment 180 102 CMPBRANCH (x: r8|QWORD, y: [rbx|QWORD + rdi|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD  <||@
  Comment 190 block B5 null  <||@
  Comment 190 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 190 106 NOP  <||@
  Comment 191 108 NOP  <||@
  Comment 192 110 NOP  <||@
  Comment 193 112 NOP  <||@
  Comment 194 114 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.5 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B18 y: 32 size: DWORD inlinedY: null  <||@
  Comment 203 block B18 null  <||@
  Comment 203 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 203 118 NOP  <||@
  Comment 204 120 NOP  <||@
  Comment 205 122 NOP  <||@
  Comment 206 124 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 206 block B19 null  <||@
  Comment 206 242 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 206 244 NOP  <||@
  Comment 207 246 NOP  <||@
  Comment 208 248 NOP  <||@
  Comment 209 250 NOP  <||@
  Comment 210 252 NOP  <||@
  Comment 211 254 NOP  <||@
  Comment 212 256 NOP  <||@
  Comment 213 258 MOV x: [r15|QWORD + 1156] y: -16939 size: DWORD  <||@
  Comment 224 260 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 235 262 DEOPT info [bci:0]  <||@
  Comment 235 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 240 [rdx:0, rsi:0]at java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 248 block B4 null  <||@
  Comment 248 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 248 128 NOP  <||@
  Comment 249 130 NOP  <||@
  Comment 250 132 NOP  <||@
  Comment 251 134 JUMP ~outgoingValues: [] destination: B4 -> B14  <||@
  Comment 251 block B14 null  <||@
  Comment 251 278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 251 280 NOP  <||@
  Comment 252 282 NOP  <||@
  Comment 253 284 NOP  <||@
  Comment 254 286 NOP  <||@
  Comment 255 288 NOP  <||@
  Comment 256 290 NOP  <||@
  Comment 257 292 NOP  <||@
  Comment 258 294 NOP  <||@
  Comment 259 296 NOP  <||@
  Comment 260 298 NOP  <||@
  Comment 261 300 NOP  <||@
  Comment 262 302 NOP  <||@
  Comment 263 304 NOP  <||@
  Comment 264 306 NOP  <||@
  Comment 265 308 NOP  <||@
  Comment 266 310 NOP  <||@
  Comment 267 312 NOP  <||@
  Comment 268 314 NOP  <||@
  Comment 269 316 NOP  <||@
  Comment 270 318 NOP  <||@
  Comment 271 320 NOP  <||@
  Comment 272 322 NOP  <||@
  Comment 273 324 NOP  <||@
  Comment 274 326 NOP  <||@
  Comment 275 328 NOP  <||@
  Comment 276 330 NOP  <||@
  Comment 277 332 NOP  <||@
  Comment 278 334 NOP  <||@
  Comment 279 336 NOP  <||@
  Comment 280 338 NOP  <||@
  Comment 281 340 NOP  <||@
  Comment 282 342 NOP  <||@
  Comment 283 344 NOP  <||@
  Comment 284 346 NOP  <||@
  Comment 285 348 NOP  <||@
  Comment 286 350 NOP  <||@
  Comment 287 352 NOP  <||@
  Comment 288 354 NOP  <||@
  Comment 289 356 NOP  <||@
  Comment 290 358 NOP  <||@
  Comment 291 360 NOP  <||@
  Comment 292 362 NOP  <||@
  Comment 293 364 NOP  <||@
  Comment 294 366 NOP  <||@
  Comment 295 368 NOP  <||@
  Comment 296 370 NOP  <||@
  Comment 297 372 NOP  <||@
  Comment 298 374 NOP  <||@
  Comment 299 376 NOP  <||@
  Comment 300 378 NOP  <||@
  Comment 301 380 NOP  <||@
  Comment 302 382 NOP  <||@
  Comment 303 384 NOP  <||@
  Comment 304 386 NOP  <||@
  Comment 305 388 NOP  <||@
  Comment 306 390 NOP  <||@
  Comment 307 392 NOP  <||@
  Comment 308 394 NOP  <||@
  Comment 309 396 NOP  <||@
  Comment 310 398 NOP  <||@
  Comment 311 400 NOP  <||@
  Comment 312 402 NOP  <||@
  Comment 313 404 NOP  <||@
  Comment 314 406 NOP  <||@
  Comment 315 408 NOP  <||@
  Comment 316 410 NOP  <||@
  Comment 317 412 NOP  <||@
  Comment 318 414 NULLCHECK address: [rdx|QWORD[.]] state [bci:0]  <||@
  Comment 318 [rdx:0, rsi:0, r10:0]at java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |Object[null]  |-   <||@
  Comment 318 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 320 416 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3  <||@
  Comment 324 418 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + r9|DWORD * 4 + 16], ~expectedObject: -) {temp: r8|QWORD, temp2: rcx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab  <||@
  Comment 382 420 r8|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@313a7591 encoding: base: 0 shift: 3  <||@
  Comment 389 422 MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 394 424 r10|QWORD[.+] = LEA address: [r10|QWORD[.] + r9|DWORD * 4 + 16] size: QWORD  <||@
  Comment 399 426 AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r8|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@71304dab  <||@
  Comment 493 428 r9|DWORD = INC value: r9|DWORD size: DWORD  <||@
  Comment 496 430 CMP (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 499 432 rdx|DWORD = CMOVE (falseValue: int[0|0x0], ~trueValue: r9|DWORD) condition: >  <||@
  Comment 508 434 MOV (x: [rsi|QWORD[.] + 16], y: rdx|DWORD) size: DWORD  <||@
  Comment 511 436 CMPBRANCH (x: rdx|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 0.009243330097032265 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD  <||@
  Comment 520 block B16 null  <||@
  Comment 520 438 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 520 440 NOP  <||@
  Comment 521 442 NOP  <||@
  Comment 522 444 NOP  <||@
  Comment 523 446 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 523 block B17 null  <||@
  Comment 523 448 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 523 450 NOP  <||@
  Comment 524 452 NOP  <||@
  Comment 525 454 NOP  <||@
  Comment 526 456 NOP  <||@
  Comment 527 458 NOP  <||@
  Comment 528 460 NOP  <||@
  Comment 529 462 NOP  <||@
  Comment 530 464 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 539 POLL_RETURN_FAR  <||@
  Comment 553 block B6 null  <||@
  Comment 553 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 553 138 NOP  <||@
  Comment 554 140 NOP  <||@
  Comment 555 142 NOP  <||@
  Comment 556 144 NOP  <||@
  Comment 557 146 CMPBRANCH (x: r8|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: QWORD  <||@
  Comment 566 block B8 null  <||@
  Comment 566 148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 566 150 NOP  <||@
  Comment 567 152 NOP  <||@
  Comment 568 154 NOP  <||@
  Comment 569 156 NOP  <||@
  Comment 570 158 NOP  <||@
  Comment 571 160 rcx|QWORD = MOV input: [rbx|QWORD + 40] size: QWORD  <||@
  Comment 575 162 rdi|DWORD = MOV input: [rcx|QWORD] size: DWORD  <||@
  Comment 577 -1 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 582 164 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 587 block B10 loop 0 depth 1 header:121|LoopBegin  <||@
  Comment 587 178 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 608 180 NOP  <||@
  Comment 609 182 NOP  <||@
  Comment 610 184 NOP  <||@
  Comment 611 186 NOP  <||@
  Comment 612 188 NOP  <||@
  Comment 613 190 NOP  <||@
  Comment 614 192 rbp|QWORD = MOVSXD value: rax|DWORD size: QWORD  <||@
  Comment 617 194 rbp|QWORD = MOV input: [rcx|QWORD + rbp|QWORD * 8 + 8] size: QWORD  <||@
  Comment 622 196 CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B10 -> B12 falseDestination: B10 -> B11 size: QWORD  <||@
  Comment 631 block B11 loop 0 depth 1 header:121|LoopBegin  <||@
  Comment 631 198 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 631 200 NOP  <||@
  Comment 632 202 NOP  <||@
  Comment 633 204 NOP  <||@
  Comment 634 206 NOP  <||@
  Comment 635 208 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 637 210 JUMP ~outgoingValues: [] destination: B11 -> B9  <||@
  Comment 637 block B9 loop 0 depth 1 header:121|LoopBegin  <||@
  Comment 637 166 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 637 168 NOP  <||@
  Comment 638 170 NOP  <||@
  Comment 639 172 NOP  <||@
  Comment 640 174 NOP  <||@
  Comment 641 176 CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B13 size: DWORD  <||@
  Comment 650 block B7 null  <||@
  Comment 650 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 650 214 NOP  <||@
  Comment 651 216 NOP  <||@
  Comment 652 218 NOP  <||@
  Comment 653 220 JUMP ~outgoingValues: [] destination: B7 -> B14  <||@
  Comment 658 block B2 null  <||@
  Comment 658 222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 658 224 NOP  <||@
  Comment 659 226 NOP  <||@
  Comment 660 228 NOP  <||@
  Comment 661 230 JUMP ~outgoingValues: [] destination: B2 -> B14  <||@
  Comment 666 block B13 null  <||@
  Comment 666 232 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 666 234 NOP  <||@
  Comment 667 236 NOP  <||@
  Comment 668 238 NOP  <||@
  Comment 669 240 JUMP ~outgoingValues: [] destination: B13 -> B19  <||@
  Comment 674 block B12 null  <||@
  Comment 674 264 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 674 266 NOP  <||@
  Comment 675 268 NOP  <||@
  Comment 676 270 NOP  <||@
  Comment 677 272 NOP  <||@
  Comment 678 274 MOV (x: [rbx|QWORD + 32], y: r8|QWORD) size: QWORD  <||@
  Comment 682 276 JUMP ~outgoingValues: [] destination: B12 -> B14  <||@
  Comment 687 block B15 null  <||@
  Comment 687 466 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 687 468 NOP  <||@
  Comment 688 470 NOP  <||@
  Comment 689 472 NOP  <||@
  Comment 690 474 NOP  <||@
  Comment 691 476 NOP  <||@
  Comment 692 478 NOP  <||@
  Comment 693 480 NOP  <||@
  Comment 694 482 NOP  <||@
  Comment 695 486 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 700 488 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD] temps: [] callTarget: HotSpotMethod<ArrayDeque.grow(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:47]  <||@
  Comment 703 {HotSpotMethod<ArrayDeque.grow(int)>}  <||@
  Comment 703 INVOKESPECIAL  <||@
  Comment 708 []at java.util.ArrayDeque.addLast(ArrayDeque.java:306) [bci: 47, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 716 490 JUMP ~outgoingValues: [] destination: B15 -> B17  <||@
  Comment 721 block B20 null  <||@
  Comment 721 492 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 721 494 NOP  <||@
  Comment 722 496 NOP  <||@
  Comment 723 498 NOP  <||@
  Comment 724 500 NOP  <||@
  Comment 725 502 NOP  <||@
  Comment 726 504 NOP  <||@
  Comment 727 506 NOP  <||@
  Comment 728 508 MOV x: [r15|QWORD + 1156] y: -13083 size: DWORD  <||@
  Comment 739 510 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 750 512 DEOPT info [bci:0]  <||@
  Comment 750 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 755 [rdx:0, rsi:0]at java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 768 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 783 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 798 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 823 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 851 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 856 [rdx:0, rsi:0, r10:0]at java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 886 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 891 [rdx:0, rsi:0, r10:0]at java.util.ArrayDeque.addLast(ArrayDeque.java:301) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |Object[null]  |-   <||@
  Comment 899 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 899 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 905 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 905 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
